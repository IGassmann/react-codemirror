"use strict";(self.webpackChunk_uiw_react_codemirror=self.webpackChunk_uiw_react_codemirror||[]).push([[7761],{12294:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="REPORT zrosetta_base64_encode_data.\n\nDATA: li_client  TYPE REF TO if_http_client,\n      lv_encoded TYPE string,\n      lv_data    TYPE xstring.\n\n\ncl_http_client=>create_by_url(\n  EXPORTING\n    url    = 'http://rosettacode.org/favicon.ico'\n  IMPORTING\n    client = li_client ).\n\nli_client->send( ).\nli_client->receive( ).\n\nlv_data = li_client->response->get_data( ).\n\nCALL FUNCTION 'SSFC_BASE64_ENCODE'\n  EXPORTING\n    bindata = lv_data\n  IMPORTING\n    b64data = lv_encoded.\n\nWHILE strlen( lv_encoded ) > 100.\n  WRITE: / lv_encoded(100).\n  lv_encoded = lv_encoded+100.\nENDWHILE.\nWRITE: / lv_encoded.\n"},66170:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='// Contract simulating developers organization\ncontract HackBG =\n\n    record state = { developers: map(address, developer) }\n\n    record developer = { name: string\n                       , age: int\n                       , skillset: map(skill, experience) }\n\n    type skill = string\n    type experience = int\n\n    datatype event =\n          LogDeveloperAdded(indexed address, indexed int, string)\n\n    entrypoint init() : state = { developers = {} }\n\n    stateful entrypoint dev_add(account: address, dev_name: string, dev_age: int) =\n        require(!is_member(account), "ERROR_DEVELOPER_ALREADY_EXISTS")\n        let dev : developer = { name = dev_name\n                              , age = dev_age\n                              , skillset = {} }\n        put(state{ developers[account] = dev })\n        Chain.event(LogDeveloperAdded(account, Chain.timestamp, dev_name))\n\n    stateful entrypoint dev_update(account: address, dev_name: string, dev_age: int) =\n        require(is_member(account), "ERROR_DEVELOPER_DOES_NOT_EXIST")\n        put(state{ developers[account].name = dev_name })\n        put(state{ developers[account].age = dev_age })\n\n    function is_member(account: address) : bool =\n        Map.member(account, state.developers)\n\n    stateful entrypoint dev_skill_modify(account: address, skill: string, experience: int) =\n        put(state{ developers[account].skillset[skill] = experience })\n\n    entrypoint dev_get(account: address) : developer =\n        state.developers[account]'},33719:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="/* Using a single database query, find all the leads in\n    the database that have the same email address as any\n    of the leads being inserted or updated. */\nfor (Lead lead : [SELECT Email FROM Lead WHERE Email IN :leadMap.KeySet()]) {\n    Lead newLead = leadMap.get(lead.Email);\n    newLead.Email.addError('A lead with this email address already exists.');\n}\n"},30693:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="\u235d Conway's game of life\n\n\u235d This example was inspired by the impressive demo at\n\u235d http://www.youtube.com/watch?v=a9xAKttWgP4\n\n\u235d Create a matrix:\n\u235d     0 1 1\n\u235d     1 1 0\n\u235d     0 1 0\ncreature \u2190 (3 3 \u2374 \u2373 9) \u2208 1 2 3 4 7   \u235d Original creature from demo\ncreature \u2190 (3 3 \u2374 \u2373 9) \u2208 1 3 6 7 8   \u235d Glider\n\n\u235d Place the creature on a larger board, near the centre\nboard \u2190 \xaf1 \u2296 \xaf2 \u233d 5 7 \u2191 creature\n\n\u235d A function to move from one generation to the next\nlife \u2190 {\u2228/ 1 \u2375 \u2227 3 4 = \u2282+/ +\u233f 1 0 \xaf1 \u2218.\u2296 1 0 \xaf1 \u233d\xa8 \u2282\u2375}\n\n\u235d Compute n-th generation and format it as a\n\u235d character matrix\ngen \u2190 {' #'[(life \u2363 \u2375) board]}\n\n\u235d Show first three generations\n(gen 1) (gen 2) (gen 3)\n"},9601:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="# Create a resource group.\naz group create --name myResourceGroup --location westeurope\n\n# Create a new virtual machine, this creates SSH keys if not present.\naz vm create --resource-group myResourceGroup --name myVM --image UbuntuLTS --generate-ssh-keys"},85073:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="rem *******Begin Comment**************\nrem This program starts the superapp batch program on the network,\nrem directs the output to a file, and displays the file\nrem in Notepad.\nrem *******End Comment**************\n@echo off\nif exist C:output.txt goto EMPTYEXISTS\nsetlocal\n  path=g:programssuperapp;%path%\n  call superapp>C:output.txt\nendlocal\n:EMPTYEXISTS\nstart notepad c:output.txt"},52218:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="targetScope = 'subscription'\n\nparam deployStorage bool = true\n\n@description('The object ID of the principal that will get the role assignment')\nparam aadPrincipalId string\n\nmodule stg './storage.bicep' = if(deployStorage) {\n  name: 'storageDeploy'\n  scope: resourceGroup('another-rg') // this will target another resource group in the same subscription\n  params: {\n    storageAccountName: '<YOURUNIQUESTORAGENAME>'\n  }\n}\n\nvar contributor = 'b24988ac-6180-42a0-ab88-20f7382dd24c'\nresource roleDef 'Microsoft.Authorization/roleDefinitions@2018-01-01-preview' existing = {\n  name: contributor\n}\n\nresource rbac 'Microsoft.Authorization/roleAssignments@2020-04-01-preview' = {\n  name: guid(subscription().id, aadPrincipalId, contributor)\n  properties: {\n    roleDefinitionId: roleDef.id\n    principalId: aadPrincipalId\n  }\n}\n\noutput storageName array = stg.outputs.containerProps\n"},99610:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='[ This program prints "Hello World!" and a newline to the screen, its\n  length is 106 active command characters [it is not the shortest.]\n\n  This loop is a "comment loop", it\'s a simple way of adding a comment\n  to a BF program such that you don\'t have to worry about any command\n  characters. Any ".", ",", "+", "-", "<" and ">" characters are simply\n  ignored, the "[" and "]" characters just have to be balanced.\n]\n+++++ +++               Set Cell #0 to 8\n[\n    >++++               Add 4 to Cell #1; this will always set Cell #1 to 4\n    [                   as the cell will be cleared by the loop\n        >++             Add 2 to Cell #2\n        >+++            Add 3 to Cell #3\n        >+++            Add 3 to Cell #4\n        >+              Add 1 to Cell #5\n        <<<<-           Decrement the loop counter in Cell #1\n    ]                   Loop till Cell #1 is zero; number of iterations is 4\n    >+                  Add 1 to Cell #2\n    >+                  Add 1 to Cell #3\n    >-                  Subtract 1 from Cell #4\n    >>+                 Add 1 to Cell #6\n    [<]                 Move back to the first zero cell you find; this will\n                        be Cell #1 which was cleared by the previous loop\n    <-                  Decrement the loop Counter in Cell #0\n]                       Loop till Cell #0 is zero; number of iterations is 8\n\nThe result of this is:\nCell No :   0   1   2   3   4   5   6\nContents:   0   0  72 104  88  32   8\nPointer :   ^\n\n>>.                     Cell #2 has value 72 which is \'H\'\n>---.                   Subtract 3 from Cell #3 to get 101 which is \'e\'\n+++++++..+++.           Likewise for \'llo\' from Cell #3\n>>.                     Cell #5 is 32 for the space\n<-.                     Subtract 1 from Cell #4 for 87 to give a \'W\'\n<.                      Cell #3 was set to \'o\' from the end of \'Hello\'\n+++.------.--------.    Cell #3 for \'rl\' and \'d\'\n>>+.                    Add 1 to Cell #5 gives us an exclamation point\n>++.                    And finally a newline from Cell #6'},96034:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE file in the project root for full\n// license information.\n\n/*\n *  COMMAND LINE: -Ox -Gz -YX -UPROTOTYPES_REQUIRED\n */\n\n#pragma warning(disable : 4532)\n#pragma warning(disable : 4702)\n\n#if defined(_WIN32)\n\n#if defined(_M_SH)\n#define WIN_CE\n#endif\n\n#if defined(_M_AMD64)\n#define NEST_IN_FINALLY /* allow when __try nested in __finally OK */\n#endif\n\n#define NTSTATUS LONG\n#define EXCEPTION_NESTED_CALL 0x10\n#define RtlRaiseStatus(x) RaiseException((x), 0, 0, NULL)\n#define RtlRaiseException(x)                                                     RaiseException((x)->ExceptionCode, (x)->ExceptionFlags,                                       (x)->NumberParameters, (x)->ExceptionInformation)\n#define IN\n#define OUT\n#if !(defined(_M_IA64) || defined(_M_ALPHA) || defined(_M_PPC) ||                    defined(_M_AMD64) || defined(_M_ARM) || defined(_M_ARM64))\n#define i386 1\n#endif\n#define try __try\n#define except __except\n#define finally __finally\n#define leave __leave\n\n#endif\n\n#define WIN32_LEAN_AND_MEAN\n\n#include "stdio.h"\n#if defined(_M_IA64) || defined(_M_ALPHA) || defined(_M_PPC) ||                    defined(_M_AMD64) || defined(_M_ARM) || defined(_M_ARM64)\n#include "setjmpex.h"\n#else\n#include "setjmp.h"\n#endif\n#include "float.h"\n#include "windows.h"\n#include "math.h"\n\n#if !defined(STATUS_SUCCESS)\n#define STATUS_SUCCESS 0\n#endif\n#if !defined(STATUS_UNSUCCESSFUL)\n#define STATUS_UNSUCCESSFUL ((NTSTATUS)0xC0000001L)\n#endif\n\n//\n// Define switch constants.\n//\n\n#define BLUE 0\n#define RED 1\n\n//\n// Define function prototypes.\n//\n\nVOID addtwo(IN LONG First, IN LONG Second, IN PLONG Place);\n\nVOID bar1(IN NTSTATUS Status, IN PLONG Counter);\n\nVOID bar2(IN PLONG BlackHole, IN PLONG BadAddress, IN PLONG Counter);\n\nVOID dojump(IN jmp_buf JumpBuffer, IN PLONG Counter);\n\nLONG Echo(IN LONG Value);\n\n#if !defined(WIN_CE) // return through finally not allowed on WinCE\nVOID eret(IN NTSTATUS Status, IN PLONG Counter);\n#endif\n\nVOID except1(IN PLONG Counter);\n\nULONG\nexcept2(IN PEXCEPTION_POINTERS ExceptionPointers, IN PLONG Counter);\n\nULONG\nexcept3(IN PEXCEPTION_POINTERS ExceptionPointers, IN PLONG Counter);\n\nVOID foo1(IN NTSTATUS Status);\n\nVOID foo2(IN PLONG BlackHole, IN PLONG BadAddress);\n\n#if !defined(WIN_CE) // return from finally not allowed on WinCE\nVOID fret(IN PLONG Counter);\n#endif\n\nBOOLEAN\nTkm(VOID);\n\nVOID Test61Part2(IN OUT PULONG Counter);\n\ndouble SquareDouble(IN double op);\n\nDECLSPEC_NOINLINE\nULONG\nPgFilter(VOID)\n\n{\n\n  printf("filter entered...");\n  return EXCEPTION_EXECUTE_HANDLER;\n}\n\n#pragma warning(push)\n#pragma warning(disable : 4532)\n\nVOID PgTest69(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      *Fault += 1;\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 1) {\n          *State += 1;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 1) == 1) ? PgFilter() : EXCEPTION_CONTINUE_SEARCH) {\n    if (*State != 2) {\n      *Fault += 1;\n    }\n  }\n\n  return;\n}\n\nVOID PgTest70(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      *Fault += 1;\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 2) {\n          PgFilter();\n          return;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 2) == 2) ? EXCEPTION_EXECUTE_HANDLER\n                              : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\nVOID PgTest71(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        *Fault += 1;\n      }\n      finally {\n        if (AbnormalTermination()) {\n          if (*State == 3) {\n            *State += 3;\n            return;\n\n          } else {\n            *Fault += 1;\n          }\n        }\n      }\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 6) {\n          *State += 3;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 3) == 3) ? PgFilter() : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\nVOID PgTest72(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        *Fault += 1;\n      }\n      finally {\n        if (AbnormalTermination()) {\n          if (*State == 4) {\n            *State += 4;\n            return;\n\n          } else {\n            *Fault += 1;\n          }\n        }\n      }\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 8) {\n          *State += 4;\n          PgFilter();\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 4) == 4) ? EXCEPTION_EXECUTE_HANDLER\n                              : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\nVOID PgTest73(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        *Fault += 1;\n      }\n      finally {\n        if (AbnormalTermination()) {\n          if (*State == 5) {\n            *State += 5;\n\n          } else {\n            *Fault += 1;\n          }\n        }\n      }\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 10) {\n          *State += 5;\n          return;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 5) == 5) ? PgFilter() : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\nVOID PgTest74(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        *Fault += 1;\n      }\n      finally {\n        if (AbnormalTermination()) {\n          if (*State == 6) {\n            *State += 6;\n\n          } else {\n            *Fault += 1;\n          }\n        }\n      }\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 12) {\n          *State += 6;\n          PgFilter();\n          return;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 6) == 6) ? EXCEPTION_EXECUTE_HANDLER\n                              : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\nVOID PgTest75(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        try {\n          *Fault += 1;\n        }\n        finally {\n          if (AbnormalTermination()) {\n            if (*State == 7) {\n              *State += 7;\n              *Fault += 1;\n\n            } else {\n              *State += 10;\n            }\n          }\n        }\n      }\n      except(((*State += 7) == 7) ? EXCEPTION_EXECUTE_HANDLER\n                                  : EXCEPTION_CONTINUE_SEARCH) {\n        *Fault += 1;\n      }\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 28) {\n          *State += 7;\n          return;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 7) == 28) ? PgFilter() : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\nVOID PgTest76(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        try {\n          *Fault += 1;\n        }\n        finally {\n          if (AbnormalTermination()) {\n            if (*State == 8) {\n              *State += 8;\n              *Fault += 1;\n\n            } else {\n              *State += 10;\n            }\n          }\n        }\n      }\n      except(((*State += 8) == 8) ? EXCEPTION_EXECUTE_HANDLER\n                                  : EXCEPTION_CONTINUE_SEARCH) {\n        *Fault += 1;\n      }\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 32) {\n          *State += 8;\n          PgFilter();\n          return;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 8) == 32) ? EXCEPTION_EXECUTE_HANDLER\n                               : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\nVOID PgTest77(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        try {\n          *Fault += 1;\n        }\n        finally {\n          if (AbnormalTermination()) {\n            if (*State == 9) {\n              *State += 9;\n              *Fault += 1;\n\n            } else {\n              *State += 10;\n            }\n          }\n        }\n      }\n      except(((*State += 9) == 9) ? PgFilter() : EXCEPTION_CONTINUE_SEARCH) {\n        *Fault += 1;\n      }\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 36) {\n          *State += 9;\n          return;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 9) == 36) ? EXCEPTION_EXECUTE_HANDLER\n                               : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\nVOID PgTest78(IN PLONG State, IN PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        try {\n          *Fault += 1;\n        }\n        finally {\n          if (AbnormalTermination()) {\n            if (*State == 10) {\n              *State += 10;\n              PgFilter();\n              *Fault += 1;\n\n            } else {\n              *State += 10;\n            }\n          }\n        }\n      }\n      except(((*State += 10) == 10) ? EXCEPTION_EXECUTE_HANDLER\n                                    : EXCEPTION_CONTINUE_SEARCH) {\n        *Fault += 1;\n      }\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 40) {\n          *State += 10;\n          return;\n\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 10) == 40) ? EXCEPTION_EXECUTE_HANDLER\n                                : EXCEPTION_CONTINUE_SEARCH) {\n    *Fault += 1;\n  }\n\n  return;\n}\n\n#pragma warning(pop)\n\nVOID Test79(PLONG Counter, PLONG Fault)\n\n{\n\n  try {\n    try {\n      try {\n        *Fault += 1;\n      }\n      finally {\n        printf("finally 1...");\n        *Fault += 1;\n      }\n    }\n    finally { printf("finally 2..."); }\n  }\n  except(*Counter += 1, printf("filter 1..."), EXCEPTION_CONTINUE_SEARCH) {}\n\n  return;\n}\n\nULONG G;\n\nULONG\nTest80(VOID)\n\n{\n\n  G = 1;\n  try {\n    while (G) {\n      try {\n        if (G == 10) {\n          return 1;\n        }\n\n        if (G == 1) {\n          continue;\n        }\n      }\n      finally { G = 0; }\n    }\n  }\n  finally { G = 10; }\n\n  return 0;\n}\n\nvoid Test81(int *pCounter) {\n  volatile char *AvPtr = NULL;\n\n  __try {\n    __try { *AvPtr = \'\0\'; }\n    __except(EXCEPTION_EXECUTE_HANDLER) { __leave; }\n  }\n  __finally {\n    printf("in finally ");\n    *pCounter += 1;\n  }\n  return;\n}\n\nDECLSPEC_NOINLINE\nVOID Test82Foo(VOID)\n\n{\n  *(volatile int *)0 = 0;\n}\n\nVOID Test82(__inout PLONG Counter)\n\n{\n\n  int retval = 1;\n\n  __try {\n    __try { Test82Foo(); }\n    __finally {\n      switch (*Counter) {\n      case 0:\n        printf("something failed!\n");\n        retval = 6;\n        break;\n\n      case 1:\n        retval = 0;\n        break;\n\n      case 2:\n        printf("how did you get here?\n");\n        retval = 2;\n        break;\n\n      case 3:\n        printf("what?!?\n");\n        retval = 3;\n        break;\n\n      case 4:\n        printf("not correct\n");\n        retval = 4;\n        break;\n\n      case 5:\n        printf("error!\n");\n        retval = 5;\n        break;\n      }\n    }\n  }\n  __except(1){}\n\n  *Counter = retval;\n  return;\n}\n\nLONG Test83(VOID)\n\n{\n\n  G = 1;\n  try {\n    try {\n      while (G) {\n        try {\n          if (G == 10) {\n            return 1;\n          }\n\n          if (G == 1) {\n            continue;\n          }\n        }\n        finally { G = 0; }\n      }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { leave; }\n  }\n  finally { G = 10; }\n\n  return 0;\n}\n\nDECLSPEC_NOINLINE\nVOID Test84(_Inout_ PLONG Counter)\n\n{\n  volatile int *Fault = 0;\n\n  try {\n    try {\n      *Fault += 1;\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) {\n      try {\n        return;\n      }\n      finally { *Counter += 1; }\n    }\n  }\n  finally {\n\n    if (AbnormalTermination()) {\n      *Counter += 1;\n    }\n  }\n\n  return;\n}\n\nDECLSPEC_NOINLINE\nLONG Test85(_Inout_ PLONG Counter)\n\n{\n  volatile int *Fault = 0;\n\n  G = 1;\n  try {\n    try {\n      try {\n        while (G) {\n          try {\n            try {\n              if (G == 10) {\n                return 1;\n              }\n              try {\n                *Counter += 1;\n              }\n              except(EXCEPTION_EXECUTE_HANDLER) {}\n\n              if (G == 1) {\n                continue;\n              }\n            }\n            finally {\n              G = 0;\n              *Counter += 1;\n              *Fault += 1;\n            }\n          }\n          except(EXCEPTION_EXECUTE_HANDLER) {\n            *Counter += 1;\n            leave;\n          }\n        }\n      }\n      finally {\n        G = 10;\n        *Counter += 1;\n        *Fault += 1;\n      }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { *Counter += 1; }\n    *Counter += 1;\n  }\n  finally { *Counter += 1; }\n  return 1;\n}\n\nDECLSPEC_NOINLINE\nVOID Test86(_Inout_ PLONG Counter)\n\n{\n  volatile int *Fault = 0;\n\n  try {\n    try {\n      try {\n        try {\n          try {\n            try {\n              *Fault += 1;\n            }\n            except(printf("Filter1 %d..", *Counter),\n                   EXCEPTION_EXECUTE_HANDLER) {\n              try {\n                printf("Handler1 %d..", *Counter);\n                return;\n              }\n              finally {\n                printf("Finally1 %d..", *Counter);\n                *Counter += 1;\n              }\n            }\n          }\n          finally {\n            printf("Finally2 %d..", *Counter);\n            *Counter += 1;\n          }\n        }\n        except(EXCEPTION_EXECUTE_HANDLER) { leave; }\n      }\n      finally { *Counter += 1; }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { leave; }\n  }\n  finally { *Counter += 1; }\n\n  return;\n}\n\nVOID Test87(_Inout_ PLONG Counter)\n\n/*++\n\nRoutine Description:\n\n    This function verifies the behavior of nested exception dispatching.\n\nArguments:\n\n    Counter - Supplies a pointer to the state counter.\n\nReturn Value:\n    None.\n\n--*/\n\n{\n  volatile int *Fault = 0;\n\n//\n// N.B.  Disabled on x86 due to failing test case with handling of returns\n//       in nested termination handlers on x86.\n//\n//       Disabled on ARM due to failing test case with handling of abutting\n//       termination handlers within an except handler.\n//\n//       Disabled on AMD64 due to failing test case with handling of\n//       abutting termination handlers within an except handler when a\n//       non-local goto is involved.\n//\n\n#if !defined(_X86_)\n  try {\n    try {\n      try {\n        try {\n          try {\n            *Fault += 1;\n\n            try {\n            }\n            finally {\n              if (AbnormalTermination()) {\n                *Fault += 1;\n              }\n            }\n          }\n          finally {\n\n            if (AbnormalTermination()) {\n              if ((*Counter += 13) == 26) {\n                return;\n\n              } else {\n                *Fault += 1;\n              }\n            }\n          }\n        }\n        finally {\n          if (AbnormalTermination()) {\n            *Counter += 13;\n            *Fault += 1;\n          }\n        }\n      }\n      except(((*Counter += 13) == 13) ? EXCEPTION_EXECUTE_HANDLER\n                                      : EXCEPTION_CONTINUE_SEARCH) {\n        *Fault += 1;\n      }\n    }\n    except(((*Counter += 13) == 65) ? EXCEPTION_EXECUTE_HANDLER\n                                    : EXCEPTION_CONTINUE_SEARCH) {\n      try {\n        *Counter += 13;\n        return;\n      }\n      finally {\n        if (AbnormalTermination()) {\n          *Counter += 13;\n          goto Finish;\n        }\n      }\n    }\n  }\n  finally {\n\n    if (AbnormalTermination()) {\n      if ((*Counter += 13) == 104) {\n        goto Finish;\n      }\n    }\n  }\n\nFinish:\n#else\n  *Counter = 104;\n#endif\n\n  return;\n}\n\nVOID Test88(_Inout_ PLONG Counter)\n\n{\n  volatile int *Fault = 0;\n\n  try {\n    try {\n      try {\n        try {\n          try {\n            try {\n              try {\n                try {\n                  *Fault += 1;\n                }\n                except(((*Counter += 1) == 1) ? *Fault\n                                              : EXCEPTION_CONTINUE_SEARCH) {}\n              }\n              except(*Counter += 1, EXCEPTION_EXECUTE_HANDLER) { *Fault += 2; }\n            }\n            except(*Counter += 1, EXCEPTION_CONTINUE_SEARCH) { leave; }\n          }\n          except(*Counter += 1, EXCEPTION_CONTINUE_SEARCH) { leave; }\n        }\n        except(EXCEPTION_EXECUTE_HANDLER) {}\n      }\n      except(EXCEPTION_EXECUTE_HANDLER) {}\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { leave; }\n  }\n  finally { *Counter += 1; }\n}\n\nint main(int argc, char *argv[])\n\n{\n\n  PLONG BadAddress;\n  PCHAR BadByte;\n  PLONG BlackHole;\n  ULONG Index1;\n  ULONG Index2 = RED;\n  jmp_buf JumpBuffer;\n  LONG Counter;\n  EXCEPTION_RECORD ExceptionRecord;\n  double doubleresult;\n\n  //\n  // Announce start of exception test.\n  //\n\n  printf("Start of exception test\n");\n\n  //\n  // Initialize exception record.\n  //\n\n  ExceptionRecord.ExceptionCode = STATUS_INTEGER_OVERFLOW;\n  ExceptionRecord.ExceptionFlags = 0;\n  ExceptionRecord.ExceptionRecord = NULL;\n  ExceptionRecord.NumberParameters = 0;\n\n  //\n  // Initialize pointers.\n  //\n\n  BadAddress = (PLONG)NULL;\n  BadByte = (PCHAR)NULL;\n  BadByte += 1;\n  BlackHole = &Counter;\n\n  //\n  // Simply try statement with a finally clause that is entered sequentially.\n  //\n\n  printf("    test1...");\n  Counter = 0;\n  try {\n    Counter += 1;\n  }\n  finally {\n    if (abnormal_termination() == FALSE) {\n      Counter += 1;\n    }\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try statement with an exception clause that is never executed\n  // because there is no exception raised in the try clause.\n  //\n\n  printf("    test2...");\n  Counter = 0;\n  try {\n    Counter += 1;\n  }\n  except(Counter) { Counter += 1; }\n\n  if (Counter != 1) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try statement with an exception handler that is never executed\n  // because the exception expression continues execution.\n  //\n\n  printf("    test3...");\n  Counter = 0;\n  try {\n    Counter -= 1;\n    RtlRaiseException(&ExceptionRecord);\n  }\n  except(Counter) { Counter -= 1; }\n\n  if (Counter != -1) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try statement with an exception clause that is always executed.\n  //\n\n  printf("    test4...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  }\n  except(Counter) { Counter += 1; }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try statement with an exception clause that is always executed.\n  //\n\n  printf("    test5...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    *BlackHole += *BadAddress;\n  }\n  except(Counter) { Counter += 1; }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simply try statement with a finally clause that is entered as the\n  // result of an exception.\n  //\n\n  printf("    test6...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n      RtlRaiseException(&ExceptionRecord);\n    }\n    finally {\n      if (abnormal_termination() != FALSE) {\n        Counter += 1;\n      }\n    }\n  }\n  except(Counter) {\n    if (Counter == 2) {\n      Counter += 1;\n    }\n  }\n\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simply try statement with a finally clause that is entered as the\n  // result of an exception.\n  //\n\n  printf("    test7...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n      *BlackHole += *BadAddress;\n    }\n    finally {\n      if (abnormal_termination() != FALSE) {\n        Counter += 1;\n      }\n    }\n  }\n  except(Counter) {\n    if (Counter == 2) {\n      Counter += 1;\n    }\n  }\n\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try that calls a function which raises an exception.\n  //\n\n  printf("    test8...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    foo1(STATUS_ACCESS_VIOLATION);\n  }\n  except((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n             ? EXCEPTION_EXECUTE_HANDLER\n             : EXCEPTION_CONTINUE_SEARCH) {\n    Counter += 1;\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try that calls a function which raises an exception.\n  //\n\n  printf("    test9...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    foo2(BlackHole, BadAddress);\n  }\n  except((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n             ? EXCEPTION_EXECUTE_HANDLER\n             : EXCEPTION_CONTINUE_SEARCH) {\n    Counter += 1;\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try that calls a function which calls a function that\n  // raises an exception. The first function has a finally clause\n  // that must be executed for this test to work.\n  //\n\n  printf("    test10...");\n  Counter = 0;\n  try {\n    bar1(STATUS_ACCESS_VIOLATION, &Counter);\n  }\n  except((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n             ? EXCEPTION_EXECUTE_HANDLER\n             : EXCEPTION_CONTINUE_SEARCH) {\n    Counter -= 1;\n  }\n\n  if (Counter != 98) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try that calls a function which calls a function that\n  // raises an exception. The first function has a finally clause\n  // that must be executed for this test to work.\n  //\n\n  printf("    test11...");\n  Counter = 0;\n  try {\n    bar2(BlackHole, BadAddress, &Counter);\n  }\n  except((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n             ? EXCEPTION_EXECUTE_HANDLER\n             : EXCEPTION_CONTINUE_SEARCH) {\n    Counter -= 1;\n  }\n\n  if (Counter != 98) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A try within an except\n  //\n\n  printf("    test12...");\n  Counter = 0;\n  try {\n    foo1(STATUS_ACCESS_VIOLATION);\n  }\n  except((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n             ? EXCEPTION_EXECUTE_HANDLER\n             : EXCEPTION_CONTINUE_SEARCH) {\n    Counter += 1;\n    try {\n      foo1(STATUS_SUCCESS);\n    }\n    except((GetExceptionCode() == STATUS_SUCCESS) ? EXCEPTION_EXECUTE_HANDLER\n                                                  : EXCEPTION_CONTINUE_SEARCH) {\n      if (Counter != 1) {\n        printf("failed, count = %d\n", Counter);\n\n      } else {\n        printf("succeeded...");\n      }\n\n      Counter += 1;\n    }\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A try within an except\n  //\n\n  printf("    test13...");\n  Counter = 0;\n  try {\n    foo2(BlackHole, BadAddress);\n  }\n  except((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n             ? EXCEPTION_EXECUTE_HANDLER\n             : EXCEPTION_CONTINUE_SEARCH) {\n    Counter += 1;\n    try {\n      foo1(STATUS_SUCCESS);\n    }\n    except((GetExceptionCode() == STATUS_SUCCESS) ? EXCEPTION_EXECUTE_HANDLER\n                                                  : EXCEPTION_CONTINUE_SEARCH) {\n      if (Counter != 1) {\n        printf("failed, count = %d\n", Counter);\n\n      } else {\n        printf("succeeded...");\n      }\n\n      Counter += 1;\n    }\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#if !defined(WIN_CE) // gotos from except/finally not allowed on WinCE\n  //\n  // A goto from an exception clause that needs to pass\n  // through a finally\n  //\n\n  printf("    test14...");\n  Counter = 0;\n  try {\n    try {\n      foo1(STATUS_ACCESS_VIOLATION);\n    }\n    except((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n               ? EXCEPTION_EXECUTE_HANDLER\n               : EXCEPTION_CONTINUE_SEARCH) {\n      Counter += 1;\n      goto t9;\n    }\n  }\n  finally { Counter += 1; }\n\nt9:\n  ;\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A goto from an finally clause that needs to pass\n  // through a finally\n  //\n\n  printf("    test15...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n    }\n    finally {\n      Counter += 1;\n      goto t10;\n    }\n  }\n  finally { Counter += 1; }\n\nt10:\n  ;\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A goto from an exception clause that needs to pass\n  // through a finally into the outer finally clause.\n  //\n\n  printf("    test16...");\n  Counter = 0;\n  try {\n    try {\n      try {\n        Counter += 1;\n        foo1(STATUS_INTEGER_OVERFLOW);\n      }\n      except(EXCEPTION_EXECUTE_HANDLER) {\n        Counter += 1;\n        goto t11;\n      }\n    }\n    finally { Counter += 1; }\n  t11:\n    ;\n  }\n  finally { Counter += 1; }\n\n  if (Counter != 4) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A goto from an finally clause that needs to pass\n  // through a finally into the outer finally clause.\n  //\n\n  printf("    test17...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n    }\n    finally {\n      Counter += 1;\n      goto t12;\n    }\n  t12:\n    ;\n  }\n  finally { Counter += 1; }\n\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A return from an except clause\n  //\n\n  printf("    test18...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    eret(STATUS_ACCESS_VIOLATION, &Counter);\n  }\n  finally { Counter += 1; }\n\n  if (Counter != 4) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A return from a finally clause\n  //\n\n  printf("    test19...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    fret(&Counter);\n  }\n  finally { Counter += 1; }\n\n  if (Counter != 5) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif\n\n  //\n  // A simple set jump followed by a long jump.\n  //\n\n  printf("    test20...");\n  Counter = 0;\n  if (setjmp(JumpBuffer) == 0) {\n    Counter += 1;\n    longjmp(JumpBuffer, 1);\n\n  } else {\n    Counter += 1;\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A set jump followed by a long jump out of a finally clause that is\n  // sequentially executed.\n  //\n\n  printf("    test21...");\n  Counter = 0;\n  if (setjmp(JumpBuffer) == 0) {\n    try {\n      Counter += 1;\n    }\n    finally {\n      Counter += 1;\n      longjmp(JumpBuffer, 1);\n    }\n\n  } else {\n    Counter += 1;\n  }\n\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A set jump within a try clause followed by a long jump out of a\n  // finally clause that is sequentially executed.\n  //\n\n  printf("    test22...");\n  Counter = 0;\n  try {\n    if (setjmp(JumpBuffer) == 0) {\n      Counter += 1;\n\n    } else {\n      Counter += 1;\n    }\n  }\n  finally {\n    Counter += 1;\n    if (Counter == 2) {\n      Counter += 1;\n      longjmp(JumpBuffer, 1);\n    }\n  }\n\n  if (Counter != 5) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A set jump followed by a try/except, followed by a try/finally where\n  // the try body of the try/finally raises an exception that is handled\n  // by the try/excecpt which causes the try/finally to do a long jump out\n  // of a finally clause. This will create a collided unwind.\n  //\n\n  printf("    test23...");\n  Counter = 0;\n  if (setjmp(JumpBuffer) == 0) {\n    try {\n      try {\n        Counter += 1;\n        RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n      }\n      finally {\n        Counter += 1;\n        longjmp(JumpBuffer, 1);\n      }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 1; }\n\n  } else {\n    Counter += 1;\n  }\n\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A set jump followed by a try/except, followed by a several nested\n  // try/finally\'s where the inner try body of the try/finally raises an\n  // exception that is handled by the try/except which causes the\n  // try/finally to do a long jump out of a finally clause. This will\n  // create a collided unwind.\n  //\n\n  printf("    test24...");\n  Counter = 0;\n  if (setjmp(JumpBuffer) == 0) {\n    try {\n      try {\n        try {\n          try {\n            Counter += 1;\n            RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n          }\n          finally { Counter += 1; }\n        }\n        finally {\n          Counter += 1;\n          longjmp(JumpBuffer, 1);\n        }\n      }\n      finally { Counter += 1; }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 1; }\n\n  } else {\n    Counter += 1;\n  }\n\n  if (Counter != 5) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A set jump followed by a try/except, followed by a try/finally which\n  // calls a subroutine which contains a try finally that raises an\n  // exception that is handled to the try/except.\n  //\n\n  printf("    test25...");\n  Counter = 0;\n  if (setjmp(JumpBuffer) == 0) {\n    try {\n      try {\n        try {\n          Counter += 1;\n          dojump(JumpBuffer, &Counter);\n        }\n        finally { Counter += 1; }\n      }\n      finally { Counter += 1; }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 1; }\n\n  } else {\n    Counter += 1;\n  }\n\n  if (Counter != 7) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A set jump followed by a try/except, followed by a try/finally which\n  // calls a subroutine which contains a try finally that raises an\n  // exception that is handled to the try/except.\n  //\n\n  printf("    test26...");\n  Counter = 0;\n  if (setjmp(JumpBuffer) == 0) {\n    try {\n      try {\n        try {\n          try {\n            Counter += 1;\n            dojump(JumpBuffer, &Counter);\n          }\n          finally { Counter += 1; }\n        }\n        finally {\n          Counter += 1;\n          longjmp(JumpBuffer, 1);\n        }\n      }\n      finally { Counter += 1; }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 1; }\n\n  } else {\n    Counter += 1;\n  }\n\n  if (Counter != 8) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Test nested exceptions.\n  //\n\n  printf("    test27...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n      except1(&Counter);\n    }\n    except(except2(GetExceptionInformation(), &Counter)) { Counter += 2; }\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { Counter += 3; }\n\n  if (Counter != 55) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Simple try that causes an integer overflow exception.\n  //\n\n  printf("    test28...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    addtwo(0x7fff0000, 0x10000, &Counter);\n  }\n  except((GetExceptionCode() == STATUS_INTEGER_OVERFLOW)\n             ? EXCEPTION_EXECUTE_HANDLER\n             : EXCEPTION_CONTINUE_SEARCH) {\n    Counter += 1;\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n//\n// Simple try that raises an misaligned data exception.\n//\n#if !defined(i386) && !defined(_M_IA64) && !defined(_M_AMD64) &&                   !defined(_M_ARM) && !defined(_M_ARM64)\n  printf("    test29...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    foo2(BlackHole, (PLONG)BadByte);\n  }\n  except((GetExceptionCode() == STATUS_DATATYPE_MISALIGNMENT)\n             ? EXCEPTION_EXECUTE_HANDLER\n             : EXCEPTION_CONTINUE_SEARCH) {\n    Counter += 1;\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#endif\n  //\n  // Continue from a try body with an exception clause in a loop.\n  //\n\n  printf("    test30...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      if ((Index1 & 0x1) == 0) {\n        continue;\n\n      } else {\n        Counter += 1;\n      }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 40; }\n\n    Counter += 2;\n  }\n\n  if (Counter != 15) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#if !defined(WIN_CE) // gotos from try/finally not allowed on WinCE\n  //\n  // Continue from a try body with an finally clause in a loop.\n  //\n\n  printf("    test31...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      if ((Index1 & 0x1) == 0) {\n        continue;\n\n      } else {\n        Counter += 1;\n      }\n    }\n    finally { Counter += 2; }\n\n    Counter += 3;\n  }\n\n  if (Counter != 40) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif\n\n  //\n  // Continue from doubly nested try body with an exception clause in a\n  // loop.\n  //\n\n  printf("    test32...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      try {\n        if ((Index1 & 0x1) == 0) {\n          continue;\n\n        } else {\n          Counter += 1;\n        }\n      }\n      except(EXCEPTION_EXECUTE_HANDLER) { Counter += 10; }\n\n      Counter += 2;\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 20; }\n\n    Counter += 3;\n  }\n\n  if (Counter != 30) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#if !defined(WIN_CE) // gotos from try/finally not allowed on WinCE\n  //\n  // Continue from doubly nested try body with an finally clause in a loop.\n  //\n\n  printf("    test33...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      try {\n        if ((Index1 & 0x1) == 0) {\n          continue;\n\n        } else {\n          Counter += 1;\n        }\n      }\n      finally { Counter += 2; }\n\n      Counter += 3;\n    }\n    finally { Counter += 4; }\n\n    Counter += 5;\n  }\n\n  if (Counter != 105) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Continue from a finally clause in a loop.\n  //\n\n  printf("    test34...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      if ((Index1 & 0x1) == 0) {\n        Counter += 1;\n      }\n    }\n    finally {\n      Counter += 2;\n      continue;\n    }\n\n    Counter += 4;\n  }\n\n  if (Counter != 25) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Continue from a doubly nested finally clause in a loop.\n  //\n\n  printf("    test35...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      try {\n        if ((Index1 & 0x1) == 0) {\n          Counter += 1;\n        }\n      }\n      finally {\n        Counter += 2;\n        continue;\n      }\n\n      Counter += 4;\n    }\n    finally { Counter += 5; }\n\n    Counter += 6;\n  }\n\n  if (Counter != 75) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Continue from a doubly nested finally clause in a loop.\n  //\n\n  printf("    test36...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      try {\n        if ((Index1 & 0x1) == 0) {\n          Counter += 1;\n        }\n      }\n      finally { Counter += 2; }\n\n      Counter += 4;\n    }\n    finally {\n      Counter += 5;\n      continue;\n    }\n\n    Counter += 6;\n  }\n\n  if (Counter != 115) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif\n\n  //\n  // Break from a try body with an exception clause in a loop.\n  //\n\n  printf("    test37...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      if ((Index1 & 0x1) == 1) {\n        break;\n\n      } else {\n        Counter += 1;\n      }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 40; }\n\n    Counter += 2;\n  }\n\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#if !defined(WIN_CE) // gotos from try/finally not allowed on WinCE\n  //\n  // Break from a try body with an finally clause in a loop.\n  //\n\n  printf("    test38...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      if ((Index1 & 0x1) == 1) {\n        break;\n\n      } else {\n        Counter += 1;\n      }\n    }\n    finally { Counter += 2; }\n\n    Counter += 3;\n  }\n\n  if (Counter != 8) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif\n\n  //\n  // Break from doubly nested try body with an exception clause in a\n  // loop.\n  //\n\n  printf("    test39...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      try {\n        if ((Index1 & 0x1) == 1) {\n          break;\n\n        } else {\n          Counter += 1;\n        }\n      }\n      except(EXCEPTION_EXECUTE_HANDLER) { Counter += 10; }\n\n      Counter += 2;\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 20; }\n\n    Counter += 3;\n  }\n\n  if (Counter != 6) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#if !defined(WIN_CE) // gotos from try/finally not allowed on WinCE\n  //\n  // Break from doubly nested try body with an finally clause in a loop.\n  //\n\n  printf("    test40...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      try {\n        if ((Index1 & 0x1) == 1) {\n          break;\n\n        } else {\n          Counter += 1;\n        }\n      }\n      finally { Counter += 2; }\n\n      Counter += 3;\n    }\n    finally { Counter += 4; }\n\n    Counter += 5;\n  }\n\n  if (Counter != 21) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Break from a finally clause in a loop.\n  //\n\n  printf("    test41...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      if ((Index1 & 0x1) == 1) {\n        Counter += 1;\n      }\n    }\n    finally {\n      Counter += 2;\n      break;\n    }\n\n    Counter += 4;\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Break from a doubly nested finally clause in a loop.\n  //\n\n  printf("    test42...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      try {\n        if ((Index1 & 0x1) == 1) {\n          Counter += 1;\n        }\n      }\n      finally {\n        Counter += 2;\n        break;\n      }\n\n      Counter += 4;\n    }\n    finally { Counter += 5; }\n\n    Counter += 6;\n  }\n\n  if (Counter != 7) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Break from a doubly nested finally clause in a loop.\n  //\n\n  printf("    test43...");\n  Counter = 0;\n  for (Index1 = 0; Index1 < 10; Index1 += 1) {\n    try {\n      try {\n        if ((Index1 & 0x1) == 1) {\n          Counter += 1;\n        }\n      }\n      finally { Counter += 2; }\n\n      Counter += 4;\n    }\n    finally {\n      Counter += 5;\n      break;\n    }\n\n    Counter += 6;\n  }\n\n  if (Counter != 11) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif\n\n  //\n  // Break from a try body with an exception clause in a switch.\n  //\n\n  printf("    test44...");\n  Counter = 0;\n  Index1 = 1;\n  switch (Index2) {\n  case BLUE:\n    Counter += 100;\n    break;\n\n  case RED:\n    try {\n      if ((Index1 & 0x1) == 1) {\n        break;\n\n      } else {\n        Counter += 1;\n      }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 40; }\n\n    Counter += 2;\n    break;\n  }\n\n  if (Counter != 0) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#if !defined(WIN_CE) // gotos from try/finally not allowed on WinCE\n  //\n  // Break from a try body with an finally clause in a switch.\n  //\n\n  printf("    test45...");\n  Counter = 0;\n  Index1 = 1;\n  switch (Index2) {\n  case BLUE:\n    Counter += 100;\n    break;\n\n  case RED:\n    try {\n      if ((Index1 & 0x1) == 1) {\n        break;\n\n      } else {\n        Counter += 1;\n      }\n    }\n    finally { Counter += 2; }\n\n    Counter += 3;\n  }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif\n\n  //\n  // Break from doubly nested try body with an exception clause in a\n  // switch.\n  //\n\n  printf("    test46...");\n  Counter = 0;\n  Index1 = 1;\n  switch (Index2) {\n  case BLUE:\n    Counter += 100;\n    break;\n\n  case RED:\n    try {\n      try {\n        if ((Index1 & 0x1) == 1) {\n          break;\n\n        } else {\n          Counter += 1;\n        }\n      }\n      except(EXCEPTION_EXECUTE_HANDLER) { Counter += 10; }\n\n      Counter += 2;\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 20; }\n\n    Counter += 3;\n  }\n\n  if (Counter != 0) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#if !defined(WIN_CE) // gotos from try/finally not allowed on WinCE\n  //\n  // Break from doubly nested try body with an finally clause in a switch.\n  //\n\n  printf("    test47...");\n  Counter = 0;\n  Index1 = 1;\n  switch (Index2) {\n  case BLUE:\n    Counter += 100;\n    break;\n\n  case RED:\n    try {\n      try {\n        if ((Index1 & 0x1) == 1) {\n          break;\n\n        } else {\n          Counter += 1;\n        }\n      }\n      finally { Counter += 2; }\n\n      Counter += 3;\n    }\n    finally { Counter += 4; }\n\n    Counter += 5;\n  }\n\n  if (Counter != 6) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Break from a finally clause in a switch.\n  //\n\n  printf("    test48...");\n  Counter = 0;\n  Index1 = 1;\n  switch (Index2) {\n  case BLUE:\n    Counter += 100;\n    break;\n\n  case RED:\n    try {\n      if ((Index1 & 0x1) == 1) {\n        Counter += 1;\n      }\n    }\n    finally {\n      Counter += 2;\n      break;\n    }\n\n    Counter += 4;\n  }\n\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Break from a doubly nested finally clause in a switch.\n  //\n\n  printf("    test49...");\n  Counter = 0;\n  Index1 = 1;\n  switch (Index2) {\n  case BLUE:\n    Counter += 100;\n    break;\n\n  case RED:\n    try {\n      try {\n        if ((Index1 & 0x1) == 1) {\n          Counter += 1;\n        }\n      }\n      finally {\n        Counter += 2;\n        break;\n      }\n\n      Counter += 4;\n    }\n    finally { Counter += 5; }\n\n    Counter += 6;\n  }\n\n  if (Counter != 8) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Break from a doubly nested finally clause in a switch.\n  //\n\n  printf("    test50...");\n  Counter = 0;\n  Index1 = 1;\n  switch (Index2) {\n  case BLUE:\n    Counter += 100;\n    break;\n\n  case RED:\n    try {\n      try {\n        if ((Index1 & 0x1) == 1) {\n          Counter += 1;\n        }\n      }\n      finally { Counter += 2; }\n\n      Counter += 4;\n    }\n    finally {\n      Counter += 5;\n      break;\n    }\n\n    Counter += 6;\n  }\n\n  if (Counter != 12) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif\n\n  //\n  // Leave from an if in a simple try/finally.\n  //\n\n  printf("    test51...");\n  Counter = 0;\n  try {\n    if (Echo(Counter) == Counter) {\n      Counter += 3;\n      leave;\n\n    } else {\n      Counter += 100;\n    }\n  }\n  finally {\n    if (abnormal_termination() == FALSE) {\n      Counter += 5;\n    }\n  }\n\n  if (Counter != 8) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Leave from a loop in a simple try/finally.\n  //\n\n  printf("    test52...");\n  Counter = 0;\n  try {\n    for (Index1 = 0; Index1 < 10; Index1 += 1) {\n      if (Echo(Index1) == Index1) {\n        Counter += 3;\n        leave;\n      }\n\n      Counter += 100;\n    }\n  }\n  finally {\n    if (abnormal_termination() == FALSE) {\n      Counter += 5;\n    }\n  }\n\n  if (Counter != 8) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Leave from a switch in a simple try/finally.\n  //\n\n  printf("    test53...");\n  Counter = 0;\n  try {\n    switch (Index2) {\n    case BLUE:\n      break;\n\n    case RED:\n      Counter += 3;\n      leave;\n    }\n\n    Counter += 100;\n  }\n  finally {\n    if (abnormal_termination() == FALSE) {\n      Counter += 5;\n    }\n  }\n\n  if (Counter != 8) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Leave from an if in doubly nested try/finally followed by a leave\n  // from an if in the outer try/finally.\n  //\n\n  printf("    test54...");\n  Counter = 0;\n  try {\n    try {\n      if (Echo(Counter) == Counter) {\n        Counter += 3;\n        leave;\n\n      } else {\n        Counter += 100;\n      }\n    }\n    finally {\n      if (abnormal_termination() == FALSE) {\n        Counter += 5;\n      }\n    }\n\n    if (Echo(Counter) == Counter) {\n      Counter += 3;\n      leave;\n\n    } else {\n      Counter += 100;\n    }\n  }\n  finally {\n    if (abnormal_termination() == FALSE) {\n      Counter += 5;\n    }\n  }\n\n  if (Counter != 16) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#if !defined(WIN_CE) // leave from finally not allowed on WinCE\n  //\n  // Leave from an if in doubly nested try/finally followed by a leave\n  // from the finally of the outer try/finally.\n  //\n\n  printf("    test55...");\n  Counter = 0;\n  try {\n    try {\n      if (Echo(Counter) == Counter) {\n        Counter += 3;\n        leave;\n\n      } else {\n        Counter += 100;\n      }\n    }\n    finally {\n      if (abnormal_termination() == FALSE) {\n        Counter += 5;\n        leave;\n      }\n    }\n\n    Counter += 100;\n  }\n  finally {\n    if (abnormal_termination() == FALSE) {\n      Counter += 5;\n    }\n  }\n\n  if (Counter != 13) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif\n\n  //\n  // Try/finally within the except clause of a try/except that is always\n  // executed.\n  //\n\n  printf("    test56...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  }\n  except(Counter) {\n    try {\n      Counter += 3;\n    }\n    finally {\n      if (abnormal_termination() == FALSE) {\n        Counter += 5;\n      }\n    }\n  }\n\n  if (Counter != 9) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Try/finally within the finally clause of a try/finally.\n  //\n\n  printf("    test57...");\n  Counter = 0;\n  try {\n    Counter += 1;\n  }\n  finally {\n    if (abnormal_termination() == FALSE) {\n      try {\n        Counter += 3;\n      }\n      finally {\n        if (abnormal_termination() == FALSE) {\n          Counter += 5;\n        }\n      }\n    }\n  }\n\n  if (Counter != 9) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Try/except within the finally clause of a try/finally.\n  //\n\n  printf("    test58...");\n#if !defined(NEST_IN_FINALLY)\n  printf("skipped\n");\n#else\n  Counter = 0;\n  try {\n    Counter -= 1;\n  }\n  finally {\n    try {\n      Counter += 2;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    except(Counter) {\n      try {\n        Counter += 3;\n      }\n      finally {\n        if (abnormal_termination() == FALSE) {\n          Counter += 5;\n        }\n      }\n    }\n  }\n\n  if (Counter != 9) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif /* def(NEST_IN_FINALLY) */\n\n  //\n  // Try/except within the except clause of a try/except that is always\n  // executed.\n  //\n\n  printf("    test59...");\n  Counter = 0;\n  try {\n    Counter += 1;\n    RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  }\n  except(Counter) {\n    try {\n      Counter += 3;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    except(Counter - 3) { Counter += 5; }\n  }\n\n  if (Counter != 9) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Try with a Try which exits the scope with a goto\n  //\n\n  printf("    test60...");\n  Counter = 0;\n  try {\n    try {\n      goto outside;\n    }\n    except(1) { Counter += 1; }\n\n  outside:\n    RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  }\n  except(1) { Counter += 3; }\n\n  if (Counter != 3) {\n    printf("failed, count = %d\n", Counter);\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Try/except which gets an exception from a subfunction within\n  // a try/finally which has a try/except in the finally clause\n  //\n\n  printf("    test61...");\n#if !defined(NEST_IN_FINALLY)\n  printf("skipped\n");\n#else\n  Counter = 0;\n  try {\n    Test61Part2(&Counter);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { Counter += 11; }\n\n  if (Counter != 24) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n#endif /* def(NEST_IN_FINALLY) */\n\n  //\n  // Check for precision of exception on floating point\n  //\n\n  printf("    test62...");\n\n#if defined(i386) || defined(_M_IA64) || defined(_M_ALPHA) || defined(_M_AMD64)\n\n/* enable floating point overflow */\n#if defined(i386)\n  _control87(_control87(0, 0) & ~EM_OVERFLOW, _MCW_EM);\n#else\n  //\n  // use portable version of _control87\n  //\n  _controlfp(_controlfp(0, 0) & ~EM_OVERFLOW, _MCW_EM);\n#endif\n\n  Counter = 0;\n  try {\n    doubleresult = SquareDouble(1.7e300);\n\n    try {\n      doubleresult = SquareDouble(1.0);\n    }\n    except(1) { Counter += 3; }\n  }\n  except(1) { Counter += 1; }\n\n  if (Counter != 1) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n/* clear up pending unmasked exceptions and restore FP control registers */\n#if defined(i386)\n  _clear87();\n  _control87(_control87(0, 0) | EM_OVERFLOW, 0xfffff);\n#else\n  _clearfp();\n  _controlfp(_controlfp(0, 0) | EM_OVERFLOW, 0xfffff);\n#endif\n\n#else\n  printf("skipped\n");\n#endif\n\n  //\n  // A try/finally inside a try/except where an exception is raised in the\n  // try/finally.\n  //\n\n  printf("    test63...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n    }\n    finally {\n      Counter += 3;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n  }\n  except(1) { Counter += 6; }\n\n  if (Counter != 10) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A try/finally inside a try/except where an exception is raised in the\n  // in the try/except and the try/finally.\n  //\n\n  printf("    test64...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    finally {\n      Counter += 3;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n  }\n  except(1) { Counter += 6; }\n\n  if (Counter != 10) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A try/finally inside a try/except where an exception is raised in the\n  // try/finally.\n  //\n\n  printf("    test65...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n    }\n    finally {\n      Counter += 3;\n      *BlackHole += *BadAddress;\n      Counter += 13;\n    }\n  }\n  except(1) { Counter += 6; }\n\n  if (Counter != 10) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A try/finally inside a try/except where an exception is raised in the\n  // in the try/except and the try/finally.\n  //\n\n  printf("    test66...");\n  Counter = 0;\n  try {\n    try {\n      Counter += 1;\n      *BlackHole += *BadAddress;\n      Counter += 13;\n    }\n    finally {\n      Counter += 3;\n      *BlackHole += *BadAddress;\n      Counter += 13;\n    }\n  }\n  except(1) { Counter += 6; }\n\n  if (Counter != 10) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A try/finally inside a try/finally inside a try/except where an\n  // exception is raised in the in the try/except and in try/finally.\n  //\n\n  printf("    test67...");\n  try {\n    try {\n      *BlackHole += *BadAddress;\n    }\n    finally {\n      try {\n        Counter = 0;\n      }\n      finally {\n        if (Counter != 0) {\n          Counter += 1;\n        }\n      }\n\n      Counter += 1;\n      *BlackHole += *BadAddress;\n    }\n  }\n  except(1) { Counter += 1; }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // A try/finally inside a try/finally inside a try/except where an\n  // exception is raised in the in the try/except and in try/finally.\n  //\n\n  printf("    test68...");\n  try {\n    try {\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    finally {\n      try {\n        Counter = 0;\n      }\n      finally {\n        if (Counter != 0) {\n          Counter += 1;\n        }\n      }\n\n      Counter += 1;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n  }\n  except(1) { Counter += 1; }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n//\n// Patch guard test 69.\n//\n\n#if defined(_AMD64_) || defined(_X86_)\n\n  printf("    test69...");\n  Counter = 0;\n  try {\n    PgTest69(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test70...");\n  Counter = 0;\n  try {\n    PgTest70(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 2) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test71...");\n  Counter = 0;\n  try {\n    PgTest71(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 9) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test72...");\n  Counter = 0;\n  try {\n    PgTest72(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 12) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test73...");\n  Counter = 0;\n  try {\n    PgTest73(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 15) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test74...");\n  Counter = 0;\n  try {\n    PgTest74(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 18) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test75...");\n  Counter = 0;\n  try {\n    PgTest75(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 35) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test76...");\n  Counter = 0;\n  try {\n    PgTest76(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 40) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test77...");\n  Counter = 0;\n  try {\n    PgTest77(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 45) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test78...");\n  Counter = 0;\n  try {\n    PgTest78(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf("unexpected exception..."); }\n\n  if (Counter != 50) {\n    printf("failed, count = %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n#else\n  printf("    test69...filter entered...succeeded\n");\n  printf("    test70...filter entered...succeeded\n");\n  printf("    test71...filter entered...succeeded\n");\n  printf("    test72...filter entered...succeeded\n");\n  printf("    test73...filter entered...succeeded\n");\n  printf("    test74...filter entered...succeeded\n");\n  printf("    test75...filter entered...succeeded\n");\n  printf("    test76...filter entered...succeeded\n");\n  printf("    test77...filter entered...succeeded\n");\n  printf("    test78...filter entered...succeeded\n");\n#endif\n\n  if (LOBYTE(LOWORD(GetVersion())) < 6) {\n    printf("    test79...");\n    printf("filter 1...filter 2...finally 1...filter 1...filter 2...finally "\n           "2...passed\n");\n  } else {\n\n    printf("    test79...");\n    Counter = 0;\n    try {\n      Test79(&Counter, BadAddress);\n    }\n    except(printf("filter 2..."), EXCEPTION_EXECUTE_HANDLER) { Counter += 1; }\n\n    if (Counter == 3) {\n      printf("passed\n");\n\n    } else {\n      printf("failed  %d \n", Counter);\n    }\n  }\n\n  printf("    test80...");\n  if (Test80() != 0) {\n    printf("failed\n");\n\n  } else {\n    printf("passed\n");\n  }\n\n  printf("    test81...");\n  Counter = 0;\n  Test81(&Counter);\n  if (Counter != 1) {\n    printf("failed  %d \n", Counter);\n\n  } else {\n    printf("passed\n");\n  }\n\n  printf("    test82...");\n  Counter = 1;\n  Test82(&Counter);\n  if (Counter != 0) {\n    printf("failed\n");\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test83...");\n  if (Test83() != 0) {\n    printf("failed\n");\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test84...");\n  Counter = 0;\n  Test84(&Counter);\n  if (Counter != 2) {\n    printf("failed\n");\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test85...");\n  Counter = 0;\n  Test85(&Counter);\n  if (Counter != 7) {\n    printf("failed\n");\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test86...");\n  Counter = 0;\n  Test86(&Counter);\n  if (Counter != 4) {\n    printf("failed %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test87...");\n  Counter = 0;\n  Test87(&Counter);\n  if (Counter != 104) {\n    printf("failed %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  printf("    test88...");\n  Counter = 0;\n  Test88(&Counter);\n  if (Counter != 6) {\n    printf("failed %d\n", Counter);\n\n  } else {\n    printf("succeeded\n");\n  }\n\n  //\n  // Announce end of exception test.\n  //\n\n  printf("End of exception test\n");\n  return;\n}\n\n#pragma optimize("a", off)\nVOID addtwo(long First, long Second, long *Place)\n\n{\n\n  RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  *Place = First + Second;\n  return;\n}\n#pragma optimize("", on)\n\nVOID bar1(IN NTSTATUS Status, IN PLONG Counter) {\n\n  try {\n    foo1(Status);\n  }\n  finally {\n    if (abnormal_termination() != FALSE) {\n      *Counter = 99;\n\n    } else {\n      *Counter = 100;\n    }\n  }\n\n  return;\n}\n\nVOID bar2(IN PLONG BlackHole, IN PLONG BadAddress, IN PLONG Counter) {\n\n  try {\n    foo2(BlackHole, BadAddress);\n  }\n  finally {\n    if (abnormal_termination() != FALSE) {\n      *Counter = 99;\n\n    } else {\n      *Counter = 100;\n    }\n  }\n\n  return;\n}\n\nVOID dojump(IN jmp_buf JumpBuffer, IN PLONG Counter)\n\n{\n\n  try {\n    try {\n      *Counter += 1;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    finally { *Counter += 1; }\n  }\n  finally {\n    *Counter += 1;\n    longjmp(JumpBuffer, 1);\n  }\n}\n\n#if !defined(WIN_CE) // return through finally not allowed on WinCE\nVOID eret(IN NTSTATUS Status, IN PLONG Counter)\n\n{\n\n  try {\n    try {\n      foo1(Status);\n    }\n    except((GetExceptionCode() == Status) ? EXCEPTION_EXECUTE_HANDLER\n                                          : EXCEPTION_CONTINUE_SEARCH) {\n      *Counter += 1;\n      return;\n    }\n  }\n  finally { *Counter += 1; }\n\n  return;\n}\n#endif\n\nVOID except1(IN PLONG Counter)\n\n{\n\n  try {\n    *Counter += 5;\n    RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  }\n  except(except3(GetExceptionInformation(), Counter)) { *Counter += 7; }\n\n  *Counter += 9;\n  return;\n}\n\nULONG\nexcept2(IN PEXCEPTION_POINTERS ExceptionPointers, IN PLONG Counter)\n\n{\n\n  PEXCEPTION_RECORD ExceptionRecord;\n\n  ExceptionRecord = ExceptionPointers->ExceptionRecord;\n  if ((ExceptionRecord->ExceptionCode == STATUS_UNSUCCESSFUL) &&\n      ((ExceptionRecord->ExceptionFlags & EXCEPTION_NESTED_CALL) == 0)) {\n    *Counter += 11;\n    return EXCEPTION_EXECUTE_HANDLER;\n\n  } else {\n    *Counter += 13;\n    return EXCEPTION_CONTINUE_SEARCH;\n  }\n}\n\nULONG\nexcept3(IN PEXCEPTION_POINTERS ExceptionPointers, IN PLONG Counter)\n\n{\n\n  PEXCEPTION_RECORD ExceptionRecord;\n\n  ExceptionRecord = ExceptionPointers->ExceptionRecord;\n  if ((ExceptionRecord->ExceptionCode == STATUS_INTEGER_OVERFLOW) &&\n      ((ExceptionRecord->ExceptionFlags & EXCEPTION_NESTED_CALL) == 0)) {\n    *Counter += 17;\n    RtlRaiseStatus(STATUS_UNSUCCESSFUL);\n\n  } else if ((ExceptionRecord->ExceptionCode == STATUS_UNSUCCESSFUL) &&\n             ((ExceptionRecord->ExceptionFlags & EXCEPTION_NESTED_CALL) != 0)) {\n    *Counter += 19;\n    return EXCEPTION_CONTINUE_SEARCH;\n  }\n\n  *Counter += 23;\n  return EXCEPTION_EXECUTE_HANDLER;\n}\n\nVOID foo1(IN NTSTATUS Status)\n\n{\n\n  //\n  // Raise exception.\n  //\n\n  RtlRaiseStatus(Status);\n  return;\n}\n\nVOID foo2(IN PLONG BlackHole, IN PLONG BadAddress)\n\n{\n\n  //\n  // Raise exception.\n  //\n\n  *BlackHole += *BadAddress;\n  return;\n}\n\n#if !defined(WIN_CE) // return from finally not allowed on WinCE\nVOID fret(IN PLONG Counter)\n\n{\n\n  try {\n    try {\n      *Counter += 1;\n    }\n    finally {\n      *Counter += 1;\n      return;\n    }\n  }\n  finally { *Counter += 1; }\n\n  return;\n}\n#endif\n\nLONG Echo(IN LONG Value)\n\n{\n  return Value;\n}\n\n#if defined(NEST_IN_FINALLY)\nVOID Test61Part2(IN OUT PULONG Counter) {\n  try {\n    *Counter -= 1;\n    RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  }\n  finally {\n    try {\n      *Counter += 2;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { *Counter += 5; }\n    *Counter += 7;\n  }\n}\n#endif /* def(NEST_IN_FINALLY) */\n\ndouble SquareDouble(IN double op) {\n  return exp(2.0 * log(op));\n}\n'},79072:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="type storage = int\ntype parameter =\n  Increment of int\n| Decrement of int\n| Reset\ntype return = operation list * storage\n// Two entrypoints\nlet add (store, delta : storage * int) : storage = store + delta\nlet sub (store, delta : storage * int) : storage = store - delta\n(* Main access point that dispatches to the entrypoints according to\n   the smart contract parameter. *)\nlet main (action, store : parameter * storage) : return =\n ([] : operation list),    // No operations\n (match action with\n   Increment (n) -> add (store, n)\n | Decrement (n) -> sub (store, n)\n | Reset         -> 0)\n"},86580:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="/* C demo code */\n\n#include <zmq.h>\n#include <pthread.h>\n#include <semaphore.h>\n#include <time.h>\n#include <stdio.h>\n#include <fcntl.h>\n#include <malloc.h>\n\ntypedef struct {\n  void* arg_socket;\n  zmq_msg_t* arg_msg;\n  char* arg_string;\n  unsigned long arg_len;\n  int arg_int, arg_command;\n\n  int signal_fd;\n  int pad;\n  void* context;\n  sem_t sem;\n} acl_zmq_context;\n\n#define p(X) (context->arg_##X)\n\nvoid* zmq_thread(void* context_pointer) {\n  acl_zmq_context* context = (acl_zmq_context*)context_pointer;\n  char ok = 'K', err = 'X';\n  int res;\n\n  while (1) {\n    while ((res = sem_wait(&context->sem)) == EINTR);\n    if (res) {write(context->signal_fd, &err, 1); goto cleanup;}\n    switch(p(command)) {\n    case 0: goto cleanup;\n    case 1: p(socket) = zmq_socket(context->context, p(int)); break;\n    case 2: p(int) = zmq_close(p(socket)); break;\n    case 3: p(int) = zmq_bind(p(socket), p(string)); break;\n    case 4: p(int) = zmq_connect(p(socket), p(string)); break;\n    case 5: p(int) = zmq_getsockopt(p(socket), p(int), (void*)p(string), &p(len)); break;\n    case 6: p(int) = zmq_setsockopt(p(socket), p(int), (void*)p(string), p(len)); break;\n    case 7: p(int) = zmq_send(p(socket), p(msg), p(int)); break;\n    case 8: p(int) = zmq_recv(p(socket), p(msg), p(int)); break;\n    case 9: p(int) = zmq_poll(p(socket), p(int), p(len)); break;\n    }\n    p(command) = errno;\n    write(context->signal_fd, &ok, 1);\n  }\n cleanup:\n  close(context->signal_fd);\n  free(context_pointer);\n  return 0;\n}\n\nvoid* zmq_thread_init(void* zmq_context, int signal_fd) {\n  acl_zmq_context* context = malloc(sizeof(acl_zmq_context));\n  pthread_t thread;\n\n  context->context = zmq_context;\n  context->signal_fd = signal_fd;\n  sem_init(&context->sem, 1, 0);\n  pthread_create(&thread, 0, &zmq_thread, context);\n  pthread_detach(thread);\n  return context;\n}\n"},93978:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='(ns game-of-life\n  "Conway\'s Game of Life, based on the work of\n  Christophe Grand (http://clj-me.cgrand.net/2011/08/19/conways-game-of-life)\n  and Laurent Petit (https://gist.github.com/1200343).")\n\n;;; Core game of life\'s algorithm functions\n\n(defn neighbors\n  "Given a cell\'s coordinates `[x y]`, returns the coordinates of its\n  neighbors."\n  [[x y]]\n  (for [dx [-1 0 1]\n        dy (if (zero? dx)\n             [-1 1]\n             [-1 0 1])]\n    [(+ dx x) (+ dy y)]))\n\n(defn step\n  "Given a set of living `cells`, computes the new set of living cells."\n  [cells]\n  (set (for [[cell n] (frequencies (mapcat neighbors cells))\n             :when (or (= n 3)\n                       (and (= n 2)\n                            (cells cell)))]\n         cell)))\n\n;;; Utility methods for displaying game on a text terminal\n\n(defn print-grid\n  "Prints a `grid` of `w` columns and `h` rows, on *out*, representing a\n  step in the game."\n  [grid w h]\n  (doseq [x (range (inc w))\n          y (range (inc h))]\n    (when (= y 0) (println))\n    (print (if (grid [x y])\n             "[X]"\n             " . "))))\n\n(defn print-grids\n  "Prints a sequence of `grids` of `w` columns and `h` rows on *out*,\n  representing several steps."\n  [grids w h]\n  (doseq [grid grids]\n    (print-grid grid w h)\n    (println)))\n\n;;; Launches an example grid\n\n(def grid\n  "`grid` represents the initial set of living cells"\n  #{[2 1] [2 2] [2 3]})\n\n(print-grids (take 3 (iterate step grid)) 5 5)'},66361:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# vim: syntax=cmake\nif(NOT CMAKE_BUILD_TYPE)\n    # default to Release build for GCC builds\n    set(CMAKE_BUILD_TYPE Release CACHE STRING\n        "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel."\n        FORCE)\nendif()\nmessage(STATUS "cmake version ${CMAKE_VERSION}")\nif(POLICY CMP0025)\n    cmake_policy(SET CMP0025 OLD) # report Apple\'s Clang as just Clang\nendif()\nif(POLICY CMP0042)\n    cmake_policy(SET CMP0042 NEW) # MACOSX_RPATH\nendif()\n\nproject (x265)\ncmake_minimum_required (VERSION 2.8.8) # OBJECT libraries require 2.8.8\ninclude(CheckIncludeFiles)\ninclude(CheckFunctionExists)\ninclude(CheckSymbolExists)\ninclude(CheckCXXCompilerFlag)\n\n# X265_BUILD must be incremented each time the public API is changed\nset(X265_BUILD 48)\nconfigure_file("${PROJECT_SOURCE_DIR}/x265.def.in"\n               "${PROJECT_BINARY_DIR}/x265.def")\nconfigure_file("${PROJECT_SOURCE_DIR}/x265_config.h.in"\n               "${PROJECT_BINARY_DIR}/x265_config.h")\n\nSET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake" "${CMAKE_MODULE_PATH}")\n\n# System architecture detection\nstring(TOLOWER "${CMAKE_SYSTEM_PROCESSOR}" SYSPROC)\nset(X86_ALIASES x86 i386 i686 x86_64 amd64)\nlist(FIND X86_ALIASES "${SYSPROC}" X86MATCH)\nif("${SYSPROC}" STREQUAL "" OR X86MATCH GREATER "-1")\n    message(STATUS "Detected x86 target processor")\n    set(X86 1)\n    add_definitions(-DX265_ARCH_X86=1)\n    if("${CMAKE_SIZEOF_VOID_P}" MATCHES 8)\n        set(X64 1)\n        add_definitions(-DX86_64=1)\n    endif()\nelseif(${SYSPROC} STREQUAL "armv6l")\n    message(STATUS "Detected ARM target processor")\n    set(ARM 1)\n    add_definitions(-DX265_ARCH_ARM=1 -DHAVE_ARMV6=1)\nelse()\n    message(STATUS "CMAKE_SYSTEM_PROCESSOR value `${ CMAKE_SYSTEM_PROCESSOR }` is unknown")\n    message(STATUS "Please add this value near ${CMAKE_CURRENT_LIST_FILE}:${CMAKE_CURRENT_LIST_LINE}")\nendif()\n\nif(UNIX)\n    list(APPEND PLATFORM_LIBS pthread)\n    find_library(LIBRT rt)\n    if(LIBRT)\n        list(APPEND PLATFORM_LIBS rt)\n    endif()\n    find_package(Numa)\n    if(NUMA_FOUND)\n        list(APPEND CMAKE_REQUIRED_LIBRARIES ${NUMA_LIBRARY})\n        check_symbol_exists(numa_node_of_cpu numa.h NUMA_V2)\n        if(NUMA_V2)\n            add_definitions(-DHAVE_LIBNUMA)\n            message(STATUS "libnuma found, building with support for NUMA nodes")\n            list(APPEND PLATFORM_LIBS ${NUMA_LIBRARY})\n            link_directories(${NUMA_LIBRARY_DIR})\n            include_directories(${NUMA_INCLUDE_DIR})\n        endif()\n    endif()\n    mark_as_advanced(LIBRT NUMA_FOUND)\nendif(UNIX)\n\nif(X64 AND NOT WIN32)\n    option(ENABLE_PIC "Enable Position Independent Code" ON)\nelse()\n    option(ENABLE_PIC "Enable Position Independent Code" OFF)\nendif(X64 AND NOT WIN32)\n\n# Compiler detection\nif(CMAKE_GENERATOR STREQUAL "Xcode")\n  set(XCODE 1)\nendif()\nif (APPLE)\n  add_definitions(-DMACOS)\nendif()\n\n'},71803:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="---------1---------2---------3---------4---------5---------6---------7---------8\n12345678911234567892123456789312345678941234567895123456789612345678971234567898\n000010 IDENTIFICATION DIVISION.                                        MODTGHERE\n000020 PROGRAM-ID.       SAMPLE.\n000030 AUTHOR.           TEST SAM. \n000040 DATE-WRITTEN.     5 February 2013\n000041\n000042* A sample program just to show the form.\n000043* The program copies its input to the output,\n000044* and counts the number of records.\n000045* At the end this number is printed.\n000046\n000050 ENVIRONMENT DIVISION.\n000060 INPUT-OUTPUT SECTION.\n000070 FILE-CONTROL.\n000080     SELECT STUDENT-FILE     ASSIGN TO SYSIN\n000090         ORGANIZATION IS LINE SEQUENTIAL.\n000100     SELECT PRINT-FILE       ASSIGN TO SYSOUT\n000110         ORGANIZATION IS LINE SEQUENTIAL.\n000120\n000130 DATA DIVISION.\n000140 FILE SECTION.\n000150 FD  STUDENT-FILE\n000160     RECORD CONTAINS 43 CHARACTERS\n000170     DATA RECORD IS STUDENT-IN.\n000180 01  STUDENT-IN              PIC X(43).\n000190\n000200 FD  PRINT-FILE\n000210     RECORD CONTAINS 80 CHARACTERS\n000220     DATA RECORD IS PRINT-LINE.\n000230 01  PRINT-LINE              PIC X(80).\n000240\n000250 WORKING-STORAGE SECTION.\n000260 01  DATA-REMAINS-SWITCH     PIC X(2)      VALUE SPACES.\n000261 01  RECORDS-WRITTEN         PIC 99.\n000270\n000280 01  DETAIL-LINE.\n000290     05  FILLER              PIC X(7)      VALUE SPACES.\n000300     05  RECORD-IMAGE        PIC X(43).\n000310     05  FILLER              PIC X(30)     VALUE SPACES.\n000311 \n000312 01  SUMMARY-LINE.\n000313     05  FILLER              PIC X(7)      VALUE SPACES.\n000314     05  TOTAL-READ          PIC 99.\n000315     05  FILLER              PIC X         VALUE SPACE.\n000316     05  FILLER              PIC X(17)     \n000317                 VALUE  'Records were read'.\n000318     05  FILLER              PIC X(53)     VALUE SPACES.\n000319\n000320 PROCEDURE DIVISION.\n000321\n000330 PREPARE-SENIOR-REPORT.\n000340     OPEN INPUT  STUDENT-FILE\n000350          OUTPUT PRINT-FILE.\n000351     MOVE ZERO TO RECORDS-WRITTEN.\n000360     READ STUDENT-FILE\n000370         AT END MOVE 'NO' TO DATA-REMAINS-SWITCH\n000380     END-READ.\n000390     PERFORM PROCESS-RECORDS\n000410         UNTIL DATA-REMAINS-SWITCH = 'NO'.\n000411     PERFORM PRINT-SUMMARY.\n000420     CLOSE STUDENT-FILE\n000430           PRINT-FILE.\n000440     STOP RUN.\n000450\n000460 PROCESS-RECORDS.\n000470     MOVE STUDENT-IN TO RECORD-IMAGE.\n000480     MOVE DETAIL-LINE TO PRINT-LINE.\n000490     WRITE PRINT-LINE.\n000500     ADD 1 TO RECORDS-WRITTEN.\n000510     READ STUDENT-FILE\n000520         AT END MOVE 'NO' TO DATA-REMAINS-SWITCH\n000530     END-READ. \n000540\n000550 PRINT-SUMMARY.\n000560     MOVE RECORDS-WRITTEN TO TOTAL-READ.\n000570     MOVE SUMMARY-LINE TO PRINT-LINE.\n000571     WRITE PRINT-LINE. \n000572\n000580\n\n"},61685:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='"""\nA CoffeeScript sample.\n"""\n\nclass Vehicle\n  constructor: (@name) =>\n  \n  drive: () =>\n    alert "Conducting #{@name}"\n\nclass Car extends Vehicle\n  drive: () =>\n    alert "Driving #{@name}"\n\nc = new Car "Brandie"\n\nwhile notAtDestination()\n  c.drive()\n\nraceVehicles = (new Car for i in [1..100])\n\nstartRace = (vehicles) -> [vehicle.drive() for vehicle in vehicles]\n\nfancyRegExp = ///\n  (d+)  # numbers\n  (w*)  # letters\n  $    # the end\n///\n'},78975:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='(in-package :cl-postgres)\n\n;; These are used to synthesize reader and writer names for integer\n;; reading/writing functions when the amount of bytes and the\n;; signedness is known. Both the macro that creates the functions and\n;; some macros that use them create names this way.\n(eval-when (:compile-toplevel :load-toplevel :execute)\n  (defun integer-reader-name (bytes signed)\n    (intern (with-standard-io-syntax\n              (format nil "~a~a~a~a" \'#:read- (if signed "" \'#:u) \'#:int bytes))))\n  (defun integer-writer-name (bytes signed)\n    (intern (with-standard-io-syntax\n              (format nil "~a~a~a~a" \'#:write- (if signed "" \'#:u) \'#:int bytes)))))\n\n(defmacro integer-reader (bytes)\n  "Create a function to read integers from a binary stream."\n  (let ((bits (* bytes 8)))\n    (labels ((return-form (signed)\n               (if signed\n                   `(if (logbitp, (1 - bits) result)\n(dpb result(byte, (1 - bits) 0) - 1)\nresult)\n`result))\n             (generate-reader (signed)\n               `(defun, (integer - reader - name bytes signed)(socket)\n  (declare(type stream socket)\n  #.* optimize *)\n  , (if (= bytes 1)\n`(let ((result (the (unsigned-byte 8) (read-byte socket))))\n                          (declare (type (unsigned-byte 8) result))\n                          ,(return-form signed))\n                       `(let((result 0))\n  (declare(type(unsigned - byte, bits) result))\n  ,@(loop : for byte : from(1 - bytes) : downto 0\n                                   : collect`(setf (ldb (byte 8 ,(* 8 byte)) result)\n                                                   (the (unsigned-byte 8) (read-byte socket))))\n                          ,(return-form signed))))))\n      `(progn\n;; This causes weird errors on SBCL in some circumstances.Disabled for now.\n; ; (declaim(inline, (integer - reader - name bytes t)\n;;                          , (integer - reader - name bytes nil)))\n(declaim(ftype(function (t) (signed - byte, bits))\n  , (integer - reader - name bytes t)))\n         , (generate - reader t)\n(declaim(ftype(function (t) (unsigned - byte, bits))\n  , (integer - reader - name bytes nil)))\n         , (generate - reader nil)))))\n\n(defmacro integer - writer(bytes)\n"Create a function to write integers to a binary stream."\n  (let((bits(* 8 bytes)))\n    `(progn\n      (declaim (inline ,(integer-writer-name bytes t)\n                       ,(integer-writer-name bytes nil)))\n      (defun ,(integer-writer-name bytes nil) (socket value)\n        (declare (type stream socket)\n                 (type (unsigned-byte ,bits) value)\n                 #.*optimize*)\n        ,@(if (= bytes 1)\n              `((write - byte value socket))\n  (loop :for byte : from(1 - bytes) : downto 0\n                    : collect`(write-byte (ldb (byte 8 ,(* byte 8)) value)\n                               socket)))\n        (values))\n      (defun ,(integer-writer-name bytes t) (socket value)\n        (declare (type stream socket)\n                 (type (signed-byte ,bits) value)\n                 #.*optimize*)\n        ,@(if (= bytes 1)\n              `((write - byte(ldb(byte 8 0) value) socket))\n(loop: for byte: from (1 - bytes) : downto 0\n                    : collect `(write-byte (ldb (byte 8 ,(* byte 8)) value)\n                               socket)))\n        (values)))))\n\n;; All the instances of the above that we need.\n\n(integer-reader 1)\n(integer-reader 2)\n(integer-reader 4)\n(integer-reader 8)\n\n(integer-writer 1)\n(integer-writer 2)\n(integer-writer 4)\n\n(defun write-bytes (socket bytes)\n  "Write a byte-array to a stream."\n  (declare (type stream socket)\n           (type (simple-array (unsigned-byte 8)) bytes)\n           #.*optimize*)\n  (write-sequence bytes socket))\n\n(defun write-str (socket string)\n  "Write a null-terminated string to a stream \\(encoding it when UTF-8\nsupport is enabled.)."\n  (declare (type stream socket)\n           (type string string)\n           #.*optimize*)\n  (enc-write-string string socket)\n  (write-uint1 socket 0))\n\n(declaim (ftype (function (t unsigned-byte)\n                          (simple-array (unsigned-byte 8) (*)))\n                read-bytes))\n(defun read-bytes (socket length)\n  "Read a byte array of the given length from a stream."\n  (declare (type stream socket)\n           (type fixnum length)\n           #.*optimize*)\n  (let ((result (make-array length :element-type \'(unsigned-byte 8))))\n    (read-sequence result socket)\n    result))\n\n(declaim (ftype (function (t) string) read-str))\n(defun read-str (socket)\n  "Read a null-terminated string from a stream. Takes care of encoding\nwhen UTF-8 support is enabled."\n  (declare (type stream socket)\n           #.*optimize*)\n  (enc-read-string socket :null-terminated t))\n\n(defun skip-bytes (socket length)\n  "Skip a given number of bytes in a binary stream."\n  (declare (type stream socket)\n           (type (unsigned-byte 32) length)\n           #.*optimize*)\n  (dotimes (i length)\n    (read-byte socket)))\n\n(defun skip-str (socket)\n  "Skip a null-terminated string."\n  (declare (type stream socket)\n           #.*optimize*)\n  (loop :for char :of-type fixnum = (read-byte socket)\n        :until (zerop char)))\n\n(defun ensure-socket-is-closed (socket &key abort)\n  (when (open-stream-p socket)\n    (handler-case\n        (close socket :abort abort)\n      (error (error)\n        (warn "Ignoring the error which happened while trying to close PostgreSQL socket: ~A" error)))))\n\n'},40023:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="#include \"pch.h\"\n#include \"Direct3DBase.h\"\n\nusing namespace Microsoft::WRL;\nusing namespace Windows::UI::Core;\nusing namespace Windows::Foundation;\n\n// Constructor.\nDirect3DBase::Direct3DBase()\n{\n}\n\n// Initialize the Direct3D resources required to run.\nvoid Direct3DBase::Initialize(CoreWindow^ window)\n{\n    m_window = window;\n    \n    CreateDeviceResources();\n    CreateWindowSizeDependentResources();\n}\n\n// These are the resources that depend on the device.\nvoid Direct3DBase::CreateDeviceResources()\n{\n    // This flag adds support for surfaces with a different color channel ordering than the API default.\n    // It is recommended usage, and is required for compatibility with Direct2D.\n    UINT creationFlags = D3D11_CREATE_DEVICE_BGRA_SUPPORT;\n\n#if defined(_DEBUG)\n    // If the project is in a debug build, enable debugging via SDK Layers with this flag.\n    creationFlags |= D3D11_CREATE_DEVICE_DEBUG;\n#endif\n\n    // This array defines the set of DirectX hardware feature levels this app will support.\n    // Note the ordering should be preserved.\n    // Don't forget to declare your application's minimum required feature level in its\n    // description.  All applications are assumed to support 9.1 unless otherwise stated.\n    D3D_FEATURE_LEVEL featureLevels[] = \n    {\n        D3D_FEATURE_LEVEL_11_1,\n        D3D_FEATURE_LEVEL_11_0,\n        D3D_FEATURE_LEVEL_10_1,\n        D3D_FEATURE_LEVEL_10_0,\n        D3D_FEATURE_LEVEL_9_3,\n        D3D_FEATURE_LEVEL_9_2,\n        D3D_FEATURE_LEVEL_9_1\n    };\n\n    // Create the DX11 API device object, and get a corresponding context.\n    ComPtr<ID3D11Device> device;\n    ComPtr<ID3D11DeviceContext> context;\n    DX::ThrowIfFailed(\n        D3D11CreateDevice(\n            nullptr,                    // specify null to use the default adapter\n            D3D_DRIVER_TYPE_HARDWARE,\n            nullptr,                    // leave as nullptr unless software device\n            creationFlags,              // optionally set debug and Direct2D compatibility flags\n            featureLevels,              // list of feature levels this app can support\n            ARRAYSIZE(featureLevels),   // number of entries in above list\n            D3D11_SDK_VERSION,          // always set this to D3D11_SDK_VERSION\n            &device,                    // returns the Direct3D device created\n            &m_featureLevel,            // returns feature level of device created\n            &context                    // returns the device immediate context\n            )\n        );\n\n    // Get the DirectX11.1 device by QI off the DirectX11 one.\n    DX::ThrowIfFailed(\n        device.As(&m_d3dDevice)\n        );\n\n    // And get the corresponding device context in the same way.\n    DX::ThrowIfFailed(\n        context.As(&m_d3dContext)\n        );\n}\n\n// Allocate all memory resources that change on a window SizeChanged event.\nvoid Direct3DBase::CreateWindowSizeDependentResources()\n{ \n    // Store the window bounds so the next time we get a SizeChanged event we can\n    // avoid rebuilding everything if the size is identical.\n    m_windowBounds = m_window->Bounds;\n\n    // If the swap chain already exists, resize it.\n    if(m_swapChain != nullptr)\n    {\n        DX::ThrowIfFailed(\n            m_swapChain->ResizeBuffers(2, 0, 0, DXGI_FORMAT_B8G8R8A8_UNORM, 0)\n            );\n    }\n    // Otherwise, create a new one.\n    else\n    {\n        // Create a descriptor for the swap chain.\n        DXGI_SWAP_CHAIN_DESC1 swapChainDesc = {0};\n        swapChainDesc.Width = 0;                                     // use automatic sizing\n        swapChainDesc.Height = 0;\n        swapChainDesc.Format = DXGI_FORMAT_B8G8R8A8_UNORM;           // this is the most common swapchain format\n        swapChainDesc.Stereo = false; \n        swapChainDesc.SampleDesc.Count = 1;                          // don't use multi-sampling\n        swapChainDesc.SampleDesc.Quality = 0;\n        swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n        swapChainDesc.BufferCount = 2;                               // use two buffers to enable flip effect\n        swapChainDesc.Scaling = DXGI_SCALING_NONE;\n        swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL; // we recommend using this swap effect for all applications\n        swapChainDesc.Flags = 0;\n\n        // Once the desired swap chain description is configured, it must be created on the same adapter as our D3D Device\n\n        // First, retrieve the underlying DXGI Device from the D3D Device\n        ComPtr<IDXGIDevice1>  dxgiDevice;\n        DX::ThrowIfFailed(\n            m_d3dDevice.As(&dxgiDevice)\n            );\n\n        // Identify the physical adapter (GPU or card) this device is running on.\n        ComPtr<IDXGIAdapter> dxgiAdapter;\n        DX::ThrowIfFailed(\n            dxgiDevice->GetAdapter(&dxgiAdapter)\n            );\n\n        // And obtain the factory object that created it.\n        ComPtr<IDXGIFactory2> dxgiFactory;\n        DX::ThrowIfFailed(\n            dxgiAdapter->GetParent(\n                __uuidof(IDXGIFactory2), \n                &dxgiFactory\n                )\n            );\n\n    Windows::UI::Core::CoreWindow^ p = m_window.Get();\n\n        // Create a swap chain for this window from the DXGI factory.\n        DX::ThrowIfFailed(\n            dxgiFactory->CreateSwapChainForCoreWindow(\n                m_d3dDevice.Get(),\n                reinterpret_cast<IUnknown*>(p),\n                &swapChainDesc,\n                nullptr,    // allow on all displays\n                &m_swapChain\n                )\n            );\n            \n        // Ensure that DXGI does not queue more than one frame at a time. This both reduces \n        // latency and ensures that the application will only render after each VSync, minimizing \n        // power consumption.\n        DX::ThrowIfFailed(\n            dxgiDevice->SetMaximumFrameLatency(1)\n            );\n    }\n    \n    // Obtain the backbuffer for this window which will be the final 3D rendertarget.\n    ComPtr<ID3D11Texture2D> backBuffer;\n    DX::ThrowIfFailed(\n        m_swapChain->GetBuffer(\n            0,\n            __uuidof(ID3D11Texture2D),\n            &backBuffer\n            )\n        );\n\n    // Create a view interface on the rendertarget to use on bind.\n    DX::ThrowIfFailed(\n        m_d3dDevice->CreateRenderTargetView(\n            backBuffer.Get(),\n            nullptr,\n            &m_renderTargetView\n            )\n        );\n\n    // Cache the rendertarget dimensions in our helper class for convenient use.\n    D3D11_TEXTURE2D_DESC backBufferDesc;\n    backBuffer->GetDesc(&backBufferDesc);\n    m_renderTargetSize.Width  = static_cast<float>(backBufferDesc.Width);\n    m_renderTargetSize.Height = static_cast<float>(backBufferDesc.Height);\n\n    // Create a descriptor for the depth/stencil buffer.\n    CD3D11_TEXTURE2D_DESC depthStencilDesc(\n        DXGI_FORMAT_D24_UNORM_S8_UINT, \n        backBufferDesc.Width,\n        backBufferDesc.Height,\n        1,\n        1,\n        D3D11_BIND_DEPTH_STENCIL);\n\n    // Allocate a 2-D surface as the depth/stencil buffer.\n    ComPtr<ID3D11Texture2D> depthStencil;\n    DX::ThrowIfFailed(\n        m_d3dDevice->CreateTexture2D(\n            &depthStencilDesc,\n            nullptr,\n            &depthStencil\n            )\n        );\n\n    // Create a DepthStencil view on this surface to use on bind.\n    DX::ThrowIfFailed(\n        m_d3dDevice->CreateDepthStencilView(\n            depthStencil.Get(),\n            &CD3D11_DEPTH_STENCIL_VIEW_DESC(D3D11_DSV_DIMENSION_TEXTURE2D),\n            &m_depthStencilView\n            )\n        );\n\n    // Create a viewport descriptor of the full window size.\n    CD3D11_VIEWPORT viewPort(\n        0.0f,\n        0.0f,\n        static_cast<float>(backBufferDesc.Width),\n        static_cast<float>(backBufferDesc.Height)\n        );\n        \n    // Set the current viewport using the descriptor.\n    m_d3dContext->RSSetViewports(1, &viewPort);\n}\n\nvoid Direct3DBase::UpdateForWindowSizeChange()\n{\n    if (m_window->Bounds.Width  != m_windowBounds.Width ||\n        m_window->Bounds.Height != m_windowBounds.Height)\n    {\n        m_renderTargetView = nullptr;\n        m_depthStencilView = nullptr;\n        CreateWindowSizeDependentResources();\n    }\n}\n\nvoid Direct3DBase::Present()\n{\n    // The first argument instructs DXGI to block until VSync, putting the application\n    // to sleep until the next VSync. This ensures we don't waste any cycles rendering\n    // frames that will never be displayed to the screen.\n    HRESULT hr = m_swapChain->Present(1, 0);\n\n    // If the device was removed either by a disconnect or a driver upgrade, we \n    // must completely reinitialize the renderer.\n    if (hr == DXGI_ERROR_DEVICE_REMOVED || hr == DXGI_ERROR_DEVICE_RESET)\n    {\n        Initialize(m_window.Get());\n    }\n    else\n    {\n        DX::ThrowIfFailed(hr);\n    }\n}\n"},68466:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# Features of Crystal\n# - Ruby-inspired syntax.\n# - Statically type-checked but without having to specify the type of variables or method arguments.\n# - Be able to call C code by writing bindings to it in Crystal.\n# - Have compile-time evaluation and generation of code, to avoid boilerplate code.\n# - Compile to efficient native code.\n\n# A very basic HTTP server\nrequire "http/server"\n\nserver = HTTP::Server.new(8080) do |request|\n  HTTP::Response.ok "text/plain", "Hello world, got #{request.path}!"\nend\n\nputs "Listening on http://0.0.0.0:8080"\nserver.listen\n\nmodule Foo\n  abstract def abstract_method : String\n\n  @[AlwaysInline]\n  def with_foofoo\n    with Foo.new(self) yield\n  end\n\n  struct Foo\n    def initialize(@foo : ::Foo)\n    end\n\n    def hello_world\n      @foo.abstract_method\n    end\n  end\nend\n\nclass Bar\n  include Foo\n\n  @@foobar = 12345\n\n  def initialize(@bar : Int32)\n  end\n\n  macro alias_method(name, method)\n    def {{ name }}(*args)\n      {{ method }}(*args)\n    end\n  end\n\n  def a_method\n    "Hello, World"\n  end\n\n  alias_method abstract_method, a_method\n\n  def show_instance_vars : Nil\n    {% for var in @type.instance_vars %}\n      puts "@{{ var }} = #{ @{{ var }} }"\n    {% end %}\n  end\nend\n\nclass Baz < Bar; end\n\nlib LibC\n  fun c_puts = "puts"(str : Char*) : Int\nend\n\nbaz = Baz.new(100)\nbaz.show_instance_vars\nbaz.with_foofoo do\n  LibC.c_puts hello_world\nend\n\n'},58802:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='/*\n* C# Program to Display All the Prime Numbers Between 1 to 100\n*/\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace VS\n{\n  class Program\n  {\n    static void Main(string[] args)\n    {\n      bool isPrime = true;\n      Console.WriteLine("Prime Numbers : ");\n      for (int i = 2; i <= 100; i++)\n      {\n        for (int j = 2; j <= 100; j++)\n        {\n          if (i != j && i % j == 0)\n          {\n            isPrime = false;\n            break;\n          }\n        }\n        \n        if (isPrime)\n        {\n          Console.Write("\t" +i);\n        }\n        isPrime = true;\n      }\n      Console.ReadKey();\n    }\n  }\n}\n'},79391:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="Content-Security-Policy: default-src 'self'; img-src *; media-src media1.com media2.com; script-src userscripts.example.com"},47413:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='html {\n    background-color: #e2e2e2;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    background-color: #fff;\n    border-top: solid 10px #000;\n    color: #333;\n    font-size: .85em;\n    font-family: "Segoe UI","HelveticaNeue-Light", sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\na:link, a:visited, \na:active, a:hover {\n    color: #333;\n    outline: none;\n    padding-left: 0;\n    padding-right: 3px;\n    text-decoration: none;\n        \n}\n\n\na:hover {\n    background-color: #c7d1d6;\n}\n\n\nheader, footer, hgroup\nnav, section {\n    display: block;\n}\n\n.float-left {\n    float: left;\n}\n\n.float-right {\n    float: right;\n}\n\n.highlight {\n/*    background-color: #a6dbed;\n    padding-left: 5px;\n    padding-right: 5px;*/\n}\n\n.clear-fix:after {\n    content: ".";\n    clear: both;\n    display: block;\n    height: 0;\n    visibility: hidden;\n}\n\nh1, h2, h3, \nh4, h5, h6 {\n    color: #000;\n    margin-bottom: 0;\n    padding-bottom: 0;\n    \n}\n\nh1 {\n    font-size: 2em; \n}\n\nh2 {\n    font-size: 1.75em;\n}\n\nh3 {\n    font-size: 1.2em;\n}\n\nh4 {\n    font-size: 1.1em;\n}\n\nh5, h6 {\n    font-size: 1em;\n}\n\n\n.tile {\n    /* 2px solid #7ac0da; */\n    border: 0;\n    \n    float: left;\n    width: 200px;\n    height: 325px;\n    \n    padding: 5px;\n    margin-right: 5px;\n    margin-bottom: 20px;\n    margin-top: 20px;\n    -webkit-perspective: 0;\n    -webkit-transform-style: preserve-3d;\n    -webkit-transition: -webkit-transform 0.2s;\n    -webkit-box-shadow: 0 1px 1px rgba(0,0,0,0.3);\n    background-position: center center;\n    background-repeat: no-repeat;\n    \n    background-color:  #fff;\n}\n\n.tile-item {\n    /* 2px solid #7ac0da; */\n    border-color: inherit;\n    float: left;\n    width: 50px;\n    height: 70px;\n    margin-right: 20px;\n    margin-bottom: 20px;\n    margin-top: 20px;\n    background-image: url(\'../Images/documents.png\');\n    background-repeat: no-repeat;\n    \n}\n\n.tile-wrapper {\n    width: 100%;\n    font-family: "Segoe UI" , Tahoma, Geneva, Verdana, sans-serif;\n    line-height: 21px;\n    font-size: 14px;\n}\n\na.blue-box {\n    font-size: 28px;\n    height: 100px;\n    display: block;\n    border-style: solid;\n    border-width: 1px 1px 4px 1px;\n    border-color: #C0C0C0 #C0C0C0 #8ABAE4 #C0C0C0;\n    padding-top: 15px;\n    padding-left: 15px;\n}\n\n    a.blue-box:hover {\n    border: 4px solid #8ABAE4; \n    padding-top: 12px;\n    padding-left: 12px;\n    background-color: #FFFFFF;\n}\n    \na.green-box {\n    font-size: 28px;\n    height: 100px;\n    display: block;\n    border-style: solid;\n    border-width: 1px 1px 4px 1px;\n    border-color: #C0C0C0 #C0C0C0 #9CCF42 #C0C0C0;\n    padding-top: 15px;\n    padding-left: 15px;\n}\n\n    a.green-box:hover {\n        border: 4px solid #9CCF42; \n        padding-top: 12px;\n        padding-left: 12px;\n        background-color: #FFFFFF;\n}\n\n\na.green-box2 {\n    font-size: 14px;\n    height: 48px;\n    width: 48px;\n    display: block; /* border-color: #C0C0C0; */\n    padding-top: 6px;\n    font-weight: bold;\n    \n}\n\n    a.green-box2:hover {\n    border: solid #8ABAE4;\n    padding-top: 0px;\n    padding-left: 0px;\n    background-image: url(\'../Images/documents.png\');\n    background-color: #EFEFEF;\n}\n\na.yellow-box {\n    font-size: 28px;\n    height: 100px;\n    display: block;\n    border-style: solid;\n    border-width: 1px 1px 4px 1px;\n    border-color: #C0C0C0 #C0C0C0 #DECF6B #C0C0C0;\n    padding-top: 15px;\n    padding-left: 15px;\n}\n\n    a.yellow-box:hover {\n        border: 4px solid #DECF6B; \n        padding-top: 12px;\n        padding-left: 12px;\n        background-color: #FFFFFF;\n}\n    \n    \na.red-box {\n    font-size: 28px;\n    height: 100px;\n    display: block;\n    border-style: solid;\n    border-width: 1px 1px 4px 1px;\n    border-color: #C0C0C0 #C0C0C0 #F79E84 #C0C0C0;\n    padding-top: 15px;\n    padding-left: 15px;\n}\n\n    a.red-box:hover {\n    border: 4px solid #F79E84; \n    padding-top: 12px;\n    padding-left: 12px;\n    background-color: #FFFFFF;\n}\n    \n/* main layout \n----------------------------------------------------------*/\n.content-wrapper {\n    margin: 0 auto;\n    max-width: 960px;\n}\n\n#body {\n    background-color: #efeeef;\n    clear: both;\n    padding-bottom: 35px;\n}\n\n    .main-content {\n        background: url("../images/accent.png") no-repeat;\n        padding-left: 10px;\n        padding-top: 30px;\n    }\n\n    .featured + .main-content {\n        background: url("../images/heroaccent.png") no-repeat;\n    }\n\nfooter {\n    clear: both;\n    background-color: #e2e2e2;\n    font-size: .8em;\n    height: 100px;\n}\n\n\n/* site title\n----------------------------------------------------------*/\n.site-title {\n    color: #0066CC; /* font-family: Rockwell, Consolas, "Courier New", Courier, monospace; */\n    font-size: 3.3em;\n    margin-top: 40px;\n    margin-bottom: 0;\n}\n\n.site-title a, .site-title a:hover, .site-title a:active  {\n    background: none;\n    color: #0066CC;\n    outline: none;\n    text-decoration: none;\n}\n\n\n/* login  \n----------------------------------------------------------*/\n#login {\n    display: block;\n    font-size: .85em;\n    margin-top: 20px;\n    text-align: right;\n}\n\n    #login a {\n        background-color: #d3dce0;\n        margin-left: 10px;\n        margin-right: 3px;\n        padding: 2px 3px;\n        text-decoration: none;\n    }\n    \n    #login a.username {\n        background: none;\n        margin-left: 0px;\n        text-decoration: underline;\n    }\n\n    #login li {\n        display: inline;\n        list-style: none;\n    }\n    \n    \n/* menu  \n----------------------------------------------------------*/\nul#menu {\n    font-size: 1.3em;\n    font-weight: 600;\n    margin: 0;\n    text-align: right;\n            text-decoration: none;\n\n}\n\n    ul#menu li {\n        display: inline;\n        list-style: none;\n        padding-left: 15px;\n    }\n\n        ul#menu li a {\n            background: none;\n            color: #999;\n            text-decoration: none;\n        }\n\n        ul#menu li a:hover {\n            color: #333;\n            text-decoration: none;\n        }\n\n\n\n/* page elements  \n----------------------------------------------------------*/\n/* featured */\n.featured {\n    background-color: #fff;\n}\n\n    .featured .content-wrapper {\n        /*background-color: #7ac0da;\n        background-image: -ms-linear-gradient(left, #7AC0DA 0%, #A4D4E6 100%);\n        background-image: -o-linear-gradient(left, #7AC0DA 0%, #A4D4E6 100%);\n        background-image: -webkit-gradient(linear, left top, right top, color-stop(0, #7AC0DA), color-stop(1, #A4D4E6));\n        background-image: -webkit-linear-gradient(left, #7AC0DA 0%, #A4D4E6 100%);\n        background-image: linear-gradient(left, #7AC0DA 0%, #A4D4E6 100%);\n        color: #3e5667;\n        */\n        padding:  0px 40px 30px 40px;\n    }\n\n        .featured hgroup.title h1, .featured hgroup.title h2 {\n            /* color: #fff;\n                */\n        }\n\n        .featured p {\n            font-size: 1.1em;\n        }\n\n/* page titles */ \nhgroup.title {\n    margin-bottom: 10px;\n}\n\nhgroup.title h1, hgroup.title h2 {\ndisplay: inline;\n}\n\nhgroup.title h2 {\n    font-weight: normal;\n}\n\n/* releases */\n.milestone {\n    color: #fff;\n    background-color: #8ABAE4;\n    font-weight:  normal;\n    padding:  10px 10px 10px 10px;\n    margin: 0 0 0 0;\n}\n    .milestone .primary {\n        font-size: 1.75em;\n    }\n\n    .milestone .secondary {\n    font-size: 1.2em;\n    font-weight: normal;\n    /* padding: 5px 5px 5px 10px;*/\n        }\n    \n/* features */\nsection.feature {\n    width: 200px;\n    float: left;\n    padding: 10px;\n}\n\n/* ordered list */\nol.round {\n    list-style-type: none;\n    padding-left: 0;\n}\n\n    ol.round li {\n        margin: 25px 0;\n        padding-left: 45px;\n    }\n    \n        ol.round li.one {\n            background: url("../images/orderedlistOne.png") no-repeat;        \n        }\n    \n        ol.round li.two {\n            background: url("../images/orderedlistTwo.png") no-repeat;        \n        }\n    \n        ol.round li.three {\n            background: url("../images/orderedlistThree.png") no-repeat;        \n        }\n    \n/* content */  \narticle {\n    float: left;\n    width: 70%;\n}\n\naside {\n    float: right;\n    width: 25%;\n}\n\n    aside ul {\n        list-style: none;\n        padding: 0;\n    }\n    \n     aside ul li {\n        background: url("../images/bullet.png") no-repeat 0 50%;\n        padding: 2px 0 2px 20px;\n     }\n     \n.label {\n    font-weight: 700;\n}\n\n/* login page */ \n#loginForm {\n    border-right: solid 2px #c8c8c8;\n    float: left;\n    width: 45%;\n}\n\n    #loginForm .validation-error {\n        display: block;\n        margin-left: 15px;\n    }\n\n#socialLoginForm {\n    margin-left: 40px;\n    float: left;\n    width: 50%;\n}\n\n/* contact */\n.contact h3 {\n    font-size: 1.2em;\n}\n\n.contact p {\n    margin: 5px 0 0 10px;\n}\n\n.contact iframe {\n    border: solid 1px #333;\n    margin: 5px 0 0 10px;\n}\n\n/* forms */\nfieldset {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n\n    fieldset legend {\n        display: none;\n    }\n    \n    fieldset ol {\n        padding: 0;\n        list-style: none;\n    }\n    \n        fieldset ol li {\n            padding-bottom: 5px;\n        }\n    \n    fieldset label {\n        display: block;\n        font-size: 1.2em;\n        font-weight: 600;\n    }\n    \n    fieldset label.checkbox {\n        display: inline;\n    }\n    \n    fieldset input[type="text"], \n    fieldset input[type="password"] {\n        border: 1px solid #e2e2e2;\n        color: #333;\n        font-size: 1.2em;\n        margin: 5px 0 6px 0;\n        padding: 5px;\n        width: 300px;\n    }\n    \n        fieldset input[type="text"]:focus, \n        fieldset input[type="password"]:focus {\n            border: 1px solid #7ac0da;\n        }\n    \n    fieldset input[type="submit"] {\n        background-color: #d3dce0;\n        border: solid 1px #787878;\n        cursor: pointer;\n        font-size: 1.2em;\n        font-weight: 600;\n        padding: 7px;\n    }\n\n/* ajax login/registration dialog */\n.modal-popup {\n    font-size: 0.7em;\n}\n\n/* info and errors */  \n.message-info {\n    border: solid 1px;\n    clear: both;\n    padding: 10px 20px;\n}\n\n.message-error {\n    clear: both;\n    color: #e80c4d;\n    font-size: 1.1em;\n    font-weight: bold;\n    margin: 20px 0 10px 0;\n}\n\n.message-success {\n    color: #7ac0da;\n    font-size: 1.3em;\n    font-weight: bold;\n    margin: 20px 0 10px 0;\n}\n\n.success {\n    color: #7ac0da;\n}\n\n.error {\n    color: #e80c4d;\n}\n\n/* styles for validation helpers */\n.field-validation-error {\n    color: #e80c4d;\n    font-weight: bold;\n}\n\n.field-validation-valid {\n    display: none;\n}\n\ninput[type="text"].input-validation-error,\ninput[type="password"].input-validation-error {\n    border: solid 1px #e80c4d;\n}\n\n.validation-summary-errors {\n    color: #e80c4d;\n    font-weight: bold;\n    font-size: 1.1em;\n}\n\n.validation-summary-valid {\n    display: none;\n}\n\n\n/* social */\nul#social li {\n    display: inline;\n    list-style: none;\n}\n\n    ul#social li a {\n        color: #999;\n        text-decoration: none;\n    }\n        \n    a.facebook, a.twitter {\n        display: block;\n        float: left;\n        height: 24px;\n        padding-left: 17px;\n        text-indent: -9999px;\n        width: 16px;\n    }\n        \n    a.facebook {\n        background: url("../images/facebook.png") no-repeat;\n    }\n        \n    a.twitter {\n        background: url("../images/twitter.png") no-repeat;\n    }\n        \n        \n        \n/********************\n*   Mobile Styles   *\n********************/\n@media only screen and (max-width: 850px) {\n    \n    /* header  \n    ----------------------------------------------------------*/\n    header .float-left, \n    header .float-right {\n        float: none;\n    }\n    \n    /* logo */\n    header .site-title {\n        /*margin: 0; */\n        /*margin: 10px;*/\n        text-align: left;\n        padding-left: 0;\n    }\n\n    /* login */\n    #login {\n        font-size: .85em;\n        margin-top: 0;\n        text-align: center;\n    }\n    \n        #login ul {\n            margin: 5px 0;\n            padding: 0;\n        }\n        \n        #login li {\n            display: inline;\n            list-style: none;\n            margin: 0;\n            padding:0;\n        }\n\n        #login a {\n            background: none;\n            color: #999;\n            font-weight: 600;\n            margin: 2px;\n            padding: 0;\n        }\n        \n        #login a:hover {\n            color: #333;\n        }\n\n    /* menu */\n    nav {\n        margin-bottom: 5px;\n    }\n    \n    ul#menu {\n        margin: 0;\n        padding:0;\n        text-align: center;\n    }\n\n        ul#menu li {\n            margin: 0;\n            padding: 0;\n        }\n\n        \n    /* main layout  \n    ----------------------------------------------------------*/\n    .main-content,\n    .featured + .main-content {\n        background-position: 10px 0;\n    }\n    \n    .content-wrapper {\n        padding-right: 10px;\n        padding-left: 10px;\n    }\n\n    .featured .content-wrapper {\n        padding: 10px;\n    }\n    \n    /* page content */  \n    article, aside {\n        float: none;\n        width: 100%;\n    }\n    \n    /* ordered list */\n    ol.round {\n        list-style-type: none;\n        padding-left: 0;\n    }\n\n        ol.round li {\n            padding-left: 10px;\n            margin: 25px 0;\n        }\n    \n            ol.round li.one,\n            ol.round li.two,\n            ol.round li.three {\n                background: none;        \n            }\n     \n     /* features */\n     section.feature {\n        float: none;\n        padding: 10px;\n        width: auto;\n     }\n     \n        section.feature img {\n            color: #999;\n            content: attr(alt);\n            font-size: 1.5em;\n            font-weight: 600;\n        }\n        \n    /* forms */    \n    fieldset input[type="text"], \n    fieldset input[type="password"] {\n        width: 90%;\n    }\n    \n    /* login page */ \n    #loginForm {\n        border-right: none;\n        float: none;\n        width: auto;\n    }\n\n        #loginForm .validation-error {\n            display: block;\n            margin-left: 15px;\n        }\n\n    #socialLoginForm {\n        margin-left: 0;\n        float: none;\n        width: auto;\n    }\n\n    /* footer  \n    ----------------------------------------------------------*/    \n    footer .float-left,\n    footer .float-right {\n        float: none;\n    }\n    \n    footer {\n        text-align: center;\n        height: auto;\n        padding: 10px 0;\n    }\n    \n        footer p {\n            margin: 0;\n        }\n    \n        ul#social {\n            padding:0;\n            margin: 0;\n        }\n    \n         a.facebook, a.twitter {\n            background: none;\n            display: inline;\n            float: none;\n            height: auto;\n            padding-left: 0;\n            text-indent: 0;\n            width: auto;\n        }    \n}\n\n.subsite {\n  color: #444;\n}\n\nh3 {\n  font-weight: normal;\n  font-size: 24px;\n  color: #444;\n  margin-bottom: 20px;\n}\n\n.tiles {\n  padding-bottom: 20px;\n  background-color: #e3e3e3;\n}\n\n#editor {\n  margin: 0 auto;\n  height: 500px;\n  border: 1px solid #ccc;\n}\n\n.monaco-editor.monaco, .monaco-editor.vs, .monaco-editor.eclipse {\n  background: #F9F9F9;\n}\n\n.monaco-editor.monaco .monaco-editor-background, .monaco-editor.vs .monaco-editor-background, .monaco-editor.eclipse .monaco-editor-background {\n  background: #F9F9F9;\n}'},16953:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="// Cypher Mode for CodeMirror, using the neo theme\nMATCH (joe { name: 'Joe' })-[:knows*2..2]-(friend_of_friend)\nWHERE NOT (joe)-[:knows]-(friend_of_friend)\nRETURN friend_of_friend.name, COUNT(*)\nORDER BY COUNT(*) DESC , friend_of_friend.name\n\n"},61569:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="\nimport numpy as np\ncimport cython\nfrom libc.math cimport sqrt\n\n@cython.boundscheck(False)\n@cython.wraparound(False)\ndef pairwise_cython(double[:, ::1] X):\n    cdef int M = X.shape[0]\n    cdef int N = X.shape[1]\n    cdef double tmp, d\n    cdef double[:, ::1] D = np.empty((M, M), dtype=np.float64)\n    for i in range(M):\n        for j in range(M):\n            d = 0.0\n            for k in range(N):\n                tmp = X[i, k] - X[j, k]\n                d += tmp * tmp\n            D[i, j] = sqrt(d)\n    return np.asarray(D)\n"},12765:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='/* D demo code // copied from phobos/sd/metastrings.d */\n// Written in the D programming language.\n\n/**\nTemplates with which to do compile-time manipulation of strings.\n\nMacros:\n WIKI = Phobos/StdMetastrings\n\nCopyright: Copyright Digital Mars 2007 - 2009.\nLicense:   <a href="http://www.boost.org/LICENSE_1_0.txt">Boost License 1.0</a>.\nAuthors:   $(WEB digitalmars.com, Walter Bright),\n           Don Clugston\nSource:    $(PHOBOSSRC std/_metastrings.d)\n*/\n/*\n         Copyright Digital Mars 2007 - 2009.\nDistributed under the Boost Software License, Version 1.0.\n   (See accompanying file LICENSE_1_0.txt or copy at\n         http://www.boost.org/LICENSE_1_0.txt)\n */\nmodule std.metastrings;\n\n/**\nFormats constants into a string at compile time.  Analogous to $(XREF\nstring,format).\n\nParameters:\n\nA = tuple of constants, which can be strings, characters, or integral\n    values.\n\nFormats:\n *    The formats supported are %s for strings, and %%\n *    for the % character.\nExample:\n---\nimport std.metastrings;\nimport std.stdio;\n\nvoid main()\n{\n  string s = Format!("Arg %s = %s", "foo", 27);\n  writefln(s); // "Arg foo = 27"\n}\n * ---\n */\n\ntemplate Format(A...)\n{\n    static if (A.length == 0)\n        enum Format = "";\n    else static if (is(typeof(A[0]) : const(char)[]))\n        enum Format = FormatString!(A[0], A[1..$]);\n    else\n        enum Format = toStringNow!(A[0]) ~ Format!(A[1..$]);\n}\n\ntemplate FormatString(const(char)[] F, A...)\n{\n    static if (F.length == 0)\n        enum FormatString = Format!(A);\n    else static if (F.length == 1)\n        enum FormatString = F[0] ~ Format!(A);\n    else static if (F[0..2] == "%s")\n        enum FormatString\n            = toStringNow!(A[0]) ~ FormatString!(F[2..$],A[1..$]);\n    else static if (F[0..2] == "%%")\n        enum FormatString = "%" ~ FormatString!(F[2..$],A);\n    else\n    {\n        static assert(F[0] != \'%\', "unrecognized format %" ~ F[1]);\n        enum FormatString = F[0] ~ FormatString!(F[1..$],A);\n    }\n}\n\nunittest\n{\n    auto s = Format!("hel%slo", "world", -138, \'c\', true);\n    assert(s == "helworldlo-138ctrue", "[" ~ s ~ "]");\n}\n\n/**\n * Convert constant argument to a string.\n */\n\ntemplate toStringNow(ulong v)\n{\n    static if (v < 10)\n        enum toStringNow = "" ~ cast(char)(v + \'0\');\n    else\n        enum toStringNow = toStringNow!(v / 10) ~ toStringNow!(v % 10);\n}\n\nunittest\n{\n    static assert(toStringNow!(1uL << 62) == "4611686018427387904");\n}\n\n/// ditto\ntemplate toStringNow(long v)\n{\n    static if (v < 0)\n        enum toStringNow = "-" ~ toStringNow!(cast(ulong) -v);\n    else\n        enum toStringNow = toStringNow!(cast(ulong) v);\n}\n\nunittest\n{\n    static assert(toStringNow!(0x100000000) == "4294967296");\n    static assert(toStringNow!(-138L) == "-138");\n}\n\n/// ditto\ntemplate toStringNow(uint U)\n{\n    enum toStringNow = toStringNow!(cast(ulong)U);\n}\n\n/// ditto\ntemplate toStringNow(int I)\n{\n    enum toStringNow = toStringNow!(cast(long)I);\n}\n\n/// ditto\ntemplate toStringNow(bool B)\n{\n    enum toStringNow = B ? "true" : "false";\n}\n\n/// ditto\ntemplate toStringNow(string S)\n{\n    enum toStringNow = S;\n}\n\n/// ditto\ntemplate toStringNow(char C)\n{\n    enum toStringNow = "" ~ C;\n}\n\n\n/********\n * Parse unsigned integer literal from the start of string s.\n * returns:\n *    .value = the integer literal as a string,\n *    .rest = the string following the integer literal\n * Otherwise:\n *    .value = null,\n *    .rest = s\n */\n\ntemplate parseUinteger(const(char)[] s)\n{\n    static if (s.length == 0)\n    {\n        enum value = "";\n        enum rest = "";\n    }\n    else static if (s[0] >= \'0\' && s[0] <= \'9\')\n    {\n        enum value = s[0] ~ parseUinteger!(s[1..$]).value;\n        enum rest = parseUinteger!(s[1..$]).rest;\n    }\n    else\n    {\n        enum value = "";\n        enum rest = s;\n    }\n}\n\n/********\nParse integer literal optionally preceded by $(D \'-\') from the start\nof string $(D s).\n\nReturns:\n   .value = the integer literal as a string,\n   .rest = the string following the integer literal\n\nOtherwise:\n   .value = null,\n   .rest = s\n*/\n\ntemplate parseInteger(const(char)[] s)\n{\n    static if (s.length == 0)\n    {\n        enum value = "";\n        enum rest = "";\n    }\n    else static if (s[0] >= \'0\' && s[0] <= \'9\')\n    {\n        enum value = s[0] ~ parseUinteger!(s[1..$]).value;\n        enum rest = parseUinteger!(s[1..$]).rest;\n    }\n    else static if (s.length >= 2 &&\n            s[0] == \'-\' && s[1] >= \'0\' && s[1] <= \'9\')\n    {\n        enum value = s[0..2] ~ parseUinteger!(s[2..$]).value;\n        enum rest = parseUinteger!(s[2..$]).rest;\n    }\n    else\n    {\n        enum value = "";\n        enum rest = s;\n    }\n}\n\nunittest\n{\n    assert(parseUinteger!("1234abc").value == "1234");\n    assert(parseUinteger!("1234abc").rest == "abc");\n    assert(parseInteger!("-1234abc").value == "-1234");\n    assert(parseInteger!("-1234abc").rest == "abc");\n}\n\n/**\nDeprecated aliases held for backward compatibility.\n*/\ndeprecated alias toStringNow ToString;\n/// Ditto\ndeprecated alias parseUinteger ParseUinteger;\n/// Ditto\ndeprecated alias parseUinteger ParseInteger;\n\n\n'},86706:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="import 'dart:async';\nimport 'dart:math' show Random;\nmain() async {\n  print('Compute \u03c0 using the Monte Carlo method.');\n  await for (var estimate in computePi().take(100)) {\n    print('\u03c0 \u2245 $estimate');\n  }\n}\n/// Generates a stream of increasingly accurate estimates of \u03c0.\nStream<double> computePi({int batch: 100000}) async* {\n  var total = 0;\n  var count = 0;\n  while (true) {\n    var points = generateRandom().take(batch);\n    var inside = points.where((p) => p.isInsideUnitCircle);\n    total += batch;\n    count += inside.length;\n    var ratio = count / total;\n    // Area of a circle is A = \u03c0\u22c5r\xb2, therefore \u03c0 = A/r\xb2.\n    // So, when given random points with x \u2208 <0,1>,\n    // y \u2208 <0,1>, the ratio of those inside a unit circle\n    // should approach \u03c0 / 4. Therefore, the value of \u03c0\n    // should be:\n    yield ratio * 4;\n  }\n}\nIterable<Point> generateRandom([int seed]) sync* {\n  final random = Random(seed);\n  while (true) {\n    yield Point(random.nextDouble(), random.nextDouble());\n  }\n}\nclass Point {\n  final double x, y;\n  const Point(this.x, this.y);\n  bool get isInsideUnitCircle => x * x + y * y <= 1;\n}\n"},23754:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='diff --git a/index.html b/index.html\nindex c1d9156..7764744 100644\n--- a/index.html\n+++ b/index.html\n@@ -95,7 +95,8 @@ StringStream.prototype = {\n     <script>\n       var editor = CodeMirror.fromTextArea(document.getElementById("code"), {\n         lineNumbers: true,\n-        autoMatchBrackets: true\n+        autoMatchBrackets: true,\n+      onGutterClick: function(x){console.log(x);}\n       });\n     <\/script>\n   </body>\ndiff --git a/lib/codemirror.js b/lib/codemirror.js\nindex 04646a9..9a39cc7 100644\n--- a/lib/codemirror.js\n+++ b/lib/codemirror.js\n@@ -399,10 +399,16 @@ var CodeMirror = (function() {\n     }\n \n     function onMouseDown(e) {\n-      var start = posFromMouse(e), last = start;    \n+      var start = posFromMouse(e), last = start, target = e.target();\n       if (!start) return;\n       setCursor(start.line, start.ch, false);\n       if (e.button() != 1) return;\n+      if (target.parentNode == gutter) {    \n+        if (options.onGutterClick)\n+          options.onGutterClick(indexOf(gutter.childNodes, target) + showingFrom);\n+        return;\n+      }\n+\n       if (!focused) onFocus();\n \n       e.stop();\n@@ -808,7 +814,7 @@ var CodeMirror = (function() {\n       for (var i = showingFrom; i < showingTo; ++i) {\n         var marker = lines[i].gutterMarker;\n         if (marker) html.push(\'<div class="\' + marker.style + \'">\' + htmlEscape(marker.text) + \'</div>\');\n-        else html.push("<div>" + (options.lineNumbers ? i + 1 : "\\u00a0") + "</div>");\n+        else html.push("<div>" + (options.lineNumbers ? i + options.firstLineNumber : "\\u00a0") + "</div>");\n       }\n       gutter.style.display = "none"; // TODO test whether this actually helps\n       gutter.innerHTML = html.join("");\n@@ -1371,10 +1377,8 @@ var CodeMirror = (function() {\n         if (option == "parser") setParser(value);\n         else if (option === "lineNumbers") setLineNumbers(value);\n         else if (option === "gutter") setGutter(value);\n-        else if (option === "readOnly") options.readOnly = value;\n-        else if (option === "indentUnit") {options.indentUnit = indentUnit = value; setParser(options.parser);}\n-        else if (/^(?:enterMode|tabMode|indentWithTabs|readOnly|autoMatchBrackets|undoDepth)$/.test(option)) options[option] = value;\n-        else throw new Error("Can\'t set option " + option);\n+        else if (option === "indentUnit") {options.indentUnit = value; setParser(options.parser);}\n+        else options[option] = value;\n       },\n       cursorCoords: cursorCoords,\n       undo: operation(undo),\n@@ -1402,7 +1406,8 @@ var CodeMirror = (function() {\n       replaceRange: operation(replaceRange),\n \n       operation: function(f){return operation(f)();},\n-      refresh: function(){updateDisplay([{from: 0, to: lines.length}]);}\n+      refresh: function(){updateDisplay([{from: 0, to: lines.length}]);},\n+      getInputField: function(){return input;}\n     };\n     return instance;\n   }\n@@ -1420,6 +1425,7 @@ var CodeMirror = (function() {\n     readOnly: false,\n     onChange: null,\n     onCursorActivity: null,\n+    onGutterClick: null,\n     autoMatchBrackets: false,\n     workTime: 200,\n     workDelay: 300,\n\n'},92995:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='\n/*\n  \xa9 Microsoft. All rights reserved.\n\n  This library is supported for use in Windows Tailored Apps only.\n\n  Build: 6.2.8100.0 \n  Version: 0.5 \n*/\n\n(function (global, undefined) {\n  "use strict";\n  undefinedVariable = {};\n  undefinedVariable.prop = 5;\n\n  function initializeProperties(target, members) {\n    var keys = Object.keys(members);\n    var properties;\n    var i, len;\n    for (i = 0, len = keys.length; i < len; i++) {\n      var key = keys[i];\n      var enumerable = key.charCodeAt(0) !== /*_*/95;\n      var member = members[key];\n      if (member && typeof member === \'object\') {\n        if (member.value !== undefined || typeof member.get === \'function\' || typeof member.set === \'function\') {\n          if (member.enumerable === undefined) {\n            member.enumerable = enumerable;\n          }\n          properties = properties || {};\n          properties[key] = member;\n          continue;\n        } \n      }\n      // These next lines will be deleted\n      if (!enumerable) {\n        properties = properties || {};\n        properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\n        continue;\n      }\n      target[key] = member;\n    }\n    if (properties) {\n      Object.defineProperties(target, properties);\n    }\n  }\n\n  (function (rootNamespace) {\n\n    // Create the rootNamespace in the global namespace\n    if (!global[rootNamespace]) {\n      global[rootNamespace] = Object.create(Object.prototype);\n    }\n\n    // Cache the rootNamespace we just created in a local variable\n    var _rootNamespace = global[rootNamespace];\n    if (!_rootNamespace.Namespace) {\n      _rootNamespace.Namespace = Object.create(Object.prototype);\n    }\n\n    function defineWithParent(parentNamespace, name, members) {\n      /// <summary locid="1">\n      /// Defines a new namespace with the specified name, under the specified parent namespace.\n      /// </summary>\n      /// <param name="parentNamespace" type="Object" locid="2">\n      /// The parent namespace which will contain the new namespace.\n      /// </param>\n      /// <param name="name" type="String" locid="3">\n      /// Name of the new namespace.\n      /// </param>\n      /// <param name="members" type="Object" locid="4">\n      /// Members in the new namespace.\n      /// </param>\n      /// <returns locid="5">\n      /// The newly defined namespace.\n      /// </returns>\n      var currentNamespace = parentNamespace,\n        namespaceFragments = name.split(".");\n\n      for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n        var namespaceName = namespaceFragments[i];\n        if (!currentNamespace[namespaceName]) {\n          Object.defineProperty(currentNamespace, namespaceName, \n            { value: {}, writable: false, enumerable: true, configurable: true }\n          );\n        }\n        currentNamespace = currentNamespace[namespaceName];\n      }\n\n      if (members) {\n        initializeProperties(currentNamespace, members);\n      }\n\n      return currentNamespace;\n    }\n\n    function define(name, members) {\n      /// <summary locid="6">\n      /// Defines a new namespace with the specified name.\n      /// </summary>\n      /// <param name="name" type="String" locid="7">\n      /// Name of the namespace.  This could be a dot-separated nested name.\n      /// </param>\n      /// <param name="members" type="Object" locid="4">\n      /// Members in the new namespace.\n      /// </param>\n      /// <returns locid="5">\n      /// The newly defined namespace.\n      /// </returns>\n      return defineWithParent(global, name, members);\n    }\n\n    // Establish members of the "WinJS.Namespace" namespace\n    Object.defineProperties(_rootNamespace.Namespace, {\n\n      defineWithParent: { value: defineWithParent, writable: true, enumerable: true },\n\n      define: { value: define, writable: true, enumerable: true }\n\n    });\n\n  })("WinJS");\n\n  (function (WinJS) {\n\n    function define(constructor, instanceMembers, staticMembers) {\n      /// <summary locid="8">\n      /// Defines a class using the given constructor and with the specified instance members.\n      /// </summary>\n      /// <param name="constructor" type="Function" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <param name="instanceMembers" type="Object" locid="10">\n      /// The set of instance fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <param name="staticMembers" type="Object" locid="11">\n      /// The set of static fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <returns type="Function" locid="12">\n      /// The newly defined class.\n      /// </returns>\n      constructor = constructor || function () { };\n      if (instanceMembers) {\n        initializeProperties(constructor.prototype, instanceMembers);\n      }\n      if (staticMembers) {\n        initializeProperties(constructor, staticMembers);\n      }\n      return constructor;\n    }\n\n    function derive(baseClass, constructor, instanceMembers, staticMembers) {\n      /// <summary locid="13">\n      /// Uses prototypal inheritance to create a sub-class based on the supplied baseClass parameter.\n      /// </summary>\n      /// <param name="baseClass" type="Function" locid="14">\n      /// The class to inherit from.\n      /// </param>\n      /// <param name="constructor" type="Function" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <param name="instanceMembers" type="Object" locid="10">\n      /// The set of instance fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <param name="staticMembers" type="Object" locid="11">\n      /// The set of static fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <returns type="Function" locid="12">\n      /// The newly defined class.\n      /// </returns>\n      if (baseClass) {\n        constructor = constructor || function () { };\n        var basePrototype = baseClass.prototype;\n        constructor.prototype = Object.create(basePrototype);\n        Object.defineProperty(constructor.prototype, "_super", { value: basePrototype });\n        Object.defineProperty(constructor.prototype, "constructor", { value: constructor });\n        if (instanceMembers) {\n          initializeProperties(constructor.prototype, instanceMembers);\n        }\n        if (staticMembers) {\n          initializeProperties(constructor, staticMembers);\n        }\n        return constructor;\n      } else {\n        return define(constructor, instanceMembers, staticMembers);\n      }\n    }\n\n    function mix(constructor) {\n      /// <summary locid="15">\n      /// Defines a class using the given constructor and the union of the set of instance members\n      /// specified by all the mixin objects.  The mixin parameter list can be of variable length.\n      /// </summary>\n      /// <param name="constructor" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <returns locid="12">\n      /// The newly defined class.\n      /// </returns>\n      constructor = constructor || function () { };\n      var i, len;\n      for (i = 0, len = arguments.length; i < len; i++) {\n        initializeProperties(constructor.prototype, arguments[i]);\n      }\n      return constructor;\n    }\n\n    // Establish members of "WinJS.Class" namespace\n    WinJS.Namespace.define("WinJS.Class", {\n      define: define,\n      derive: derive,\n      mix: mix\n    });\n\n  })(WinJS);\n\n})(this);'},85346:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='\n/*\n  \xa9 Microsoft. All rights reserved.\n\n  This library is supported for use in Windows Tailored Apps only.\n\n  Build: 6.2.8100.0 \n  Version: 0.5 \n*/\n\n// Here are some inserted lines\n// with some extra comments\n  \n(function (global, undefined) {\n  "use strict";\n  var definedVariable = {};\n  definedVariable.prop = 5;\n\n  function initializeProperties(target, members) {\n    var keys = Object.keys(members);\n    var properties;\n    var i, len;\n    for (i = 0, len = keys.length; i < len; i++) {\n      var key = keys[i];\n      var enumerable = key.charCodeAt(0) !== /*_*/95;\n      var member = members[key];\n      if (member && typeof member === \'object\') {\n        if (member.value !== undefined || typeof member.get === \'function\' || typeof member.set === \'function\') {\n          if (member.enumerable === undefined) {\n            member.enumerable = enumerable;\n          }\n          properties = properties || {};\n          properties[key] = member;\n          continue;\n        } \n      }\n      target[key] = member;\n    }\n    if (properties) {\n      Object.defineProperties(target, properties);\n    }\n  }\n\n  (function (rootNamespace) {\n\n    // Create the rootNamespace in the global namespace\n    if (!global[rootNamespace]) {\n      global[rootNamespace] = Object.create(Object.prototype);\n    }\n\n    // Cache the rootNamespace we just created in a local variable\n    var _rootNamespace = global[rootNamespace];\n    if (!_rootNamespace.Namespace) {\n      _rootNamespace.Namespace = Object.create(Object.prototype);\n    }\n\n    function defineWithParent(parentNamespace, name, members) {\n      /// <summary locid="1">\n      /// Defines a new namespace with the specified name, under the specified parent namespace.\n      /// </summary>\n      /// <param name="parentNamespace" type="Object" locid="2">\n      /// The parent namespace which will contain the new namespace.\n      /// </param>\n      /// <param name="name" type="String" locid="3">\n      /// Name of the new namespace.\n      /// </param>\n      /// <param name="members" type="Object" locid="4">\n      /// Members in the new namespace.\n      /// </param>\n      /// <returns locid="5">\n      /// The newly defined namespace.\n      /// </returns>\n      var currentNamespace = parentNamespace,\n        namespaceFragments = name.split(".");\n\n      for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n        var namespaceName = namespaceFragments[i];\n        if (!currentNamespace[namespaceName]) {\n          Object.defineProperty(currentNamespace, namespaceName, \n            { value: {}, writable: false, enumerable: true, configurable: true }\n          );\n        }\n        currentNamespace = currentNamespace[namespaceName];\n      }\n\n      if (members) {\n        initializeProperties(currentNamespace, members);\n      }\n\n      return currentNamespace;\n    }\n\n    function define(name, members) {\n      /// <summary locid="6">\n      /// Defines a new namespace with the specified name.\n      /// </summary>\n      /// <param name="name" type="String" locid="7">\n      /// Name of the namespace.  This could be a dot-separated nested name.\n      /// </param>\n      /// <param name="members" type="Object" locid="4">\n      /// Members in the new namespace.\n      /// </param>\n      /// <returns locid="5">\n      /// The newly defined namespace.\n      /// </returns>\n      return defineWithParent(global, name, members);\n    }\n\n    // Establish members of the "WinJS.Namespace" namespace\n    Object.defineProperties(_rootNamespace.Namespace, {\n\n      defineWithParent: { value: defineWithParent, writable: true, enumerable: true },\n\n      define: { value: define, writable: true, enumerable: true }\n\n    });\n\n  })("WinJS");\n\n  (function (WinJS) {\n\n    function define(constructor, instanceMembers, staticMembers) {\n      /// <summary locid="8">\n      /// Defines a class using the given constructor and with the specified instance members.\n      /// </summary>\n      /// <param name="constructor" type="Function" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <param name="instanceMembers" type="Object" locid="10">\n      /// The set of instance fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <param name="staticMembers" type="Object" locid="11">\n      /// The set of static fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <returns type="Function" locid="12">\n      /// The newly defined class.\n      /// </returns>\n      constructor = constructor || function () { };\n      if (instanceMembers) {\n        initializeProperties(constructor.prototype, instanceMembers);\n      }\n      if (staticMembers) {\n        initializeProperties(constructor, staticMembers);\n      }\n      return constructor;\n    }\n\n    function derive(baseClass, constructor, instanceMembers, staticMembers) {\n      /// <summary locid="13">\n      /// Uses prototypal inheritance to create a sub-class based on the supplied baseClass parameter.\n      /// </summary>\n      /// <param name="baseClass" type="Function" locid="14">\n      /// The class to inherit from.\n      /// </param>\n      /// <param name="constructor" type="Function" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <param name="instanceMembers" type="Object" locid="10">\n      /// The set of instance fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <param name="staticMembers" type="Object" locid="11">\n      /// The set of static fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <returns type="Function" locid="12">\n      /// The newly defined class.\n      /// </returns>\n      if (baseClass) {\n        constructor = constructor || function () { };\n        var basePrototype = baseClass.prototype;\n        constructor.prototype = Object.create(basePrototype);\n        Object.defineProperty(constructor.prototype, "_super", { value: basePrototype });\n        Object.defineProperty(constructor.prototype, "constructor", { value: constructor });\n        if (instanceMembers) {\n          initializeProperties(constructor.prototype, instanceMembers);\n        }\n        if (staticMembers) {\n          initializeProperties(constructor, staticMembers);\n        }\n        return constructor;\n      } else {\n        return define(constructor, instanceMembers, staticMembers);\n      }\n    }\n\n    function mix(constructor) {\n      /// <summary locid="15">\n      /// Defines a class using the given constructor and the union of the set of instance members\n      /// specified by all the mixin objects.  The mixin parameter list can be of variable length.\n      /// </summary>\n      /// <param name="constructor" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <returns locid="12">\n      /// The newly defined class.\n      /// </returns>\n      constructor = constructor || function () { };\n      var i, len;\n      for (i = 0, len = arguments.length; i < len; i++) {\n        initializeProperties(constructor.prototype, arguments[i]);\n      }\n      return constructor;\n    }\n\n    // Establish members of "WinJS.Class" namespace\n    WinJS.Namespace.define("WinJS.Class", {\n      define: define,\n      derive: derive,\n      mix: mix\n    });\n\n  })(WinJS);\n\n})(this);'},74471:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<!doctype html>\n<html>\n  <head>\n    <title>My Django web application</title>\n  </head>\n  <body>\n    <h1>\n      {{ page.title|capfirst }}\n    </h1>\n    <ul class="my-list">\n      {# traverse a list of items and produce links to their views. #}\n      {% for item in items %}\n      <li>\n        <a href="{% url \'item_view\' item.name|slugify %}">\n          {{ item.name }}\n        </a>\n      </li>\n      {% empty %}\n      <li>You have no items in your list.</li>\n      {% endfor %}\n    </ul>\n    {% comment "this is a forgotten footer" %}\n    <footer></footer>\n    {% endcomment %}\n  </body>\n</html>\n'},39029:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="FROM mono:3.12\n\nENV KRE_FEED https://www.myget.org/F/aspnetvnext/api/v2\nENV KRE_USER_HOME /opt/kre\n\nRUN apt-get -qq update && apt-get -qqy install unzip \n\nONBUILD RUN curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/kvminstall.sh | sh\nONBUILD RUN bash -c \"source $KRE_USER_HOME/kvm/kvm.sh     && kvm install latest -a default     && kvm alias default | xargs -i ln -s $KRE_USER_HOME/packages/{} $KRE_USER_HOME/packages/default\"\n\n# Install libuv for Kestrel from source code (binary is not in wheezy and one in jessie is still too old)\nRUN apt-get -qqy install     autoconf     automake     build-essential     libtool \nRUN LIBUV_VERSION=1.0.0-rc2     && curl -sSL https://github.com/joyent/libuv/archive/v${LIBUV_VERSION}.tar.gz | tar zxfv - -C /usr/local/src     && cd /usr/local/src/libuv-$LIBUV_VERSION     && sh autogen.sh && ./configure && make && make install     && rm -rf /usr/local/src/libuv-$LIBUV_VERSION     && ldconfig\n\nENV PATH $PATH:$KRE_USER_HOME/packages/default/bin\n\n# Extra things to test\nRUN echo \"string at end\"\nRUN echo must work 'some str' and some more\nRUN echo hi this is # not a comment\nRUN echo 'String with ${VAR} and another $one here'"},83696:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<?xml version="1.0" encoding="UTF-8"?>\n\n<!ATTLIST title\n  xmlns CDATA #FIXED  "http://docbook.org/ns/docbook"\n  role  CDATA #IMPLIED\n  %db.common.attributes;\n  %db.common.linking.attributes;\n>\n\n\x3c!--\n  Try: http://docbook.org/xml/5.0/dtd/docbook.dtd\n--\x3e\n\n<!DOCTYPE xsl:stylesheet\n  [\n    <!ENTITY nbsp   "&#160;">\n    <!ENTITY copy   "&#169;">\n    <!ENTITY reg    "&#174;">\n    <!ENTITY trade  "&#8482;">\n    <!ENTITY mdash  "&#8212;">\n    <!ENTITY ldquo  "&#8220;">\n    <!ENTITY rdquo  "&#8221;">\n    <!ENTITY pound  "&#163;">\n    <!ENTITY yen    "&#165;">\n    <!ENTITY euro   "&#8364;">\n    <!ENTITY mathml "http://www.w3.org/1998/Math/MathML">\n  ]\n>\n\n<!ELEMENT title (#PCDATA|inlinemediaobject|remark|superscript|subscript|xref|link|olink|anchor|biblioref|alt|annotation|indexterm|abbrev|acronym|date|emphasis|footnote|footnoteref|foreignphrase|phrase|quote|wordasword|firstterm|glossterm|coref|trademark|productnumber|productname|database|application|hardware|citation|citerefentry|citetitle|citebiblioid|author|person|personname|org|orgname|editor|jobtitle|replaceable|package|parameter|termdef|nonterminal|systemitem|option|optional|property|inlineequation|tag|markup|token|symbol|literal|code|constant|email|uri|guiicon|guibutton|guimenuitem|guimenu|guisubmenu|guilabel|menuchoice|mousebutton|keycombo|keycap|keycode|keysym|shortcut|accel|prompt|envar|filename|command|computeroutput|userinput|function|varname|returnvalue|type|classname|exceptionname|interfacename|methodname|modifier|initializer|ooclass|ooexception|oointerface|errorcode|errortext|errorname|errortype)*>\n\n<!ENTITY % db.common.attributes "\n  xml:id  ID #IMPLIED\n  version CDATA #IMPLIED\n  xml:lang CDATA #IMPLIED\n  xml:base CDATA #IMPLIED\n  remap CDATA #IMPLIED\n  xreflabel CDATA #IMPLIED\n  revisionflag (changed|added|deleted|off) #IMPLIED\n  dir (ltr|rtl|lro|rlo) #IMPLIED\n  arch CDATA #IMPLIED\n  audience CDATA #IMPLIED\n  condition CDATA #IMPLIED\n  conformance CDATA #IMPLIED\n  os CDATA #IMPLIED\n  revision CDATA #IMPLIED\n  security CDATA #IMPLIED\n  userlevel CDATA #IMPLIED\n  vendor CDATA #IMPLIED\n  wordsize CDATA #IMPLIED\n  annotations CDATA #IMPLIED\n">\n'},7382:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='Module:       locators-internals\nSynopsis:     Abstract modeling of locations\nAuthor:       Andy Armstrong\nCopyright:    Original Code is Copyright (c) 1995-2004 Functional Objects, Inc.\n              All rights reserved.\nLicense:      See License.txt in this distribution for details.\nWarranty:     Distributed WITHOUT WARRANTY OF ANY KIND\n\ndefine open generic locator-server\n    (locator :: <locator>) => (server :: false-or(<server-locator>));\ndefine open generic locator-host\n    (locator :: <locator>) => (host :: false-or(<string>));\ndefine open generic locator-volume\n    (locator :: <locator>) => (volume :: false-or(<string>));\ndefine open generic locator-directory\n    (locator :: <locator>) => (directory :: false-or(<directory-locator>));\ndefine open generic locator-relative?\n    (locator :: <locator>) => (relative? :: <boolean>);\ndefine open generic locator-path\n    (locator :: <locator>) => (path :: <sequence>);\ndefine open generic locator-base\n    (locator :: <locator>) => (base :: false-or(<string>));\ndefine open generic locator-extension\n    (locator :: <locator>) => (extension :: false-or(<string>));\n\n/// Locator classes\n\ndefine open abstract class <directory-locator> (<physical-locator>)\nend class <directory-locator>;\n\ndefine open abstract class <file-locator> (<physical-locator>)\nend class <file-locator>;\n\ndefine method as\n    (class == <directory-locator>, string :: <string>)\n => (locator :: <directory-locator>)\n  as(<native-directory-locator>, string)\nend method as;\n\ndefine method make\n    (class == <directory-locator>,\n     #key server :: false-or(<server-locator>) = #f,\n          path :: <sequence> = #[],\n          relative? :: <boolean> = #f,\n          name :: false-or(<string>) = #f)\n => (locator :: <directory-locator>)\n  make(<native-directory-locator>,\n       server:    server,\n       path:      path,\n       relative?: relative?,\n       name:      name)\nend method make;\n\ndefine method as\n    (class == <file-locator>, string :: <string>)\n => (locator :: <file-locator>)\n  as(<native-file-locator>, string)\nend method as;\n\ndefine method make\n    (class == <file-locator>,\n     #key directory :: false-or(<directory-locator>) = #f,\n          base :: false-or(<string>) = #f,\n          extension :: false-or(<string>) = #f,\n          name :: false-or(<string>) = #f)\n => (locator :: <file-locator>)\n  make(<native-file-locator>,\n       directory: directory,\n       base:      base,\n       extension: extension,\n       name:      name)\nend method make;\n\n/// Locator coercion\n\n//---*** andrewa: This caching scheme doesn\'t work yet, so disable it.\ndefine constant $cache-locators?        = #f;\ndefine constant $cache-locator-strings? = #f;\n\ndefine constant $locator-to-string-cache = make(<object-table>, weak: #"key");\ndefine constant $string-to-locator-cache = make(<string-table>, weak: #"value");\n\ndefine open generic locator-as-string\n    (class :: subclass(<string>), locator :: <locator>)\n => (string :: <string>);\n\ndefine open generic string-as-locator\n    (class :: subclass(<locator>), string :: <string>)\n => (locator :: <locator>);\n\ndefine sealed sideways method as\n    (class :: subclass(<string>), locator :: <locator>)\n => (string :: <string>)\n  let string = element($locator-to-string-cache, locator, default: #f);\n  if (string)\n    as(class, string)\n  else\n    let string = locator-as-string(class, locator);\n    if ($cache-locator-strings?)\n      element($locator-to-string-cache, locator) := string;\n    else\n      string\n    end\n  end\nend method as;\n\ndefine sealed sideways method as\n    (class :: subclass(<locator>), string :: <string>)\n => (locator :: <locator>)\n  let locator = element($string-to-locator-cache, string, default: #f);\n  if (instance?(locator, class))\n    locator\n  else\n    let locator = string-as-locator(class, string);\n    if ($cache-locators?)\n      element($string-to-locator-cache, string) := locator;\n    else\n      locator\n    end\n  end\nend method as;\n\n/// Locator conditions\n\ndefine class <locator-error> (<format-string-condition>, <error>)\nend class <locator-error>;\n\ndefine function locator-error\n    (format-string :: <string>, #rest format-arguments)\n  error(make(<locator-error>, \n             format-string:    format-string,\n             format-arguments: format-arguments))\nend function locator-error;\n\n/// Useful locator protocols\n\ndefine open generic locator-test\n    (locator :: <directory-locator>) => (test :: <function>);\n\ndefine method locator-test\n    (locator :: <directory-locator>) => (test :: <function>)\n  \\=\nend method locator-test;\n\ndefine open generic locator-might-have-links?\n    (locator :: <directory-locator>) => (links? :: <boolean>);\n\ndefine method locator-might-have-links?\n    (locator :: <directory-locator>) => (links? :: singleton(#f))\n  #f\nend method locator-might-have-links?;\n\ndefine method locator-relative?\n    (locator :: <file-locator>) => (relative? :: <boolean>)\n  let directory = locator.locator-directory;\n  ~directory | directory.locator-relative?\nend method locator-relative?;\n\ndefine method current-directory-locator?\n    (locator :: <directory-locator>) => (current-directory? :: <boolean>)\n  locator.locator-relative?\n    & locator.locator-path = #[#"self"]\nend method current-directory-locator?;\n\ndefine method locator-directory\n    (locator :: <directory-locator>) => (parent :: false-or(<directory-locator>))\n  let path = locator.locator-path;\n  unless (empty?(path))\n    make(object-class(locator),\n         server:    locator.locator-server,\n         path:      copy-sequence(path, end: path.size - 1),\n         relative?: locator.locator-relative?)\n  end\nend method locator-directory;\n\n/// Simplify locator\n\ndefine open generic simplify-locator\n    (locator :: <physical-locator>)\n => (simplified-locator :: <physical-locator>);\n\ndefine method simplify-locator\n    (locator :: <directory-locator>)\n => (simplified-locator :: <directory-locator>)\n  let path = locator.locator-path;\n  let relative? = locator.locator-relative?;\n  let resolve-parent? = ~locator.locator-might-have-links?;\n  let simplified-path\n    = simplify-path(path, \n                    resolve-parent?: resolve-parent?,\n                    relative?: relative?);\n  if (path ~= simplified-path)\n    make(object-class(locator),\n         server:    locator.locator-server,\n         path:      simplified-path,\n         relative?: locator.locator-relative?)\n  else\n    locator\n  end\nend method simplify-locator;\n\ndefine method simplify-locator\n    (locator :: <file-locator>) => (simplified-locator :: <file-locator>)\n  let directory = locator.locator-directory;\n  let simplified-directory = directory & simplify-locator(directory);\n  if (directory ~= simplified-directory)\n    make(object-class(locator),\n         directory: simplified-directory,\n         base:      locator.locator-base,\n         extension: locator.locator-extension)\n  else\n    locator\n  end\nend method simplify-locator;\n\n/// Subdirectory locator\n\ndefine open generic subdirectory-locator\n    (locator :: <directory-locator>, #rest sub-path)\n => (subdirectory :: <directory-locator>);\n\ndefine method subdirectory-locator\n    (locator :: <directory-locator>, #rest sub-path)\n => (subdirectory :: <directory-locator>)\n  let old-path = locator.locator-path;\n  let new-path = concatenate-as(<simple-object-vector>, old-path, sub-path);\n  make(object-class(locator),\n       server:    locator.locator-server,\n       path:      new-path,\n       relative?: locator.locator-relative?)\nend method subdirectory-locator;\n\n/// Relative locator\n\ndefine open generic relative-locator\n    (locator :: <physical-locator>, from-locator :: <physical-locator>)\n => (relative-locator :: <physical-locator>);\n\ndefine method relative-locator\n    (locator :: <directory-locator>, from-locator :: <directory-locator>)\n => (relative-locator :: <directory-locator>)\n  let path = locator.locator-path;\n  let from-path = from-locator.locator-path;\n  case\n    ~locator.locator-relative? & from-locator.locator-relative? =>\n      locator-error\n        ("Cannot find relative path of absolute locator %= from relative locator %=",\n         locator, from-locator);\n    locator.locator-server ~= from-locator.locator-server =>\n      locator;\n    path = from-path =>\n      make(object-class(locator),\n           path: vector(#"self"),\n           relative?: #t);\n    otherwise =>\n      make(object-class(locator),\n           path: relative-path(path, from-path, test: locator.locator-test),\n           relative?: #t);\n  end\nend method relative-locator;\n\ndefine method relative-locator\n    (locator :: <file-locator>, from-directory :: <directory-locator>)\n => (relative-locator :: <file-locator>)\n  let directory = locator.locator-directory;\n  let relative-directory = directory & relative-locator(directory, from-directory);\n  if (relative-directory ~= directory)\n    simplify-locator\n      (make(object-class(locator),\n            directory: relative-directory,\n            base:      locator.locator-base,\n            extension: locator.locator-extension))\n  else\n    locator\n  end\nend method relative-locator;\n\ndefine method relative-locator\n    (locator :: <physical-locator>, from-locator :: <file-locator>)\n => (relative-locator :: <physical-locator>)\n  let from-directory = from-locator.locator-directory;\n  case\n    from-directory =>\n      relative-locator(locator, from-directory);\n    ~locator.locator-relative? =>\n      locator-error\n        ("Cannot find relative path of absolute locator %= from relative locator %=",\n         locator, from-locator);\n    otherwise =>\n      locator;\n  end\nend method relative-locator;\n\n/// Merge locators\n\ndefine open generic merge-locators\n    (locator :: <physical-locator>, from-locator :: <physical-locator>)\n => (merged-locator :: <physical-locator>);\n\n/// Merge locators\n\ndefine method merge-locators\n    (locator :: <directory-locator>, from-locator :: <directory-locator>)\n => (merged-locator :: <directory-locator>)\n  if (locator.locator-relative?)\n    let path = concatenate(from-locator.locator-path, locator.locator-path);\n    simplify-locator\n      (make(object-class(locator),\n            server:    from-locator.locator-server,\n            path:      path,\n            relative?: from-locator.locator-relative?))\n  else\n    locator\n  end\nend method merge-locators;\n\ndefine method merge-locators\n    (locator :: <file-locator>, from-locator :: <directory-locator>)\n => (merged-locator :: <file-locator>)\n  let directory = locator.locator-directory;\n  let merged-directory \n    = if (directory)\n        merge-locators(directory, from-locator)\n      else\n        simplify-locator(from-locator)\n      end;\n  if (merged-directory ~= directory)\n    make(object-class(locator),\n         directory: merged-directory,\n         base:      locator.locator-base,\n         extension: locator.locator-extension)\n  else\n    locator\n  end\nend method merge-locators;\n\ndefine method merge-locators\n    (locator :: <physical-locator>, from-locator :: <file-locator>)\n => (merged-locator :: <physical-locator>)\n  let from-directory = from-locator.locator-directory;\n  if (from-directory)\n    merge-locators(locator, from-directory)\n  else\n    locator\n  end\nend method merge-locators;\n\n/// Locator protocols\n\ndefine sideways method supports-open-locator?\n    (locator :: <file-locator>) => (openable? :: <boolean>)\n  ~locator.locator-relative?\nend method supports-open-locator?;\n\ndefine sideways method open-locator\n    (locator :: <file-locator>, #rest keywords, #key, #all-keys)\n => (stream :: <stream>)\n  apply(open-file-stream, locator, keywords)\nend method open-locator;\n\n'},91771:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="F0 := IMDB.File_actors;\nCountActors := RECORD\nF0.ActorName;\nUNSIGNED C := COUNT(GROUP);\nEND;\nMoviesIn := TABLE(F0,CountActors,ActorName);\nOUTPUT(TOPN(MoviesIn,100,-C));\n"},17006:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='note\n    description: "[\n        Project-wide universal properties.\n        This class is an ancestor to all developer-written classes.\n        ANY may be customized for individual projects or teams.\n        ]"\n\n    library: "Free implementation of ELKS library"\n    status: "See notice at end of class."\n    legal: "See notice at end of class."\n    date: "$Date: 2013-01-25 11:49:00 -0800 (Fri, 25 Jan 2013) $"\n    revision: "$Revision: 712 $"\n\nclass\n    ANY\n\nfeature -- Customization\n\nfeature -- Access\n\n    generator: STRING\n            -- Name of current object\'s generating class\n            -- (base class of the type of which it is a direct instance)\n        external\n            "built_in"\n        ensure\n            generator_not_void: Result /= Void\n            generator_not_empty: not Result.is_empty\n        end\n\n    generating_type: TYPE [detachable like Current]\n            -- Type of current object\n            -- (type of which it is a direct instance)\n        do\n            Result := {detachable like Current}\n        ensure\n            generating_type_not_void: Result /= Void\n        end\n\nfeature -- Status report\n\n    conforms_to (other: ANY): BOOLEAN\n            -- Does type of current object conform to type\n            -- of `other\' (as per Eiffel: The Language, chapter 13)?\n        require\n            other_not_void: other /= Void\n        external\n            "built_in"\n        end\n\n    same_type (other: ANY): BOOLEAN\n            -- Is type of current object identical to type of `other\'?\n        require\n            other_not_void: other /= Void\n        external\n            "built_in"\n        ensure\n            definition: Result = (conforms_to (other) and\n                                        other.conforms_to (Current))\n        end\n\nfeature -- Comparison\n\n    is_equal (other: like Current): BOOLEAN\n            -- Is `other\' attached to an object considered\n            -- equal to current object?\n        require\n            other_not_void: other /= Void\n        external\n            "built_in"\n        ensure\n            symmetric: Result implies other ~ Current\n            consistent: standard_is_equal (other) implies Result\n        end\n\n    frozen standard_is_equal (other: like Current): BOOLEAN\n            -- Is `other\' attached to an object of the same type\n            -- as current object, and field-by-field identical to it?\n        require\n            other_not_void: other /= Void\n        external\n            "built_in"\n        ensure\n            same_type: Result implies same_type (other)\n            symmetric: Result implies other.standard_is_equal (Current)\n        end\n\n    frozen equal (a: detachable ANY; b: like a): BOOLEAN\n            -- Are `a\' and `b\' either both void or attached\n            -- to objects considered equal?\n        do\n            if a = Void then\n                Result := b = Void\n            else\n                Result := b /= Void and then\n                            a.is_equal (b)\n            end\n        ensure\n            definition: Result = (a = Void and b = Void) or else\n                        ((a /= Void and b /= Void) and then\n                        a.is_equal (b))\n        end\n\n    frozen standard_equal (a: detachable ANY; b: like a): BOOLEAN\n            -- Are `a\' and `b\' either both void or attached to\n            -- field-by-field identical objects of the same type?\n            -- Always uses default object comparison criterion.\n        do\n            if a = Void then\n                Result := b = Void\n            else\n                Result := b /= Void and then\n                            a.standard_is_equal (b)\n            end\n        ensure\n            definition: Result = (a = Void and b = Void) or else\n                        ((a /= Void and b /= Void) and then\n                        a.standard_is_equal (b))\n        end\n\n    frozen is_deep_equal (other: like Current): BOOLEAN\n            -- Are `Current\' and `other\' attached to isomorphic object structures?\n        require\n            other_not_void: other /= Void\n        external\n            "built_in"\n        ensure\n            shallow_implies_deep: standard_is_equal (other) implies Result\n            same_type: Result implies same_type (other)\n            symmetric: Result implies other.is_deep_equal (Current)\n        end\n\n    frozen deep_equal (a: detachable ANY; b: like a): BOOLEAN\n            -- Are `a\' and `b\' either both void\n            -- or attached to isomorphic object structures?\n        do\n            if a = Void then\n                Result := b = Void\n            else\n                Result := b /= Void and then a.is_deep_equal (b)\n            end\n        ensure\n            shallow_implies_deep: standard_equal (a, b) implies Result\n            both_or_none_void: (a = Void) implies (Result = (b = Void))\n            same_type: (Result and (a /= Void)) implies (b /= Void and then a.same_type (b))\n            symmetric: Result implies deep_equal (b, a)\n        end\n\nfeature -- Duplication\n\n    frozen twin: like Current\n            -- New object equal to `Current\'\n            -- `twin\' calls `copy\'; to change copying/twinning semantics, redefine `copy\'.\n        external\n            "built_in"\n        ensure\n            twin_not_void: Result /= Void\n            is_equal: Result ~ Current\n        end\n\n    copy (other: like Current)\n            -- Update current object using fields of object attached\n            -- to `other\', so as to yield equal objects.\n        require\n            other_not_void: other /= Void\n            type_identity: same_type (other)\n        external\n            "built_in"\n        ensure\n            is_equal: Current ~ other\n        end\n\n    frozen standard_copy (other: like Current)\n            -- Copy every field of `other\' onto corresponding field\n            -- of current object.\n        require\n            other_not_void: other /= Void\n            type_identity: same_type (other)\n        external\n            "built_in"\n        ensure\n            is_standard_equal: standard_is_equal (other)\n        end\n\n    frozen clone (other: detachable ANY): like other\n            -- Void if `other\' is void; otherwise new object\n            -- equal to `other\'\n            --\n            -- For non-void `other\', `clone\' calls `copy\';\n            -- to change copying/cloning semantics, redefine `copy\'.\n        obsolete\n            "Use `twin\' instead."\n        do\n            if other /= Void then\n                Result := other.twin\n            end\n        ensure\n            equal: Result ~ other\n        end\n\n    frozen standard_clone (other: detachable ANY): like other\n            -- Void if `other\' is void; otherwise new object\n            -- field-by-field identical to `other\'.\n            -- Always uses default copying semantics.\n        obsolete\n            "Use `standard_twin\' instead."\n        do\n            if other /= Void then\n                Result := other.standard_twin\n            end\n        ensure\n            equal: standard_equal (Result, other)\n        end\n\n    frozen standard_twin: like Current\n            -- New object field-by-field identical to `other\'.\n            -- Always uses default copying semantics.\n        external\n            "built_in"\n        ensure\n            standard_twin_not_void: Result /= Void\n            equal: standard_equal (Result, Current)\n        end\n\n    frozen deep_twin: like Current\n            -- New object structure recursively duplicated from Current.\n        external\n            "built_in"\n        ensure\n            deep_twin_not_void: Result /= Void\n            deep_equal: deep_equal (Current, Result)\n        end\n\n    frozen deep_clone (other: detachable ANY): like other\n            -- Void if `other\' is void: otherwise, new object structure\n            -- recursively duplicated from the one attached to `other\'\n        obsolete\n            "Use `deep_twin\' instead."\n        do\n            if other /= Void then\n                Result := other.deep_twin\n            end\n        ensure\n            deep_equal: deep_equal (other, Result)\n        end\n\n    frozen deep_copy (other: like Current)\n            -- Effect equivalent to that of:\n            --      `copy\' (`other\' . `deep_twin\')\n        require\n            other_not_void: other /= Void\n        do\n            copy (other.deep_twin)\n        ensure\n            deep_equal: deep_equal (Current, other)\n        end\n\nfeature {NONE} -- Retrieval\n\n    frozen internal_correct_mismatch\n            -- Called from runtime to perform a proper dynamic dispatch on `correct_mismatch\'\n            -- from MISMATCH_CORRECTOR.\n        local\n            l_msg: STRING\n            l_exc: EXCEPTIONS\n        do\n            if attached {MISMATCH_CORRECTOR} Current as l_corrector then\n                l_corrector.correct_mismatch\n            else\n                create l_msg.make_from_string ("Mismatch: ")\n                create l_exc\n                l_msg.append (generating_type.name)\n                l_exc.raise_retrieval_exception (l_msg)\n            end\n        end\n\nfeature -- Output\n\n    io: STD_FILES\n            -- Handle to standard file setup\n        once\n            create Result\n            Result.set_output_default\n        ensure\n            io_not_void: Result /= Void\n        end\n\n    out: STRING\n            -- New string containing terse printable representation\n            -- of current object\n        do\n            Result := tagged_out\n        ensure\n            out_not_void: Result /= Void\n        end\n\n    frozen tagged_out: STRING\n            -- New string containing terse printable representation\n            -- of current object\n        external\n            "built_in"\n        ensure\n            tagged_out_not_void: Result /= Void\n        end\n\n    print (o: detachable ANY)\n            -- Write terse external representation of `o\'\n            -- on standard output.\n        do\n            if o /= Void then\n                io.put_string (o.out)\n            end\n        end\n\nfeature -- Platform\n\n    Operating_environment: OPERATING_ENVIRONMENT\n            -- Objects available from the operating system\n        once\n            create Result\n        ensure\n            operating_environment_not_void: Result /= Void\n        end\n\nfeature {NONE} -- Initialization\n\n    default_create\n            -- Process instances of classes with no creation clause.\n            -- (Default: do nothing.)\n        do\n        end\n\nfeature -- Basic operations\n\n    default_rescue\n            -- Process exception for routines with no Rescue clause.\n            -- (Default: do nothing.)\n        do\n        end\n\n    frozen do_nothing\n            -- Execute a null action.\n        do\n        end\n\n    frozen default: detachable like Current\n            -- Default value of object\'s type\n        do\n        end\n\n    frozen default_pointer: POINTER\n            -- Default value of type `POINTER\'\n            -- (Avoid the need to write `p\'.`default\' for\n            -- some `p\' of type `POINTER\'.)\n        do\n        ensure\n            -- Result = Result.default\n        end\n\n    frozen as_attached: attached like Current\n            -- Attached version of Current\n            -- (Can be used during transitional period to convert\n            -- non-void-safe classes to void-safe ones.)\n        do\n            Result := Current\n        end\n\ninvariant\n    reflexive_equality: standard_is_equal (Current)\n    reflexive_conformance: conforms_to (Current)\n\nnote\n    copyright: "Copyright (c) 1984-2012, Eiffel Software and others"\n    license:   "Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"\n    source: "[\n            Eiffel Software\n            5949 Hollister Ave., Goleta, CA 93117 USA\n            Telephone 805-685-1006, Fax 805-685-6869\n            Website http://www.eiffel.com\n            Customer support http://support.eiffel.com\n        ]"\n\nend\n'},45539:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# Elixir is a dynamic, functional language for building scalable\n# and maintainable applications. Learn more: https://elixir-lang.org\n\n"Elixir" |> String.graphemes() |> Enum.frequencies()\n#=> %{"E" => 1, "i" => 2, "l" => 1, "r" => 1, "x" => 1}\n\n\n### Scalability ###\n\n# All Elixir code runs inside lightweight threads of execution (called processes)\n# that are isolated and exchange information via messages:\n\ncurrent_process = self()\n\n# Spawn an Elixir process (not an operating system one!)\nspawn_link(fn ->\n  send(current_process, {:msg, "hello world"})\nend)\n\n# Block until the message is received\nreceive do\n  {:msg, contents} -> IO.puts(contents)\nend\n\n\n### Fault-tolerance ###\n\n# To cope with failures, Elixir provides supervisors which describe\n# how to restart parts of your system when things go awry, going back\n# to a known initial state that is guaranteed to work:\n\nchildren = [\n  TCP.Pool,\n  {TCP.Acceptor, port: 4040}\n]\n\nSupervisor.start_link(children, strategy: :one_for_one)\n\n\n### Functional programming ###\n\n# Functional programming promotes a coding style that helps\n# developers write code that is short, concise, and maintainable.\n# One prominent example is pattern matching:\n\n%User{name: name, age: age} = User.get("John Doe")\nname #=> "John Doe"\n\n# When mixed with guards, pattern matching allows us to elegantly\n# match and assert specific conditions for some code to execute:\n\ndef drive(%User{age: age}) when age >= 16 do\n  # Code that drives a car\nend\n\ndrive(User.get("John Doe"))\n#=> Fails if the user is under 16\n\n\n### Extensibility and DSLs ###\n\n# Elixir has been designed to be extensible, letting developers\n# naturally extend the language to particular domains,\n# in order to increase their productivity.\n\ndefmodule MathTest do\n  use ExUnit.Case, async: true\n\n  test "can add two numbers" do\n    assert 1 + 1 == 2\n  end\nend\n\n\n### Erlang compatible ###\n\n# An Elixir programmer can invoke any Erlang function with no runtime cost:\n\n:crypto.hash(:md5, "Using crypto from Erlang OTP")\n#=> <<192, 223, 75, 115, ...>>\n'},5834:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="import Color exposing (..)\nimport Graphics.Collage exposing (..)\nimport Graphics.Element exposing (..)\nimport Time exposing (..)\n\nmain =\n  Signal.map clock (every second)\n\nclock t =\n  collage 400 400\n    [ filled    lightGrey   (ngon 12 110)\n    , outlined (solid grey) (ngon 12 110)\n    , hand orange   100  t\n    , hand charcoal 100 (t/60)\n    , hand charcoal 60  (t/720)\n    ]\n\nhand clr len time =\n  let angle = degrees (90 - 6 * inSeconds time)\n  in\n      segment (0,0) (fromPolar (len,angle))\n        |> traced (solid clr)\n\n"},80866:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='%% -*- mode: erlang; erlang-indent-level: 2 -*-\n%%% Created :  7 May 2012 by mats cronqvist <masse@klarna.com>\n\n%% @doc\n%% Demonstrates how to print a record.\n%% @end\n\n-module(\'ex\').\n-author(\'mats cronqvist\').\n-export([demo/0,\n         rec_info/1]).\n\n-record(demo,{a="One",b="Two",c="Three",d="Four"}).\n\nrec_info(demo) -> record_info(fields,demo).\n\ndemo() -> expand_recs(?MODULE,#demo{a="A",b="BB"}).\n\nexpand_recs(M,List) when is_list(List) ->\n  [expand_recs(M,L)||L<-List];\nexpand_recs(M,Tup) when is_tuple(Tup) ->\n  case tuple_size(Tup) of\n    L when L < 1 -> Tup;\n    L ->\n      try\n        Fields = M:rec_info(element(1,Tup)),\n        L = length(Fields)+1,\n        lists:zip(Fields,expand_recs(M,tl(tuple_to_list(Tup))))\n      catch\n        _:_ -> list_to_tuple(expand_recs(M,tuple_to_list(Tup)))\n      end\n  end;\nexpand_recs(_,Term) ->\n  Term.\n\n'},69686:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='! Copyright (C) 2008 Slava Pestov.\n! See http://factorcode.org/license.txt for BSD license.\n\n! A simple time server\n\nUSING: accessors calendar calendar.format io io.encodings.ascii\nio.servers kernel threads ;\nIN: time-server\n\n: handle-time-client ( -- )\n    now timestamp>rfc822 print ;\n\n: <time-server> ( -- threaded-server )\n    ascii <threaded-server>\n        "time-server" >>name\n        1234 >>insecure\n        [ handle-time-client ] >>handler ;\n\n: start-time-server ( -- )\n    <time-server> start-server drop ;\n\nMAIN: start-time-server\n\n'},59508:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="  FUNCTION_BLOCK Fuzzy_FB\n      VAR_INPUT\n          TimeDay : REAL; (* RANGE(0 .. 23) *)\n          ApplicateHost: REAL;\n          TimeConfiguration: REAL;\n          TimeRequirements: REAL;\n      END_VAR\n\n      VAR_OUTPUT\n          ProbabilityDistribution: REAL;\n          ProbabilityAccess: REAL;\n      END_VAR\n\n      FUZZIFY TimeDay\n          TERM inside := (0, 0) (8, 1) (22,0);\n          TERM outside := (0, 1) (8, 0) (22, 1);\n      END_FUZZIFY\n\n      FUZZIFY ApplicateHost\n          TERM few := (0, 1) (100, 0) (200, 0);\n          TERM many := (0, 0) (100, 0) (200, 1);\n      END_FUZZIFY\n\n      FUZZIFY TimeConfiguration\n          TERM recently := (0, 1) (30, 1) (120, 0);\n          TERM long := (0, 0) (30, 0) (120, 1);\n      END_FUZZIFY\n\n      FUZZIFY TimeRequirements\n          TERM recently := (0, 1) (30, 1) (365, 0);\n          TERM long := (0, 0) (30, 0) (365, 1);\n      END_FUZZIFY\n\n      DEFUZZIFY ProbabilityAccess\n          TERM hight := 1;\n          TERM medium := 0.5;\n          TERM low := 0;\n          ACCU: MAX;\n          METHOD: COGS;\n          DEFAULT := 0;\n      END_DEFUZZIFY\n\n      DEFUZZIFY ProbabilityDistribution\n          TERM hight := 1;\n          TERM medium := 0.5;\n          TERM low := 0;\n          ACCU: MAX;\n          METHOD: COGS;\n          DEFAULT := 0;\n      END_DEFUZZIFY\n\n      RULEBLOCK No1\n          AND : MIN;\n          RULE 1 : IF TimeDay IS outside AND ApplicateHost IS few THEN ProbabilityAccess IS hight;\n          RULE 2 : IF ApplicateHost IS many THEN ProbabilityAccess IS hight;\n          RULE 3 : IF TimeDay IS inside AND ApplicateHost IS few THEN ProbabilityAccess IS low;\n      END_RULEBLOCK\n\n      RULEBLOCK No2\n          AND : MIN;\n          RULE 1 : IF ApplicateHost IS many THEN ProbabilityDistribution IS hight;\n      END_RULEBLOCK\n\n  END_FUNCTION_BLOCK\n\n"},14749:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='import material/material;\n\nexport {\n  demoMakeHelloWorld(onClose : () -> void) -> Material;\n}\n\ndemoMakeHelloWorld(onClose : () -> void) -> Material {\n  MCenter(\n    MLines2(\n      MText("Hello, world!", []),\n      MTextButton("CLOSE", onClose, [], [])\n    )\n  );\n}\n'},7614:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="\\ Insertion sort\n\n: cell-  1 cells - ;\n\n: insert ( start end -- start )\n  dup @ >r ( r: v )\n  begin\n    2dup <\n  while\n    r@ over cell- @ <\n  while\n    cell-\n    dup @ over cell+ !\n  repeat then\n  r> swap ! ;\n\n: sort ( array len -- )\n  1 ?do\n    dup i cells + insert\n  loop drop ;\n"},27011:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="! Example Fortran code\n  program average\n\n  ! Read in some numbers and take the average\n  ! As written, if there are no data points, an average of zero is returned\n  ! While this may not be desired behavior, it keeps this example simple\n\n  implicit none\n\n  real, dimension(:), allocatable :: points\n  integer                         :: number_of_points\n  real                            :: average_points=0., positive_average=0., negative_average=0.\n\n  write (*,*) \"Input number of points to average:\"\n  read  (*,*) number_of_points\n\n  allocate (points(number_of_points))\n\n  write (*,*) \"Enter the points to average:\"\n  read  (*,*) points\n\n  ! Take the average by summing points and dividing by number_of_points\n  if (number_of_points > 0) average_points = sum(points) / number_of_points\n\n  ! Now form average over positive and negative points only\n  if (count(points > 0.) > 0) then\n     positive_average = sum(points, points > 0.) / count(points > 0.)\n  end if\n\n  if (count(points < 0.) > 0) then\n     negative_average = sum(points, points < 0.) / count(points < 0.)\n  end if\n\n  deallocate (points)\n\n  ! Print result to terminal\n  write (*,'(a,g12.4)') 'Average = ', average_points\n  write (*,'(a,g12.4)') 'Average of positive points = ', positive_average\n  write (*,'(a,g12.4)') 'Average of negative points = ', negative_average\n\n  end program average\n"},69953:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<#ftl stripText=false>\n\n<#-- Free marker demo --\x3e\n\n<#comment>\nThis demonstrates the FreeMarker language. The default theme is not very\ncolorful and displays many different token types in the same color, but keep in\nmind that you can define your own theme (or extend an existing one).\n\nNote that free marker actually defines 6 similar but different syntax modes:\n\n- 3 tag syntax modes: Angle (<#if>), Bracket ([#if]), and Auto.\n- 2 interpolation modes: Dollar (${...}) and Bracket ([=...])\n\nIn auto mode, the first tag determines the tag syntax. You can use the language\nIDs "freemarker.tag-bracket.interpolation-dollar" etc. to force a specific mode.\n\nThe default FreeMarker mode is Angle/Dollar.\n</#comment>\n\n<#macro greet name>\n  <font size="+2">Hello ${name}!</font>\n</#macro>\n\n<#macro border>\n  <table border=4 cellspacing=0 cellpadding=4><tr><td>\n    <#nested>\n  </tr></td></table>\n</#macro>\n\n<#function avg x y>\n  <#return (x + y) / 2>\n</#function>\n\n<#assign user = "Juila Smith">\n<#assign animals = [{"name": "Tanuki", "price": 200}, {"name": "Phoenix", "price": 1111}]>\n\n<html>\n<head>\n  <title>Welcome!</title>\n</head>\n<body>\n  <#-- Greet the user with his/her name --\x3e\n  <h1>\n    <@greet user />\n  </h1>\n\n  <p>We have these animals:\n\n  <ul>\n  <#list animals as animal>\n    <li>${animal.name} for ${animal.price} Euros\n  </#list>\n  </ul>\n\n  <@border>The bordered text</@border>\n\n  The average of 35 and 49 is ${avg(35, 49)}.\n\n</body>\n</html>\n'},85535:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='(* Sample F# application *)\n[<EntryPoint>]\nlet main argv = \n    printfn "%A" argv\n    System.Console.WriteLine("Hello from F#")\n    0 // return an integer exit code\n\n//-------------------------------------------------------- \n'},60505:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='.syntax unified\n.global main\n\n/* \n *  A\n *  multi-line\n *  comment.\n */\n\n@ A single line comment.\n\nmain:\n        push    {sp, lr}\n        ldr     r0, =message\n        bl      puts\n        mov     r0, #0\n        pop     {sp, pc}\n\nmessage:\n        .asciz "Hello world!<br />"\n\n'},79598:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="Feature: Using Google\n  Background: \n    Something something\n    Something else\n  Scenario: Has a homepage\n    When I navigate to the google home page\n    Then the home page should contain the menu and the search form\n  Scenario: Searching for a term \n    When I navigate to the google home page\n    When I search for Tofu\n    Then the search results page is displayed\n    Then the search results page contains 10 individual search results\n    Then the search results contain a link to the wikipedia tofu page\n\n"},51309:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='// We often need our programs to perform operations on\n// collections of data, like selecting all items that\n// satisfy a given predicate or mapping all items to a new\n// collection with a custom function.\n\n// In some languages it\'s idiomatic to use [generic](http://en.wikipedia.org/wiki/Generic_programming)\n// data structures and algorithms. Go does not support\n// generics; in Go it\'s common to provide collection\n// functions if and when they are specifically needed for\n// your program and data types.\n\n// Here are some example collection functions for slices\n// of `strings`. You can use these examples to build your\n// own functions. Note that in some cases it may be\n// clearest to just inline the collection-manipulating\n// code directly, instead of creating and calling a\n// helper function.\n\npackage main\n\nimport "strings"\nimport "fmt"\n\n// Returns the first index of the target string `t`, or\n// -1 if no match is found.\nfunc Index(vs []string, t string) int {\n    for i, v := range vs {\n        if v == t {\n            return i\n        }\n    }\n    return -1\n}\n\n// Returns `true` if the target string t is in the\n// slice.\nfunc Include(vs []string, t string) bool {\n    return Index(vs, t) >= 0\n}\n\n// Returns `true` if one of the strings in the slice\n// satisfies the predicate `f`.\nfunc Any(vs []string, f func(string) bool) bool {\n    for _, v := range vs {\n        if f(v) {\n            return true\n        }\n    }\n    return false\n}\n\n// Returns `true` if all of the strings in the slice\n// satisfy the predicate `f`.\nfunc All(vs []string, f func(string) bool) bool {\n    for _, v := range vs {\n        if !f(v) {\n            return false\n        }\n    }\n    return true\n}\n\n// Returns a new slice containing all strings in the\n// slice that satisfy the predicate `f`.\nfunc Filter(vs []string, f func(string) bool) []string {\n    vsf := make([]string, 0)\n    for _, v := range vs {\n        if f(v) {\n            vsf = append(vsf, v)\n        }\n    }\n    return vsf\n}\n\n// Returns a new slice containing the results of applying\n// the function `f` to each string in the original slice.\nfunc Map(vs []string, f func(string) string) []string {\n    vsm := make([]string, len(vs))\n    for i, v := range vs {\n        vsm[i] = f(v)\n    }\n    return vsm\n}\n\nfunc main() {\n\n    // Here we try out our various collection functions.\n    var strs = []string{"peach", "apple", "pear", "plum"}\n\n    fmt.Println(Index(strs, "pear"))\n\n    fmt.Println(Include(strs, "grape"))\n\n    fmt.Println(Any(strs, func(v string) bool {\n        return strings.HasPrefix(v, "p")\n    }))\n\n    fmt.Println(All(strs, func(v string) bool {\n        return strings.HasPrefix(v, "p")\n    }))\n\n    fmt.Println(Filter(strs, func(v string) bool {\n        return strings.Contains(v, "e")\n    }))\n\n    // The above examples all used anonymous functions,\n    // but you can also use named functions of the correct\n    // type.\n    fmt.Println(Map(strs, strings.ToUpper))\n\n}\n'},99266:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# GraphQL Schema Definition Language\n\n"""\nColor value\n"""\nscalar Color\n\n"""\nNode interface\n\n- allows (re)fetch arbitrary entity only by ID\n- allows client side cache normalization\n\nSee [Relay Global Object Identification Specification](https://facebook.github.io/relay/graphql/objectidentification.htm)\n"""\ninterface Node {\n  """\n  Globally unique identifier,\n  typically `${__typename}:${dbId}`\n  may be encoded in *base64*\n  """\n  id: ID!\n}\n\n"""\nA character in the Star Wars Trilogy\n"""\ninterface Character {\n  """\n  The id of the character.\n  """\n  id: ID!\n\n  """\n  The name of the character.\n  """\n  name: String\n\n  """\n  The friends of the character, or an empty list if they have none.\n  """\n  friends: [Character]\n\n  """\n  Which movies they appear in\n  """\n  appearsIn: [Episode]\n\n  """\n  All secrets about their past\n  """\n  secretBackstory: String\n}\n\n"""\nA mechanical creature in the Star Wars universe.\n"""\ntype Droid implements Character {\n  """\n  The id of the droid.\n  """\n  id: ID!\n\n  """\n  The name of the droid.\n  """\n  name: String\n\n  """\n  The friends of the droid, or an empty list if they have none.\n  """\n  friends: [Character]\n\n  """\n  Which movies they appear in.\n  """\n  appearsIn: [Episode]\n\n  """\n  Construction date and the name of the designer.\n  """\n  secretBackstory: String\n\n  """\n  The primary function of the droid.\n  """\n  primaryFunction: String\n\n  """\n  Chase color of the droid.\n  """\n  color: Color\n}\n\n# One of the films in the Star Wars Trilogy\nenum Episode {\n  """\n  Released in 1977.\n  """\n  NEWHOPE\n\n  """\n  Released in 1980.\n  """\n  EMPIRE\n\n  """\n  Released in 1983.\n  """\n  JEDI\n}\n\n"""\nA humanoid creature in the Star Wars universe.\n"""\ntype Human implements Character {\n  """\n  The id of the human.\n  """\n  id: ID!\n\n  """\n  The name of the human.\n  """\n  name: String\n\n  """\n  The friends of the human, or an empty list if they have none.\n  """\n  friends: [Character]\n\n  """\n  Which movies they appear in.\n  """\n  appearsIn: [Episode]\n\n  """\n  The home planet of the human, or null if unknown.\n  """\n  homePlanet: String\n\n  """\n  Where are they from and how they came to be who they are.\n  """\n  secretBackstory: String\n}\n\nenum LengthUnit {\n  METER\n  FEET\n}\n\ntype Starship {\n  id: ID!\n  name: String!\n  length(unit: LengthUnit = METER): Float\n}\n\nunion SearchResult = Human | Droid | Starship\n\ninput SearchInput {\n  name: String\n  episode: Episode\n}\n\n"""\nRoot Query\n"""\ntype Query {\n  """\n  Return the hero by episode.\n  """\n  hero(\n    """\n    If omitted, returns the hero of the whole saga. If provided, returns the hero of that particular episode.\n    """\n    episode: Episode\n  ): Character\n\n  """\n  Return the Human by ID.\n  """\n  human(\n    """\n    id of the human\n    """\n    id: ID!\n  ): Human\n\n  """\n  Return the Droid by ID.\n  """\n  droid(\n    """\n    id of the droid\n    """\n    id: ID!\n  ): Droid\n\n  """\n  Search everything by name\n\n  __NOTE__: You should use Relay pagination\n  """\n  search(search: SearchInput!): [SearchResult]\n    @deprecated(reason: "`search` will be replaced.")\n}\n\n"""\nRoot Mutation\n"""\ntype Mutation {\n  """\n  Save the favorite episode.\n  """\n  favorite(\n    """\n    Favorite episode.\n    """\n    episode: Episode!\n  ): Episode\n}\n\n"""\nSubscriptions \u2014 live events\n"""\ntype Subscription {\n  """\n  Message\n  """\n  message: String\n}\n\nextend type Query {\n  """\n  Dummy query for highlighting test\n  """\n  dummy(\n    int: Int = 123\n    float: Float = 123.456\n    str: String = "Hello World!"\n    boolDefaultTrue: Boolean = true\n    boolDefaultFalse: Boolean = false\n    id: ID\n    search: SearchInput = null\n  ): Boolean\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n  subscription: Subscription\n}\n\n# GraphQL Query Language\n\nquery dummyQuery($int: Int) {\n  dummy(int: $int)\n}\n\nmutation favoriteEpisode($episode: Episode) {\n  favorite(episode: $episode)\n}\n'},55018:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='//Pattern for groovy script\ndef p = ~/.*\\.groovy/\nnew File( \'d:\\scripts\' ).eachFileMatch(p) {f ->\n  // imports list\n  def imports = []\n  f.eachLine {\n    // condition to detect an import instruction\n    ln -> if ( ln =~ \'^import .*\' ) {\n      imports << "${ln - \'import \'}"\n    }\n  }\n  // print thmen\n  if ( ! imports.empty ) {\n    println f\n    imports.each{ println "   $it" }\n  }\n}\n\n/* Coin changer demo code from http://groovy.codehaus.org */\n\nenum UsCoin {\n  quarter(25), dime(10), nickel(5), penny(1)\n  UsCoin(v) { value = v }\n  final value\n}\n\nenum OzzieCoin {\n  fifty(50), twenty(20), ten(10), five(5)\n  OzzieCoin(v) { value = v }\n  final value\n}\n\ndef plural(word, count) {\n  if (count == 1) return word\n  word[-1] == \'y\' ? word[0..-2] + "ies" : word + "s"\n}\n\ndef change(currency, amount) {\n  currency.values().inject([]){ list, coin ->\n     int count = amount / coin.value\n     amount = amount % coin.value\n     list += "$count ${plural(coin.toString(), count)}"\n  }\n}\n\n'},78260:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='!!!\n#content\n.left.column(title="title"){:href => "/hello", :test => "#{hello}_#{world}"}\n    \x3c!-- This is a comment --\x3e\n    %h2 Welcome to our site!\n    %p= puts "HAML MODE"\n  .right.column\n    = render :partial => "sidebar"\n\n.container\n  .row\n    .span8\n      %h1.title= @page_title\n%p.title= @page_title\n%p\n  /\n    The same as HTML comment\n    Hello multiline comment\n\n  -# haml comment\n      This wont be displayed\n      nor will this\n  Date/Time:\n  - now = DateTime.now\n  %strong= now\n  - if now > DateTime.parse("December 31, 2006")\n    = "Happy new " + "year!"\n\n%title\n  = @title\n  \\= @title\n  <h1>Title</h1>\n  <h1 title="HELLO">\n    Title\n  </h1>\n    \n'},73224:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='\n<div class="entry">\n  <h1>{{title}}</h1>\n  {{#if author}}\n  <h2>{{author.firstName}} {{author.lastName}}</h2>\n  {{else}}\n  <h2>Unknown Author</h2>\n  {{/if}}\n  {{contentBody}}\n</div>\n\n{{#unless license}}\n  <h3 class="warning">WARNING: This entry does not have a license!</h3>\n{{/unless}}\n\n<div class="footnotes">\n  <ul>\n    {{#each footnotes}}\n    <li>{{this}}</li>\n    {{/each}}\n  </ul>\n</div>\n\n<h1>Comments</h1>\n\n<div id="comments">\n  {{#each comments}}\n  <h2><a href="/posts/{{../permalink}}#{{id}}">{{title}}</a></h2>\n  <div>{{body}}</div>\n  {{/each}}\n</div>\n'},32668:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="module UniquePerms (\n    uniquePerms\n    )\nwhere\n\n-- | Find all unique permutations of a list where there might be duplicates.\nuniquePerms :: (Eq a) => [a] -> [[a]]\nuniquePerms = permBag . makeBag\n\n-- | An unordered collection where duplicate values are allowed,\n-- but represented with a single value and a count.\ntype Bag a = [(a, Int)]\n\nmakeBag :: (Eq a) => [a] -> Bag a\nmakeBag [] = []\nmakeBag (a:as) = mix a $ makeBag as\n  where\n    mix a []                        = [(a,1)]\n    mix a (bn@(b,n):bs) | a == b    = (b,n+1):bs\n                        | otherwise = bn : mix a bs\n\npermBag :: Bag a -> [[a]]\npermBag [] = [[]]\npermBag bs = concatMap (\\(f,cs) -> map (f:) $ permBag cs) . oneOfEach $ bs\n  where\n    oneOfEach [] = []\n    oneOfEach (an@(a,n):bs) =\n        let bs' = if n == 1 then bs else (a,n-1):bs\n        in (a,bs') : mapSnd (an:) (oneOfEach bs)\n    \n    apSnd f (a,b) = (a, f b)\n    mapSnd = map . apSnd\n\n"},24864:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="module UniquePerms (\n    uniquePerms\n    )\nwhere\n\n-- | Find all unique permutations of a list where there might be duplicates.\nuniquePerms :: (Eq a) => [a] -> [[a]]\nuniquePerms = permBag . makeBag\n\n-- | An unordered collection where duplicate values are allowed,\n-- but represented with a single value and a count.\ntype Bag a = [(a, Int)]\n\nmakeBag :: (Eq a) => [a] -> Bag a\nmakeBag [] = []\nmakeBag (a:as) = mix a $ makeBag as\n  where\n    mix a []                        = [(a,1)]\n    mix a (bn@(b,n):bs) | a == b    = (b,n+1):bs\n                        | otherwise = bn : mix a bs\n\npermBag :: Bag a -> [[a]]\npermBag [] = [[]]\npermBag bs = concatMap (\\(f,cs) -> map (f:) $ permBag cs) . oneOfEach $ bs\n  where\n    oneOfEach [] = []\n    oneOfEach (an@(a,n):bs) =\n        let bs' = if n == 1 then bs else (a,n-1):bs\n        in (a,bs') : mapSnd (an:) (oneOfEach bs)\n    \n    apSnd f (a,b) = (a, f b)\n    mapSnd = map . apSnd\n\n"},98114:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='import one.two.Three;\n\n@attr("test")\nclass Foo<T> extends Three\n{\n  public function new()\n  {\n    noFoo = 12;\n  }\n    \n  public static inline function doFoo(obj:{k:Int, l:Float}):Int\n  {\n    for(i in 0...10)\n    {\n      obj.k++;\n      trace(i);\n      var var1 = new Array();\n      if(var1.length > 1)\n        throw "Error";\n    }\n    // The following line should not be colored, the variable is scoped out\n    var1;\n    /* Multi line\n     * Comment test\n     */\n    return obj.k;\n  }\n  private function bar():Void\n  {\n    #if flash\n    var t1:String = "1.21";\n    #end\n    try {\n      doFoo({k:3, l:1.2});\n    }\n    catch (e : String) {\n      trace(e);\n    }\n    var t2:Float = cast(3.2);\n    var t3:haxe.Timer = new haxe.Timer();\n    var t4 = {k:Std.int(t2), l:Std.parseFloat(t1)};\n    var t5 = ~/123+.*$/i;\n    doFoo(t4);\n    untyped t1 = 4;\n    bob = new Foo<Int>\n  }\n  public var okFoo(default, never):Float;\n  var noFoo(getFoo, null):Int;\n  function getFoo():Int {\n    return noFoo;\n  }\n    \n  public var three:Int;\n}\nenum Color\n{\n  red;\n  green;\n  blue;\n  grey( v : Int );\n  rgb (r:Int,g:Int,b:Int);\n}\n\n'},95952:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='terraform {\n  required_providers {\n    aws = {\n      source  = "hashicorp/aws"\n      version = "~> 1.0.4"\n    }\n  }\n}\n\nvariable "aws_region" {}\n\nvariable "base_cidr_block" {\n  description = "A /16 CIDR range definition, such as 10.1.0.0/16, that the VPC will use"\n  default = "10.1.0.0/16"\n}\n\nvariable "availability_zones" {\n  description = "A list of availability zones in which to create subnets"\n  type = list(string)\n}\n\nprovider "aws" {\n  region = var.aws_region\n}\n\nresource "aws_vpc" "main" {\n  # Referencing the base_cidr_block variable allows the network address\n  # to be changed without modifying the configuration.\n  cidr_block = var.base_cidr_block\n}\n\nresource "aws_subnet" "az" {\n  # Create one subnet for each given availability zone.\n  count = length(var.availability_zones)\n\n  # For each subnet, use one of the specified availability zones.\n  availability_zone = var.availability_zones[count.index]\n\n  # By referencing the aws_vpc.main object, Terraform knows that the subnet\n  # must be created only after the VPC is created.\n  vpc_id = aws_vpc.main.id\n\n  # Built-in functions and operators can be used for simple transformations of\n  # values, such as computing a subnet address. Here we create a /20 prefix for\n  # each subnet, using consecutive addresses for each availability zone,\n  # such as 10.1.16.0/20 .\n  cidr_block = cidrsubnet(aws_vpc.main.cidr_block, 4, count.index+1)\n}\n'},83301:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<!DOCTYPE HTML>\n\x3c!--Example of comments in HTML--\x3e\n<html>\n<head>\n  \x3c!--This is the head section--\x3e\n  <title>HTML Sample</title>\n  <meta charset="utf-8">\n\n  \x3c!--This is the style tag to set style on elements--\x3e\n  <style type="text/css">\n    h1\n    {\n      font-family: Tahoma;\n      font-size: 40px;\n      font-weight: normal;\n      margin: 50px;\n      color: #a0a0a0;\n    }\n\n    h2\n    {\n      font-family: Tahoma;\n      font-size: 30px;\n      font-weight: normal;\n      margin: 50px;\n      color: #fff;\n    }\n\n    p\n    {\n      font-family: Tahoma;\n      font-size: 17px;\n      font-weight: normal;\n      margin: 0px 200px;\n      color: #fff;\n    }\n\n    div.Center\n    {\n      text-align: center;\n    }\n\n    div.Blue\n    {\n      padding: 50px;\n      background-color: #7bd2ff;\n    }\n\n    button.Gray\n    {\n      font-family: Tahoma;\n      font-size: 17px;\n      font-weight: normal;\n      margin-top: 100px;\n      padding: 10px 50px;\n      background-color: #727272;\n      color: #fff;\n      outline: 0;\n          border: none;\n          cursor: pointer;\n    }\n\n    button.Gray:hover\n    {\n      background-color: #898888;\n    }\n\n    button.Gray:active\n    {\n      background-color: #636161;\n    }\n\n  </style>\n\n  \x3c!--This is the script tag--\x3e\n  <script type="text/javascript">\n    function ButtonClick(){\n      // Example of comments in JavaScript\n      window.alert("I\'m an alert sample!");\n    }\n  <\/script>\n</head>\n<body>\n  \x3c!--This is the body section--\x3e\n  <div class="Center">\n    <h1>NAME OF SITE</h1>\n  </div>\n  <div class="Center Blue">\n      <h2>I\'m h2 Header! Edit me in &lt;h2&gt;</h2>\n      <p>\n        I\'m a paragraph! Edit me in &lt;p&gt;\n        to add your own content and make changes to the style and font.\n        It\'s easy! Just change the text between &lt;p&gt; ... &lt;/p&gt; and change the style in &lt;style&gt;.\n        You can make it as long as you wish. The browser will automatically wrap the lines to accommodate the\n        size of the browser window.\n      </p>\n      <button class="Gray" onclick="ButtonClick()">Click Me!</button>\n  </div>\n</body>\n</html>\n'},99254:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<%\nfunction hello(who) {\n  return "Hello " + who;\n}\n%>\nThis is an example of EJS (embedded javascript)\n<p>The program says <%= hello("world") %>.</p>\n<script>\n  alert("And here is some normal JS code"); // also colored\n<\/script>\n\n'},39520:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<html style="color: green">\n  \x3c!-- this is a comment --\x3e\n  <head>\n    <title>Mixed HTML Example</title>\n    <style type="text/css">\n      h1 {font-family: comic sans; color: #f0f;}\n      div {background: yellow !important;}\n      body {\n        max-width: 50em;\n        margin: 1em 2em 1em 5em;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Mixed HTML Example</h1>\n    <script>\n      function jsFunc(arg1, arg2) {\n        if (arg1 && arg2) document.body.innerHTML = "achoo";\n      }\n    <\/script>\n  </body>\n</html>\n\n'},65764:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="POST /somewhere HTTP/1.1\nHost: example.com\nIf-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT\nContent-Type: application/x-www-form-urlencoded;\n  charset=utf-8\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.11 (KHTML, like Gecko) Ubuntu/12.04 Chromium/20.0.1132.47 Chrome/20.0.1132.47 Safari/536.11\n\nThis is the request body!\n\n"},38866:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=";; Example IDL code\nFUNCTION mean_and_stddev,array\n  ;; This program reads in an array of numbers\n  ;; and returns a structure containing the\n  ;; average and standard deviation\n\n  ave = 0.0\n  count = 0.0\n\n  for i=0,N_ELEMENTS(array)-1 do begin\n      ave = ave + array[i]\n      count = count + 1\n  endfor\n  \n  ave = ave/count\n\n  std = stddev(array)  \n\n  return, {average:ave,std:std}\n\nEND\n\n    \n"},55457:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# Example of a .gitconfig file\n\n[core]\n  repositoryformatversion = 0\n  filemode = false\n  bare = false\n  logallrefupdates = true\n  symlinks = false\n  ignorecase = true\n  hideDotFiles = dotGitOnly\n\n# Defines the master branch\n[branch "master"]\n  remote = origin\n  merge = refs/heads/master\n'},68054:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='/*\n  Basic Java example using FizzBuzz\n*/\n\nimport java.util.Random;\n\npublic class Example {\n  public static void main (String[] args){\n    // Generate a random number between 1-100. (See generateRandomNumber method.)\n    int random = generateRandomNumber(100);\n\n    // Output generated number.\n    System.out.println("Generated number: " + random + "\n");\n\n    // Loop between 1 and the number we just generated.\n    for (int i=1; i<=random; i++){\n      // If i is divisible by both 3 and 5, output "FizzBuzz".\n      if (i % 3 == 0 && i % 5 == 0){\n        System.out.println("FizzBuzz");\n      }\n      // If i is divisible by 3, output "Fizz"\n      else if (i % 3 == 0){\n        System.out.println("Fizz");\n      }\n      // If i is divisible by 5, output "Buzz".\n      else if (i % 5 == 0){\n        System.out.println("Buzz");\n      }\n      // If i is not divisible by either 3 or 5, output the number.\n      else {\n        System.out.println(i);\n      }\n    }\n  }\n\n  /**\n    Generates a new random number between 0 and 100.\n    @param bound The highest number that should be generated.\n    @return An integer representing a randomly generated number between 0 and 100.\n  */\n  private static int generateRandomNumber(int bound){\n    // Create new Random generator object and generate the random number.\n    Random randGen = new Random();\n    int randomNum = randGen.nextInt(bound);\n\n    // If the random number generated is zero, use recursion to regenerate the number until it is not zero.\n    if (randomNum < 1){\n      randomNum = generateRandomNumber(bound);\n    }\n\n    return randomNum;\n  }\n}\n '},92350:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='/*\n  \xa9 Microsoft. All rights reserved.\n\n  This library is supported for use in Windows Tailored Apps only.\n\n  Build: 6.2.8100.0 \n  Version: 0.5 \n*/\n\n(function (global, undefined) {\n  "use strict";\n  undefinedVariable = {};\n  undefinedVariable.prop = 5;\n\n  function initializeProperties(target, members) {\n    var keys = Object.keys(members);\n    var properties;\n    var i, len;\n    for (i = 0, len = keys.length; i < len; i++) {\n      var key = keys[i];\n      var enumerable = key.charCodeAt(0) !== /*_*/95;\n      var member = members[key];\n      if (member && typeof member === \'object\') {\n        if (member.value !== undefined || typeof member.get === \'function\' || typeof member.set === \'function\') {\n          if (member.enumerable === undefined) {\n            member.enumerable = enumerable;\n          }\n          properties = properties || {};\n          properties[key] = member;\n          continue;\n        } \n      }\n      if (!enumerable) {\n        properties = properties || {};\n        properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\n        continue;\n      }\n      target[key] = member;\n    }\n    if (properties) {\n      Object.defineProperties(target, properties);\n    }\n  }\n\n  (function (rootNamespace) {\n\n    // Create the rootNamespace in the global namespace\n    if (!global[rootNamespace]) {\n      global[rootNamespace] = Object.create(Object.prototype);\n    }\n\n    // Cache the rootNamespace we just created in a local variable\n    var _rootNamespace = global[rootNamespace];\n    if (!_rootNamespace.Namespace) {\n      _rootNamespace.Namespace = Object.create(Object.prototype);\n    }\n\n    function defineWithParent(parentNamespace, name, members) {\n      /// <summary locid="1">\n      /// Defines a new namespace with the specified name, under the specified parent namespace.\n      /// </summary>\n      /// <param name="parentNamespace" type="Object" locid="2">\n      /// The parent namespace which will contain the new namespace.\n      /// </param>\n      /// <param name="name" type="String" locid="3">\n      /// Name of the new namespace.\n      /// </param>\n      /// <param name="members" type="Object" locid="4">\n      /// Members in the new namespace.\n      /// </param>\n      /// <returns locid="5">\n      /// The newly defined namespace.\n      /// </returns>\n      var currentNamespace = parentNamespace,\n        namespaceFragments = name.split(".");\n\n      for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n        var namespaceName = namespaceFragments[i];\n        if (!currentNamespace[namespaceName]) {\n          Object.defineProperty(currentNamespace, namespaceName, \n            { value: {}, writable: false, enumerable: true, configurable: true }\n          );\n        }\n        currentNamespace = currentNamespace[namespaceName];\n      }\n\n      if (members) {\n        initializeProperties(currentNamespace, members);\n      }\n\n      return currentNamespace;\n    }\n\n    function define(name, members) {\n      /// <summary locid="6">\n      /// Defines a new namespace with the specified name.\n      /// </summary>\n      /// <param name="name" type="String" locid="7">\n      /// Name of the namespace.  This could be a dot-separated nested name.\n      /// </param>\n      /// <param name="members" type="Object" locid="4">\n      /// Members in the new namespace.\n      /// </param>\n      /// <returns locid="5">\n      /// The newly defined namespace.\n      /// </returns>\n      return defineWithParent(global, name, members);\n    }\n\n    // Establish members of the "WinJS.Namespace" namespace\n    Object.defineProperties(_rootNamespace.Namespace, {\n\n      defineWithParent: { value: defineWithParent, writable: true, enumerable: true },\n\n      define: { value: define, writable: true, enumerable: true }\n\n    });\n\n  })("WinJS");\n\n  (function (WinJS) {\n\n    function define(constructor, instanceMembers, staticMembers) {\n      /// <summary locid="8">\n      /// Defines a class using the given constructor and with the specified instance members.\n      /// </summary>\n      /// <param name="constructor" type="Function" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <param name="instanceMembers" type="Object" locid="10">\n      /// The set of instance fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <param name="staticMembers" type="Object" locid="11">\n      /// The set of static fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <returns type="Function" locid="12">\n      /// The newly defined class.\n      /// </returns>\n      constructor = constructor || function () { };\n      if (instanceMembers) {\n        initializeProperties(constructor.prototype, instanceMembers);\n      }\n      if (staticMembers) {\n        initializeProperties(constructor, staticMembers);\n      }\n      return constructor;\n    }\n\n    function derive(baseClass, constructor, instanceMembers, staticMembers) {\n      /// <summary locid="13">\n      /// Uses prototypal inheritance to create a sub-class based on the supplied baseClass parameter.\n      /// </summary>\n      /// <param name="baseClass" type="Function" locid="14">\n      /// The class to inherit from.\n      /// </param>\n      /// <param name="constructor" type="Function" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <param name="instanceMembers" type="Object" locid="10">\n      /// The set of instance fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <param name="staticMembers" type="Object" locid="11">\n      /// The set of static fields, properties and methods to be made available on the class.\n      /// </param>\n      /// <returns type="Function" locid="12">\n      /// The newly defined class.\n      /// </returns>\n      if (baseClass) {\n        constructor = constructor || function () { };\n        var basePrototype = baseClass.prototype;\n        constructor.prototype = Object.create(basePrototype);\n        Object.defineProperty(constructor.prototype, "_super", { value: basePrototype });\n        Object.defineProperty(constructor.prototype, "constructor", { value: constructor });\n        if (instanceMembers) {\n          initializeProperties(constructor.prototype, instanceMembers);\n        }\n        if (staticMembers) {\n          initializeProperties(constructor, staticMembers);\n        }\n        return constructor;\n      } else {\n        return define(constructor, instanceMembers, staticMembers);\n      }\n    }\n\n    function mix(constructor) {\n      /// <summary locid="15">\n      /// Defines a class using the given constructor and the union of the set of instance members\n      /// specified by all the mixin objects.  The mixin parameter list can be of variable length.\n      /// </summary>\n      /// <param name="constructor" locid="9">\n      /// A constructor function that will be used to instantiate this class.\n      /// </param>\n      /// <returns locid="12">\n      /// The newly defined class.\n      /// </returns>\n      constructor = constructor || function () { };\n      var i, len;\n      for (i = 0, len = arguments.length; i < len; i++) {\n        initializeProperties(constructor.prototype, arguments[i]);\n      }\n      return constructor;\n    }\n\n    // Establish members of "WinJS.Class" namespace\n    WinJS.Namespace.define("WinJS.Class", {\n      define: define,\n      derive: derive,\n      mix: mix\n    });\n\n  })(WinJS);\n\n})(this);'},14756:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="{# this is a comment #}\n{%- for item in li -%}\n  <li>{{ item.label }}</li>\n{% endfor -%}\n{{ item.sand == true and item.keyword == false ? 1 : 0 }}\n{{ app.get(55, 1.2, true) }}\n{% if app.get('_route') == ('_home') %}home{% endif %}\n{% if app.session.flashbag.has('message') %}\n  {% for message in app.session.flashbag.get('message') %}\n    {{ message.content }}\n  {% endfor %}\n{% endif %}\n{{ path('_home', {'section': app.request.get('section')}) }}\n{{ path('_home', {\n    'section': app.request.get('section'),\n    'boolean': true,\n    'number': 55.33\n  })\n}}\n{% include ('test.incl.html.twig') %}\n\n"},16465:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='\ufeff{\n  "type": "team",\n  "test": {\n    "testPage": "tools/testing/run-tests.htm",\n    "enabled": true\n  },\n    "search": {\n        "excludeFolders": [\n      ".git",\n      "node_modules",\n      "tools/bin",\n      "tools/counts",\n      "tools/policheck",\n      "tools/tfs_build_extensions",\n      "tools/testing/jscoverage",\n      "tools/testing/qunit",\n      "tools/testing/chutzpah",\n      "server.net"\n        ]\n    },\n  "languages": {\n    "vs.languages.typescript": {\n      "validationSettings": [{\n        "scope":"/",\n        "noImplicitAny":true,\n        "noLib":false,\n        "extraLibs":[],\n        "semanticValidation":true,\n        "syntaxValidation":true,\n        "codeGenTarget":"ES5",\n        "moduleGenTarget":"",\n        "lint": {\n                    "emptyBlocksWithoutComment": "warning",\n                    "curlyBracketsMustNotBeOmitted": "warning",\n                    "comparisonOperatorsNotStrict": "warning",\n                    "missingSemicolon": "warning",\n                    "unknownTypeOfResults": "warning",\n                    "semicolonsInsteadOfBlocks": "warning",\n                    "functionsInsideLoops": "warning",\n                    "functionsWithoutReturnType": "warning",\n                    "tripleSlashReferenceAlike": "warning",\n                    "unusedImports": "warning",\n                    "unusedVariables": "warning",\n                    "unusedFunctions": "warning",\n                    "unusedMembers": "warning"\n                }\n      }, \n      {\n        "scope":"/client",\n        "baseUrl":"/client",\n        "moduleGenTarget":"amd"\n      },\n      {\n        "scope":"/server",\n        "moduleGenTarget":"commonjs"\n      },\n      {\n        "scope":"/build",\n        "moduleGenTarget":"commonjs"\n      },\n      {\n        "scope":"/node_modules/nake",\n        "moduleGenTarget":"commonjs"\n      }],\n      "allowMultipleWorkers": true\n    }\n  }\n}'},68091:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="class ProductCategoryRow extends React.Component {\n  render() {\n    const category = this.props.category;\n    return (\n      <tr>\n        <th colSpan=\"2\">\n          {category}\n        </th>\n      </tr>\n    );\n  }\n}\n\nclass ProductRow extends React.Component {\n  render() {\n    const product = this.props.product;\n    const name = product.stocked ?\n      product.name :\n      <span style={{color: 'red'}}>\n        {product.name}\n      </span>;\n\n    return (\n      <tr>\n        <td>{name}</td>\n        <td>{product.price}</td>\n      </tr>\n    );\n  }\n}\n\nclass ProductTable extends React.Component {\n  render() {\n    const rows = [];\n    let lastCategory = null;\n    \n    this.props.products.forEach((product) => {\n      if (product.category !== lastCategory) {\n        rows.push(\n          <ProductCategoryRow\n            category={product.category}\n            key={product.category} />\n        );\n      }\n      rows.push(\n        <ProductRow\n          product={product}\n          key={product.name} />\n      );\n      lastCategory = product.category;\n    });\n\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    );\n  }\n}\n\nclass SearchBar extends React.Component {\n  render() {\n    return (\n      <form>\n        <input type=\"text\" placeholder=\"Search...\" />\n        <p>\n          <input type=\"checkbox\" />\n          {' '}\n          Only show products in stock\n        </p>\n      </form>\n    );\n  }\n}\n\nclass FilterableProductTable extends React.Component {\n  render() {\n    return (\n      <div>\n        <SearchBar />\n        <ProductTable products={this.props.products} />\n      </div>\n    );\n  }\n}\n\n\nconst PRODUCTS = [\n  {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\n  {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\n  {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\n  {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\n  {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\n  {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\n];\n \nReactDOM.render(\n  <FilterableProductTable products={PRODUCTS} />,\n  document.getElementById('container')\n);"},89119:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# good style\nfunction fixedpointmap(f; iv, tolerance=1E-7, maxiter=1000)\n    # setup the algorithm\n    x_old = iv\n    normdiff = Inf\n    iter = 1\n    while normdiff > tolerance && iter <= maxiter\n        x_new = f(x_old) # use the passed in map\n        normdiff = norm(x_new - x_old)\n        x_old = x_new\n        iter = iter + 1\n    end\n    return (value = x_old, normdiff=normdiff, iter=iter) # A named tuple\nend\n\n# define a map and parameters\np = 1.0\n\u03b2 = 0.9\nf(v) = p + \u03b2 * v # note that p and \u03b2 are used in the function!\n\nsol = fixedpointmap(f, iv=0.8, tolerance=1.0E-8) # don\'t need to pass\nprintln("Fixed point = $(sol.value), and |f(x) - x| = $(sol.normdiff) in $(sol.iter)"*\n        " iterations")\n'},17297:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='\ufeffconst val POINTS_X_PASS: Int = 15\nval EZPassAccounts: MutableMap<Int, Int> = mutableMapOf(1 to 100, 2 to 100, 3 to 100)\nval EZPassReport: Map<Int, Int> = EZPassAccounts\n\n// update points credit\nfun updatePointsCredit(accountId: Int) {\n    if (EZPassAccounts.containsKey(accountId)) {\n        println("Updating $accountId...")\n        EZPassAccounts[accountId] = EZPassAccounts.getValue(accountId) + POINTS_X_PASS\n    } else {\n        println("Error: Trying to update a non-existing account (id: $accountId)")\n    }\n}\n\nfun accountsReport() {\n    println("EZ-Pass report:")\n    EZPassReport.forEach{\n        k, v -> println("ID $k: credit $v")\n    }\n}\n\nfun main() {\n    accountsReport()\n    updatePointsCredit(1)\n    updatePointsCredit(1)\n    updatePointsCredit(5)\n    accountsReport()\n}'},98374:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="@base: #f938ab;\n\n.box-shadow(@style, @c) when (iscolor(@c)) {\n  border-radius: @style @c;\n}\n\n.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) {\n  .box-shadow(@style, rgba(0, 0, 0, @alpha));\n}\n\n.box { \n  color: saturate(@base, 5%);\n  border-color: lighten(@base, 30%);\n  \n  div {\n    .box-shadow((0 0 5px), 30%);\n  }\n}\n\n#header {\n  h1 {\n    font-size: 26px;\n    font-weight: bold;\n  }\n  \n  p { font-size: 12px;\n    a { text-decoration: none;\n      &:hover { border-width: 1px }\n    }\n  }\n}\n\n@the-border: 1px;\n@base-color: #111;\n@red:        #842210;\n\n#header {\n  color: (@base-color * 3);\n  border-left: @the-border;\n  border-right: (@the-border * 2);\n}\n\n#footer {\n  color: (@base-color + #003300);\n  border-color: desaturate(@red, 10%);\n}\n"},89357:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="LEX Paid Escrow.\nLEXON: 0.2.20\nCOMMENT: 3.f - an escrow that is controlled by a third party for a fee.\n\n\u201cPayer\u201d is a person.\n\u201cPayee\u201d is a person.\n\u201cArbiter\u201d is a person.\n\u201cFee\u201d is an amount.\n\nThe Payer pays an Amount into escrow,\nappoints the Payee,\nappoints the Arbiter,\nand also fixes the Fee.\n\nCLAUSE: Pay Out.\nThe Arbiter may pay from escrow the Fee to themselves,\nand afterwards pay the remainder of the escrow to the Payee.\n\nCLAUSE: Pay Back.\nThe Arbiter may pay from escrow the Fee to themselves,\nand afterwards return the remainder of the escrow to the Payer.\n"},46266:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="LEX Paid Escrow.\nLEXON: 0.2.12\nCOMMENT: 3.f - an escrow that is controlled by a third party for a fee.\n\u201cPayer\u201d is a person.\n\u201cPayee\u201d is a person.\n\u201cArbiter\u201d is a person.\n\u201cFee\u201d is an amount.\nThe Payer pays an Amount into escrow,\nappoints the Payee,\nappoints the Arbiter,\nand also fixes the Fee.\nCLAUSE: Pay Out.\nThe Arbiter may pay from escrow the Fee to themselves,\nand afterwards pay the remainder of the escrow to the Payee.\nCLAUSE: Pay Back.\nThe Arbiter may pay from escrow the Fee to themselves,\nand afterwards return the remainder of the escrow to the Payer.\n"},13838:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="class Random < Liquid::Block\n  def initialize(tag_name, markup, tokens)\n     super\n     @rand = markup.to_i\n  end\n\n  def render(context)\n    value = rand(@rand)\n    super.sub('^^^', value.to_s)  # calling `super` returns the content of the block\n  end\nend\n\nLiquid::Template.register_tag('random', Random)\ntext = \" {% random 5 %} you have drawn number ^^^, lucky you! {% endrandom %} \"\n@template = Liquid::Template.parse(text)\n@template.render  # will return \"you have drawn number 1, lucky you!\" in 20% of cases\n"},1243:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='LiveScript\n# Easy listing of implicit objects\ntable1 =\n  * id: 1\n    name: \'george\'\n  * id: 2\n    name: \'mike\'\n  * id: 3\n    name: \'donald\'\n\ntable2 =\n  * id: 2\n    age: 21\n  * id: 1\n    age: 20\n  * id: 3\n    age: 26\n\n# Implicit access, accessignment\nup-case-name = (.name .= to-upper-case!)\n\n# List comprehensions, destructuring, piping\n[{id:id1, name, age} for {id:id1, name} in table1\n                     for {id:id2, age} in table2\n                     when id1 is id2]\n|> sort-by (.id) # using \'sort-by\' from prelude.ls\n|> each up-case-name # using \'each\' from prelude.ls\n|> JSON.stringify\n#=>\n#[{"id":1,"name":"GEORGE","age":20},\n# {"id":2,"name":"MIKE",  "age":21},\n# {"id":3,"name":"DONALD","age":26}]\n\n# operators as functions, piping\nmap (.age), table2 |> fold1 (+)\n#=> 67 (\'fold1\' and \'map\' from prelude.ls)\n\nr = +...[4 5 6]          #=> [+4, +5, +6]\nt = typeof! ...[\b 5 {}] #=> ["String", "Number", "Object"]\nc = ~...[4, 5]           #=> [-5, -6]\n++...player<[strength hp]>\n# also works with -, --, typeof, ! and delete!\ni = new ...[some, classes]\nc = ^^...[copy, these, {}]\ndelete ...list[1, 2, 3]\ndo ...[a, b, c]'},6668:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='    -- defines a factorial function\n    function fact (n)\n      if n == 0 then\n        return 1\n      else\n        return n * fact(n-1)\n      end\n    end\n    \n    print("enter a number:")\n    a = io.read("*number")        -- read a number\n    print(fact(a))'},52824:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=' MODULE HelloWorld EXPORTS Main;\n FROM IO IMPORT Put;\n BEGIN\n   Put("Hello World\n")\n END HelloWorld.\n'},14178:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# Header 1 #\n## Header 2 ##\n### Header 3 ###             (Hashes on right are optional)\n## Markdown plus h2 with a custom ID ##   {#id-goes-here}\n[Link back to H2](#id-goes-here)\n\n```js\nvar x = "string";\nfunction f() {\n  return x;\n}\n```\n\n\x3c!-- html madness --\x3e\n<div class="custom-class" markdown="1">\n  <div>\n    nested div\n  </div>\n  <script type=\'text/x-koka\'>\n    function( x: int ) { return x*x; }\n  <\/script>\n  This is a div _with_ underscores\n  and a & <b class="bold">bold</b> element.\n  <style>\n    body { font: "Consolas" }\n  </style>\n</div>\n\n* Bullet lists are easy too\n- Another one\n+ Another one\n\nThis is a paragraph, which is text surrounded by\nwhitespace. Paragraphs can be on one\nline (or many), and can drone on for hours.\n\nNow some inline markup like _italics_,  **bold**,\nand `code()`. Note that underscores\nin_words_are ignored.\n\n````application/json\n  { value: ["or with a mime type"] }\n````\n\n> Blockquotes are like quoted text in email replies\n>> And, they can be nested\n\n1. A numbered list\n2. Which is numbered\n3. With periods and a space\n\nAnd now some code:\n\n    // Code is just text indented a bit\n    which(is_easy) to_remember();\n\nAnd a block\n\n~~~\n// Markdown extra adds un-indented code blocks too\n\nif (this_is_more_code == true && !indented) {\n    // tild wrapped code blocks, also not indented\n}\n~~~\n\nText with\ntwo trailing spaces\n(on the right)\ncan be used\nfor things like poems\n\n### Horizontal rules\n\n* * * *\n****\n--------------------------\n\n![picture alt](/images/photo.jpeg "Title is optional")\n\n## Markdown plus tables ##\n\n| Header | Header | Right  |\n| ------ | ------ | -----: |\n|  Cell  |  Cell  |   $10  |\n|  Cell  |  Cell  |   $20  |\n\n* Outer pipes on tables are optional\n* Colon used for alignment (right versus left)\n\n## Markdown plus definition lists ##\n\nBottled water\n: $ 1.25\n: $ 1.55 (Large)\n\nMilk\nPop\n: $ 1.75\n\n* Multiple definitions and terms are possible\n* Definitions can include multiple paragraphs too\n\n*[ABBR]: Markdown plus abbreviations (produces an <abbr> tag)'},63445:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='(* example Mathematica code *)\n(* Dualisiert wird anhand einer Polarit\xe4t an einer\n   Quadrik $x^t Q x = 0$ mit regul\xe4rer Matrix $Q$ (also\n   mit $det(Q) \neq 0$), z.B. die Identit\xe4tsmatrix.\n   $p$ ist eine Liste von Polynomen - ein Ideal. *)\ndualize::"singular" = "Q must be regular: found Det[Q]==0.";\ndualize[ Q_, p_ ] := Block[\n    { m, n, xv, lv, uv, vars, polys, dual },\n    If[Det[Q] == 0,\n      Message[dualize::"singular"],\n      m = Length[p];\n      n = Length[Q] - 1;\n      xv = Table[Subscript[x, i], {i, 0, n}];\n      lv = Table[Subscript[l, i], {i, 1, m}];\n      uv = Table[Subscript[u, i], {i, 0, n}];\n      (* Konstruiere Ideal polys. *)\n      If[m == 0,\n        polys = Q.uv,\n        polys = Join[p, Q.uv - Transpose[Outer[D, p, xv]].lv]\n        ];\n      (* Eliminiere die ersten n + 1 + m Variablen xv und lv\n         aus dem Ideal polys. *)\n      vars = Join[xv, lv];\n      dual = GroebnerBasis[polys, uv, vars];\n      (* Ersetze u mit x im Ergebnis. *)\n      ReplaceAll[dual, Rule[u, x]]\n      ]\n    ]\n\n'},11518:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="From timothygu99@gmail.com Sun Apr 17 01:40:43 2016\nFrom: Timothy Gu <timothygu99@gmail.com>\nDate: Sat, 16 Apr 2016 18:40:43 -0700\nSubject: mbox mode\nMessage-ID: <Z8d+bTT50U/az94FZnyPkDjZmW0=@gmail.com>\n\nmbox mode is working!\n\nTimothy\n\n"},89861:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='Markdown: Basics\n================\n\n<ul id="ProjectSubmenu">\n    <li><a href="/projects/markdown/" title="Markdown Project Page">Main</a></li>\n    <li><a class="selected" title="Markdown Basics">Basics</a></li>\n    <li><a href="/projects/markdown/syntax" title="Markdown Syntax Documentation">Syntax</a></li>\n    <li><a href="/projects/markdown/license" title="Pricing and License Information">License</a></li>\n    <li><a href="/projects/markdown/dingus" title="Online Markdown Web Form">Dingus</a></li>\n</ul>\n\n\nGetting the Gist of Markdown\'s Formatting Syntax\n------------------------------------------------\n\nThis page offers a brief overview of what it\'s like to use Markdown.\nThe [syntax page] [s] provides complete, detailed documentation for\nevery feature, but Markdown should be very easy to pick up simply by\nlooking at a few examples of it in action. The examples on this page\nare written in a before/after style, showing example syntax and the\nHTML output produced by Markdown.\n\nIt\'s also helpful to simply try Markdown out; the [Dingus] [d] is a\nweb application that allows you type your own Markdown-formatted text\nand translate it to XHTML.\n\n**Note:** This document is itself written using Markdown; you\ncan [see the source for it by adding \'.text\' to the URL] [src].\n\n  [s]: /projects/markdown/syntax  "Markdown Syntax"\n  [d]: /projects/markdown/dingus  "Markdown Dingus"\n  [src]: /projects/markdown/basics.text\n\n\n## Paragraphs, Headers, Blockquotes ##\n\nA paragraph is simply one or more consecutive lines of text, separated\nby one or more blank lines. (A blank line is any line that looks like\na blank line -- a line containing nothing but spaces or tabs is\nconsidered blank.) Normal paragraphs should not be indented with\nspaces or tabs.\n\nMarkdown offers two styles of headers: *Setext* and *atx*.\nSetext-style headers for `<h1>` and `<h2>` are created by\n"underlining" with equal signs (`= `) and hyphens (` - `), respectively.\nTo create an atx-style header, you put 1-6 hash marks (`#`) at the\nbeginning of the line -- the number of hashes equals the resulting\nHTML header level.\n\nBlockquotes are indicated using email-style \'`> `\' angle brackets.\n\nMarkdown:\n\n    A First Level Header\n    ====================\n\n    A Second Level Header\n    ---------------------\n\n    Now is the time for all good men to come to\n    the aid of their country. This is just a\n    regular paragraph.\n\n    The quick brown fox jumped over the lazy\n    dog\'s back.\n\n    ### Header 3\n\n    > This is a blockquote.\n    >\n    > This is the second paragraph in the blockquote.\n    >\n    > ## This is an H2 in a blockquote\n\n\nOutput:\n\n    <h1>A First Level Header</h1>\n\n    <h2>A Second Level Header</h2>\n\n    <p>Now is the time for all good men to come to\n    the aid of their country. This is just a\n    regular paragraph.</p>\n\n    <p>The quick brown fox jumped over the lazy\n    dog\'s back.</p>\n\n    <h3>Header 3</h3>\n\n    <blockquote>\n        <p>This is a blockquote.</p>\n\n        <p>This is the second paragraph in the blockquote.</p>\n\n        <h2>This is an H2 in a blockquote</h2>\n    </blockquote>\n\n\n\n### Phrase Emphasis ###\n\nMarkdown uses asterisks and underscores to indicate spans of emphasis.\n\nMarkdown:\n\n    Some of these words *are emphasized*.\n    Some of these words _are emphasized also_.\n\n    Use two asterisks for **strong emphasis**.\n    Or, if you prefer, __use two underscores instead__.\n\nOutput:\n\n    <p>Some of these words <em>are emphasized</em>.\n    Some of these words <em>are emphasized also</em>.</p>\n\n    <p>Use two asterisks for <strong>strong emphasis</strong>.\n    Or, if you prefer, <strong>use two underscores instead</strong>.</p>\n\n\n\n## Lists ##\n\nUnordered (bulleted) lists use asterisks, pluses, and hyphens (`* `,\n`+ `, and ` - `) as list markers. These three markers are\ninterchangable; this:\n\n    *   Candy.\n    *   Gum.\n    *   Booze.\n\nthis:\n\n    +   Candy.\n    +   Gum.\n    +   Booze.\n\nand this:\n\n    -   Candy.\n    -   Gum.\n    -   Booze.\n\nall produce the same output:\n\n    <ul>\n    <li>Candy.</li>\n    <li>Gum.</li>\n    <li>Booze.</li>\n    </ul>\n\nOrdered (numbered) lists use regular numbers, followed by periods, as\nlist markers:\n\n    1.  Red\n    2.  Green\n    3.  Blue\n\nOutput:\n\n    <ol>\n    <li>Red</li>\n    <li>Green</li>\n    <li>Blue</li>\n    </ol>\n\nIf you put blank lines between items, you\'ll get `<p>` tags for the\nlist item text. You can create multi-paragraph list items by indenting\nthe paragraphs by 4 spaces or 1 tab:\n\n    *   A list item.\n\n        With multiple paragraphs.\n\n    *   Another item in the list.\n\nOutput:\n\n    <ul>\n    <li><p>A list item.</p>\n    <p>With multiple paragraphs.</p></li>\n    <li><p>Another item in the list.</p></li>\n    </ul>\n\n\n\n### Links ###\n\nMarkdown supports two styles for creating links: *inline* and\n*reference*. With both styles, you use square brackets to delimit the\ntext you want to turn into a link.\n\nInline-style links use parentheses immediately after the link text.\nFor example:\n\n    This is an [example link](http://example.com/).\n\nOutput:\n\n    <p>This is an <a href="http://example.com/">\n    example link</a>.</p>\n\nOptionally, you may include a title attribute in the parentheses:\n\n    This is an [example link](http://example.com/ "With a Title").\n\nOutput:\n\n    <p>This is an <a href="http://example.com/" title="With a Title">\n    example link</a>.</p>\n\nReference-style links allow you to refer to your links by names, which\nyou define elsewhere in your document:\n\n    I get 10 times more traffic from [Google][1] than from\n    [Yahoo][2] or [MSN][3].\n\n    [1]: http://google.com/        "Google"\n    [2]: http://search.yahoo.com/  "Yahoo Search"\n    [3]: http://search.msn.com/    "MSN Search"\n\nOutput:\n\n    <p>I get 10 times more traffic from <a href="http://google.com/"\n    title="Google">Google</a> than from <a href="http://search.yahoo.com/"\n    title="Yahoo Search">Yahoo</a> or <a href="http://search.msn.com/"\n    title="MSN Search">MSN</a>.</p>\n\nThe title attribute is optional. Link names may contain letters,\nnumbers and spaces, but are *not* case sensitive:\n\n    I start my morning with a cup of coffee and\n    [The New York Times][NY Times].\n\n    [ny times]: http://www.nytimes.com/\n\nOutput:\n\n    <p>I start my morning with a cup of coffee and\n    <a href="http://www.nytimes.com/">The New York Times</a>.</p>\n\n\n### Images ###\n\nImage syntax is very much like link syntax.\n\nInline (titles are optional):\n\n    ![alt text](/path/to/img.jpg "Title")\n\nReference-style:\n\n    ![alt text][id]\n\n    [id]: /path/to/img.jpg "Title"\n\nBoth of the above examples produce the same output:\n\n    <img src="/path/to/img.jpg" alt="alt text" title="Title" />\n\n\n\n### Code ###\n\nIn a regular paragraph, you can create code span by wrapping text in\nbacktick quotes. Any ampersands (`& `) and angle brackets (` < ` or\n`> `) will automatically be translated into HTML entities. This makes\nit easy to use Markdown to write about HTML example code:\n\n    I strongly recommend against using any `<blink>` tags.\n\n    I wish SmartyPants used named entities like `& mdash; `\n    instead of decimal-encoded entites like `&#8212; `.\n\nOutput:\n\n    <p>I strongly recommend against using any\n    <code>&lt;blink&gt;</code> tags.</p>\n\n    <p>I wish SmartyPants used named entities like\n    <code>&amp;mdash;</code> instead of decimal-encoded\n    entites like <code>&amp;#8212;</code>.</p>\n\n\nTo specify an entire block of pre-formatted code, indent every line of\nthe block by 4 spaces or 1 tab. Just like with code spans, `& `, ` < `,\nand `> ` characters will be escaped automatically.\n\nMarkdown:\n\n    If you want your page to validate under XHTML 1.0 Strict,\n    you\'ve got to put paragraph tags in your blockquotes:\n\n        <blockquote>\n            <p>For example.</p>\n        </blockquote>\n\nOutput:\n\n    <p>If you want your page to validate under XHTML 1.0 Strict,\n    you\'ve got to put paragraph tags in your blockquotes:</p>\n\n    <pre><code>&lt;blockquote&gt;\n        &lt;p&gt;For example.&lt;/p&gt;\n    &lt;/blockquote&gt;\n    </code></pre>\n\n## Fenced code blocks (and syntax highlighting)\n\n```javascript\nfor (var i = 0; i < items.length; i++) {\n  console.log(items[i], i); // log them\n}\n```\n'},66526:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="# A[i] = A[i/2] + 1;\n    lw     $t0, 0($gp)       # fetch i\n    srl    $t1, $t0, 1       # i/2\n    sll    $t1, $t1, 2       # turn i/2 into a byte offset (*4)\n    add    $t1, $gp, $t1     # &A[i/2] - 28\n    lw     $t1, 28($t1)      # fetch A[i/2]\n    addi   $t1, $t1, 1       # A[i/2] + 1\n    sll    $t2, $t0, 2       # turn i into a byte offset\n    add    $t2, $t2, $gp     # &A[i] - 28\n    sw     $t1, 28($t2)      # A[i] = ...\n# A[i+1] = -1;\n    addi   $t1, $zero, -1    # -1\n    sw     $t1, 32($t2)      # A[i+1] = -1\n"},92601:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=';AKA Nick Tracker by Ford_Lawnmower irc.GeekShed.net #Script-Help\n;*****************************************************************************;\n;**Start Setup\n;Change JoinDisplay, below, for On Join AKA Display. On = 1 - Off = 0\nalias -l JoinDisplay { return 1 }\n;Change MaxNicks, below, to the number of nicknames you want to store for each hostmask. I wouldn\'t go over 400 with this ;/\nalias -l MaxNicks { return 20 }\n;Change AKALogo, below, To the text you want displayed before each AKA result.\nalias -l AKALogo { return \x0306\x07 \x0305A\x0306K\x0307A \x0306\x07 }\n;**End Setup\n;*****************************************************************************;\nOn *:Join:#: {\n  if ($nick == $me) { .timer 1 1 ialupdateCheck $chan }\n  NickNamesAdd $nick $+($network,$wildsite)\n  if ($JoinDisplay) { .timerNickNames $+ $nick 1 2 NickNames.display $nick $chan $network $wildsite }\n}\non *:Nick: { NickNamesAdd $newnick $+($network,$wildsite) $nick }\nalias -l NickNames.display {\n  if ($gettok($hget(NickNames,$+($3,$4)),0,126) > 1) {\n    echo -g $2 $AKALogo $+(\x0309,$1) $AKALogo \x0307 $mid($replace($hget(NickNames,$+($3,$4)),$chr(126),$chr(44)),2,-1)\n  }\n}\nalias -l NickNamesAdd {\n  if ($hget(NickNames,$2)) {\n    if (!$regex($hget(NickNames,$2),/~\\Q $+ $replacecs($1,\\E,\\E\\E\\Q) $+ \\E~/i)) {\n      if ($gettok($hget(NickNames,$2),0,126) <= $MaxNicks) {\n        hadd NickNames $2 $+($hget(NickNames,$2),$1,~)\n      }\n      else {\n        hadd NickNames $2 $+($mid($hget(NickNames,$2),$pos($hget(NickNames,$2),~,2)),$1,~)\n      }\n    }\n  }\n  else {\n    hadd -m NickNames $2 $+(~,$1,~,$iif($3,$+($3,~)))\n  }\n}\nalias -l Fix.All.MindUser {\n  var %Fix.Count = $hfind(NickNames,/[^~]+[0-9]{4}~/,0,r).data\n  while (%Fix.Count) {\n    if ($Fix.MindUser($hget(NickNames,$hfind(NickNames,/[^~]+[0-9]{4}~/,%Fix.Count,r).data))) {\n      echo -ag Record %Fix.Count - $v1 - Was Cleaned\n      hadd NickNames $hfind(NickNames,/[^~]+[0-9]{4}~/,%Fix.Count,r).data $v1\n    }\n    dec %Fix.Count\n  }\n}\nalias -l Fix.MindUser { return $regsubex($1,/[^~]+[0-9]{4}~/g,$null) }\nmenu nicklist,query {\n  -\n  .AKA\n  ..Check $$1: {\n    if ($gettok($hget(NickNames,$+($network,$address($1,2))),0,126) > 1) {\n      NickNames.display $1 $active $network $address($1,2)\n    }\n    else { echo -ag $AKALogo $+(\x0309,$1) \x0307has not been known by any other nicknames while I have been watching. }\n  }\n  ..Cleanup $$1:hadd NickNames $+($network,$address($1,2)) $fix.minduser($hget(NickNames,$+($network,$address($1,2))))\n  ..Clear $$1:hadd NickNames $+($network,$address($1,2)) $+(~,$1,~)\n  ..AKA Search Dialog:dialog $iif($dialog(AKA_Search),-v,-m) AKA_Search AKA_Search\n  -\n}\nmenu status,channel {\n  -\n  .AKA\n  ..AKA Search Dialog:dialog $iif($dialog(AKA_Search),-v,-m) AKA_Search AKA_Search\n  ..Clean All Records:Fix.All.Minduser\n  -\n}\ndialog AKA_Search {\n  title "AKA Search Engine"\n  size -1 -1 206 221\n  option dbu\n  edit "", 1, 8 5 149 10, autohs\n  button "Search", 2, 163 4 32 12\n  radio "Search HostMask", 4, 61 22 55 10\n  radio "Search Nicknames", 5, 123 22 56 10\n  list 6, 8 38 190 169, sort extsel vsbar\n  button "Check Selected", 7, 67 206 40 12\n  button "Close", 8, 160 206 38 12, cancel\n  box "Search Type", 3, 11 17 183 18\n  button "Copy to Clipboard", 9, 111 206 46 12\n}\nOn *:Dialog:Aka_Search:init:*: { did -c $dname 5 }\nOn *:Dialog:Aka_Search:Sclick:2,7,9: {\n  if ($did == 2) && ($did($dname,1)) {\n    did -r $dname 6\n    var %search $+(*,$v1,*), %type $iif($did($dname,5).state,data,item), %matches = $hfind(NickNames,%search,0,w). [ $+ [ %type ] ]\n    while (%matches) {\n      did -a $dname 6 $hfind(NickNames,%search,%matches,w). [ $+ [ %type ] ]\n      dec %matches\n    }\n    did -c $dname 6 1\n  }\n  elseif ($did == 7) && ($did($dname,6).seltext) { echo -ga $AKALogo \x0307 $mid($replace($hget(NickNames,$v1),$chr(126),$chr(44)),2,-1) }\n  elseif ($did == 9) && ($did($dname,6).seltext) { clipboard $mid($v1,$pos($v1,*,1)) }\n}\nOn *:Start:{\n  if (!$hget(NickNames)) { hmake NickNames 10 }\n  if ($isfile(NickNames.hsh)) { hload  NickNames NickNames.hsh }\n}\nOn *:Exit: { if ($hget(NickNames)) { hsave NickNames NickNames.hsh } }\nOn *:Disconnect: { if ($hget(NickNames)) { hsave NickNames NickNames.hsh } }\nOn *:Unload: { hfree NickNames }\nalias -l ialupdateCheck {\n  inc -z $+(%,ialupdateCheck,$network) $calc($nick($1,0) / 4)\n  ;If your ial is already being updated on join .who $1 out.\n  ;If you are using /names to update ial you will still need this line.\n  .who $1\n}\nRaw 352:*: {\n  if ($($+(%,ialupdateCheck,$network),2)) haltdef\n  NickNamesAdd $6 $+($network,$address($6,2))\n}\nRaw 315:*: {\n  if ($($+(%,ialupdateCheck,$network),2)) haltdef\n}\n\n\n'},26515:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='model BouncingBall\n  parameter Real e = 0.7;\n  parameter Real g = 9.81;\n  Real h(start=1);\n  Real v;\n  Boolean flying(start=true);\n  Boolean impact;\n  Real v_new;\nequation\n  impact = h <= 0.0;\n  der(v) = if flying then -g else 0;\n  der(h) = v;\n  when {h <= 0.0 and v <= 0.0, impact} then\n    v_new = if edge(impact) then -e*pre(v) else 0;\n    flying = v_new > 0;\n    reinit(v, v_new);\n  end when;\n  annotation (uses(Modelica(version="3.2")));\nend BouncingBall;\n\n'},26921:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# Sample mscgen program\n# See http://www.mcternan.me.uk/mscgen or\n# https://sverweij.github.io/mscgen_js for more samples\nmsc {\n  # options\n  hscale="1.2";\n\n  # entities/ lifelines\n  a [label="Entity A"],\n  b [label="Entity B", linecolor="red", arclinecolor="red", textbgcolor="pink"],\n  c [label="Entity C"];\n\n  # arcs/ messages\n  a => c [label="doSomething(args)"];\n  b => c [label="doSomething(args)"];\n  c >> * [label="everyone asked me", arcskip="1"];\n  c =>> c [label="doing something"];\n  c -x * [label="report back", arcskip="1"];\n  |||;\n  --- [label="shows\'s over, however ..."];\n  b => a [label="did you see c doing something?"];\n  a -> b [label="nope"];\n  b :> a [label="shall we ask again?"];\n  a => b [label="naah"];\n  ...;\n}\n\n'},51503:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=" = CALCULATE(SUM(Sales[SalesAmount]), PREVIOUSQUARTER(Calendar[DateKey]))"},34039:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=' ; Lloyd Milligan\n ; 03-30-2015\n ;\n ; MUMPS support for Code Mirror - Excerpts below from routine ^XUS\n ;\nCHECKAV(X1) ;Check A/V code return DUZ or Zero. (Called from XUSRB)\n N %,%1,X,Y,IEN,DA,DIK\n S IEN=0\n ;Start CCOW\n I $E(X1,1,7)="~~TOK~~" D  Q:IEN>0 IEN\n . I $E(X1,8,9)="~1" S IEN=$$CHKASH^XUSRB4($E(X1,8,255))\n . I $E(X1,8,9)="~2" S IEN=$$CHKCCOW^XUSRB4($E(X1,8,255))\n . Q\n ;End CCOW\n S X1=$$UP(X1) S:X1[":" XUTT=1,X1=$TR(X1,":")\n S X=$P(X1,";") Q:X="^" -1 S:XUF %1="Access: "_X\n Q:X\'?1.20ANP 0\n S X=$$EN^XUSHSH(X) I \'$D(^VA(200,"A",X)) D LBAV Q 0\n S %1="",IEN=$O(^VA(200,"A",X,0)),XUF(.3)=IEN D USER(IEN)\n S X=$P(X1,";",2) S:XUF %1="Verify: "_X S X=$$EN^XUSHSH(X)\n I $P(XUSER(1),"^",2)\'=X D LBAV Q 0\n I $G(XUFAC(1)) S DIK="^XUSEC(4,",DA=XUFAC(1) D ^DIK\n Q IEN\n ;\n ; Spell out commands\n ;\nSET2() ;EF. Return error code (also called from XUSRB)\n NEW %,X\n SET XUNOW=$$HTFM^XLFDT($H),DT=$P(XUNOW,".")\n KILL DUZ,XUSER\n SET (DUZ,DUZ(2))=0,(DUZ(0),DUZ("AG"),XUSER(0),XUSER(1),XUTT,%UCI)=""\n SET %=$$INHIBIT^XUSRB() IF %>0 QUIT %\n SET X=$G(^%ZIS(1,XUDEV,"XUS")),XU1=$G(^(1))\n IF $L(X) FOR I=1:1:15 IF $L($P(X,U,I)) SET $P(XOPT,U,I)=$P(X,U,I)\n SET DTIME=600\n IF \'$P(XOPT,U,11),$D(^%ZIS(1,XUDEV,90)),^(90)>2800000,^(90)\'>DT QUIT 8\n QUIT 0\n ;\n ; Spell out commands and functions\n ;\n IF $PIECE(XUSER(0),U,11),$PIECE(XUSER(0),U,11)\'>DT QUIT 11 ;Terminated\n IF $DATA(DUZ("ASH")) QUIT 0 ;If auto handle, Allow to sign-on p434\n IF $PIECE(XUSER(0),U,7) QUIT 5 ;Disuser flag set\n IF \'$LENGTH($PIECE(XUSER(1),U,2)) QUIT 21 ;p419, p434\n Q 0\n ;\n  \n'},55818:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="CREATE TABLE shop (\n    article INT(4) UNSIGNED ZEROFILL DEFAULT '0000' NOT NULL,\n    dealer  CHAR(20)                 DEFAULT ''     NOT NULL,\n    price   DOUBLE(16,2)             DEFAULT '0.00' NOT NULL,\n    PRIMARY KEY(article, dealer));\nINSERT INTO shop VALUES\n    (1,'A',3.45),(1,'B',3.99),(2,'A',10.99),(3,'B',1.45),\n    (3,'C',1.69),(3,'D',1.25),(4,'D',19.95);"},89907:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='server {\n  listen 173.255.219.235:80;\n  server_name website.com.au;\n  rewrite / $scheme://www.$host$request_uri permanent; ## Forcibly prepend a www\n}\n\nserver {\n  listen 173.255.219.235:443;\n  server_name website.com.au;\n  rewrite / $scheme://www.$host$request_uri permanent; ## Forcibly prepend a www\n}\n\nserver {\n\n  listen      173.255.219.235:80;\n  server_name www.website.com.au;\n\n\n\n  root        /data/www;\n  index       index.html index.php;\n\n  location / {\n    index index.html index.php;     ## Allow a static html file to be shown first\n    try_files $uri $uri/ @handler;  ## If missing pass the URI to Magento\'s front handler\n    expires 30d;                    ## Assume all files are cachable\n  }\n\n  ## These locations would be hidden by .htaccess normally\n  location /app/                { deny all; }\n  location /includes/           { deny all; }\n  location /lib/                { deny all; }\n  location /media/downloadable/ { deny all; }\n  location /pkginfo/            { deny all; }\n  location /report/config.xml   { deny all; }\n  location /var/                { deny all; }\n\n  location /var/export/ { ## Allow admins only to view export folder\n    auth_basic           "Restricted"; ## Message shown in login window\n    auth_basic_user_file /rs/passwords/testfile; ## See /etc/nginx/htpassword\n    autoindex            on;\n  }\n\n  location  /. { ## Disable .htaccess and other hidden files\n    return 404;\n  }\n\n  location @handler { ## Magento uses a common front handler\n    rewrite / /index.php;\n  }\n\n  location ~ .php/ { ## Forward paths like /js/index.php/x.js to relevant handler\n    rewrite ^/(.*.php)/ /$1 last;\n  }\n\n  location ~ \\.php$ {\n    if (!-e $request_filename) { rewrite / /index.php last; } ## Catch 404s that try_files miss\n\n    fastcgi_pass   127.0.0.1:9000;\n    fastcgi_index  index.php;\n    fastcgi_param PATH_INFO $fastcgi_script_name;\n    fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    include        /rs/confs/nginx/fastcgi_params;\n  }\n\n}\n\n\nserver {\n\n  listen              173.255.219.235:443;\n  server_name         website.com.au www.website.com.au;\n\n  root   /data/www;\n  index index.html index.php;\n\n  ssl                 on;\n  ssl_certificate     /rs/ssl/ssl.crt;\n  ssl_certificate_key /rs/ssl/ssl.key;\n\n  ssl_session_timeout  5m;\n\n  ssl_protocols  SSLv2 SSLv3 TLSv1;\n  ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n  ssl_prefer_server_ciphers   on;\n\n\n\n  location / {\n    index index.html index.php; ## Allow a static html file to be shown first\n    try_files $uri $uri/ @handler; ## If missing pass the URI to Magento\'s front handler\n    expires 30d; ## Assume all files are cachable\n  }\n\n  ## These locations would be hidden by .htaccess normally\n  location /app/                { deny all; }\n  location /includes/           { deny all; }\n  location /lib/                { deny all; }\n  location /media/downloadable/ { deny all; }\n  location /pkginfo/            { deny all; }\n  location /report/config.xml   { deny all; }\n  location /var/                { deny all; }\n\n  location /var/export/ { ## Allow admins only to view export folder\n    auth_basic           "Restricted"; ## Message shown in login window\n    auth_basic_user_file htpasswd; ## See /etc/nginx/htpassword\n    autoindex            on;\n  }\n\n  location  /. { ## Disable .htaccess and other hidden files\n    return 404;\n  }\n\n  location @handler { ## Magento uses a common front handler\n    rewrite / /index.php;\n  }\n\n  location ~ .php/ { ## Forward paths like /js/index.php/x.js to relevant handler\n    rewrite ^/(.*.php)/ /$1 last;\n  }\n\n  location ~ .php$ { ## Execute PHP scripts\n    if (!-e $request_filename) { rewrite  /index.php last; } ## Catch 404s that try_files miss\n\n    fastcgi_pass 127.0.0.1:9000;\n    fastcgi_index  index.php;\n    fastcgi_param PATH_INFO $fastcgi_script_name;\n    fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    include        /rs/confs/nginx/fastcgi_params;\n\n    fastcgi_param HTTPS on;\n  }\n\n}\n'},84340:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='; This is a comment\n!ifdef ERROR\n    !error "Something went wrong"\n!endif\n\nOutFile "demo.exe"\nRequestExecutionLevel user\nSetDetailsPrint listonly\n\n!include "LogicLib.nsh"\n!include "WinVer.nsh"\n\nSection -mandatory\n\n    Call logWinVer\n\n    ${If} 1 > 0\n      MessageBox MB_OK "Hello world"\n    ${EndIf}\n\nSectionEnd\n\nFunction logWinVer\n\n    ${If} ${IsWin10}\n        DetailPrint "Windows 10!"\n    ${ElseIf} ${AtLeastWinVista}\n        DetailPrint "We\'re post-XP"\n    ${Else}\n        DetailPrint "Legacy system"\n    ${EndIf}\n\nFunctionEnd\n\n'},18468:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='    \n<http://Sub1>     <http://pred1>     <http://obj> .\n<http://Sub2>     <http://pred2#an2> "literal 1" .\n<http://Sub3#an3> <http://pred3>     _:bnode3 .\n_:bnode4          <http://pred4>     "literal 2"@lang .\n_:bnode5          <http://pred5>     "literal 3"^^<http://type> .\n\n'},70706:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='//\n//  Copyright (c) Microsoft Corporation. All rights reserved.\n//\n\n#import "UseQuotes.h"\n#import <Use/GTLT.h> \n\n/*\n  Multi \n  Line\n  Comments \n*/\n@implementation Test\n\n- (void) applicationWillFinishLaunching:(NSNotification *)notification\n{\n}\n\n- (IBAction)onSelectInput:(id)sender\n{\n    NSString* defaultDir = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, true)[0];\n    \n    NSOpenPanel* panel = [NSOpenPanel openPanel];\n    [panel setAllowedFileTypes:[[NSArray alloc] initWithObjects:@"ipa", @"xcarchive", @"app", nil]];\n    \n    [panel beginWithCompletionHandler:^(NSInteger result)\n     {\n         if (result == NSFileHandlingPanelOKButton)\n             [self.inputTextField setStringValue:[panel.URL path]];\n     }];\n     return YES;\n\n     int hex = 0xFEF1F0F;\n   float ing = 3.14;\n   ing = 3.14e0;\n   ing = 31.4e-2;\n}\n\n-(id) initWithParams:(id<anObject>) aHandler withDeviceStateManager:(id<anotherObject>) deviceStateManager\n{\n    // add a tap gesture recognizer\n    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleTap:)];\n    NSMutableArray *gestureRecognizers = [NSMutableArray array];\n    [gestureRecognizers addObject:tapGesture];\n    [gestureRecognizers addObjectsFromArray:scnView.gestureRecognizers];\n    scnView.gestureRecognizers = gestureRecognizers;\n\n  return tapGesture;\n  return nil;\n}\n\n@end\n'},24978:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="%numbers\n[1234 1234i 1234j]\n[.234 .234j 2.23i]\n[23e2 12E1j 123D-4 0x234]\n\n%strings\n'asda''a'\n\"asda\"\"a\"\n\n%identifiers\na + as123 - __asd__\n\n%operators\n-\n+\n=\n==\n>\n<\n>=\n<=\n&\n~\n...\nbreak zeros default margin round ones rand\nceil floor size clear zeros eye mean std cov\nerror eval function\nabs acos atan asin cos cosh exp log prod sum\nlog10 max min sign sin sinh sqrt tan reshape\nreturn\ncase switch\nelse elseif end if otherwise\ndo for while\ntry catch\nclassdef properties events methods\nglobal persistent\n\n%one line comment\n%{ multi \nline comment %}\n"},26149:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="declare\nfun {Ints N Max}\n  if N == Max then nil\n  else\n    {Delay 1000}\n    N|{Ints N+1 Max}\n  end\nend\n\nfun {Sum S Stream}\n  case Stream of nil then S\n  [] H|T then S|{Sum H+S T} end\nend\n\nlocal X Y in\n  thread X = {Ints 0 1000} end\n  thread Y = {Sum 0 X} end\n  {Browse Y}\nend\n"},76920:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="program GreetingsNumberOfTimes;\n\n{$APPTYPE CONSOLE}\n\n{$R *.res}\n\nuses\n  System.SysUtils;\n\nvar\n  greetingsMessage: string;\n  numberOfTimes, i: integer;\n\nbegin\n  try\n    { TODO -oUser -cConsole Main : Insert code here }\n    greetingsMessage := 'Hello World!';\n    numberOfTimes := 10;\n\n    for i := 1 to numberOfTimes do\n    begin\n      Writeln(greetingsMessage);\n    end;\n  except\n    on E: Exception do\n      Writeln(E.ClassName, ': ', E.Message);\n  end;\nend.\n"},65007:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="type storage is int\ntype parameter is\n  Increment of int\n| Decrement of int\n| Reset\ntype return is list (operation) * storage\n// Two entrypoints\nfunction add (const store : storage; const delta : int) : storage is\n  store + delta\nfunction sub (const store : storage; const delta : int) : storage is\n  store - delta\n(* Main access point that dispatches to the entrypoints according to\n   the smart contract parameter. *)\nfunction main (const action : parameter; const store : storage) : return is\n ((nil : list (operation)),    // No operations\n  case action of\n    Increment (n) -> add (store, n)\n  | Decrement (n) -> sub (store, n)\n  | Reset         -> 0\n  end)\n"},72498:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='/*\n * Classic example grammar, which recognizes simple arithmetic expressions like\n * "2*(3+4)". The parser generated from this grammar then computes their value.\n */\n\nstart\n  = additive\n\nadditive\n  = left:multiplicative "+" right:additive { return left + right; }\n  / multiplicative\n\nmultiplicative\n  = left:primary "*" right:multiplicative { return left * right; }\n  / primary\n\nprimary\n  = integer\n  / "(" additive:additive ")" { return additive; }\n\ninteger "integer"\n  = digits:[0-9]+ { return parseInt(digits.join(""), 10); }\n\nletter = [a-z]+\n'},54132:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="#!/usr/bin/perl\nuse strict;\nuse warnings;\n\nuse Path::Tiny;\n\nmy $dir = path('foo','bar'); # foo/bar\n\n# Iterate over the content of foo/bar\nmy $iter = $dir->iterator;\nwhile (my $file = $iter->()) {\n\n    # See if it is a directory and skip\n    next if $file->is_dir();\n\n    # Print out the file name and path\n    print \"$file\n\";\n}"},76635:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="BEGIN\n    SELECT * INTO STRICT myrec FROM emp WHERE empname = myname;\n    EXCEPTION\n        WHEN NO_DATA_FOUND THEN\n            RAISE EXCEPTION 'employee % not found', myname;\n        WHEN TOO_MANY_ROWS THEN\n            RAISE EXCEPTION 'employee % not unique', myname;\nEND;"},60068:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<?php\n// The next line contains a syntax error:\nif () {\n  return "The parser recovers from this type of syntax error";\n}\n?>\n<html>\n<head>\n  <title>Example page</title>\n</head>\n\n<body>\n\n<script type="text/javascript">\n  // Some PHP embedded inside JS\n  // Generated <?=date(\'l, F jS, Y\')?>\n  \n  var server_token = <?=rand(5, 10000)?>\n  if (typeof server_token === \'number\') {\n    alert(\'token: \' + server_token);\n  }\n<\/script>\n\n<div>\nHello\n<? if (isset($user)) { ?>\n  <b><?=$user?></b>\n<? } else { ?>\n  <i>guest</i>\n<? } ?>\n!\n</div>\n\n<?php\n\n  /* Example PHP file\n  multiline comment\n  */\n\n  $cards = array("ah", "ac", "ad", "as",\n    "2h", "2c", "2d", "2s",\n    "3h", "3c", "3d", "3s",\n    "4h", "4c", "4d", "4s",\n    "5h", "5c", "5d", "5s",\n    "6h", "6c", "6d", "6s",\n    "7h", "7c", "7d", "7s",\n    "8h", "8c", "8d", "8s",\n    "9h", "9c", "9d", "9s",\n    "th", "tc", "td", "ts",\n    "jh", "jc", "jd", "js",\n    "qh", "qc", "qd", "qs",\n    "kh", "kc", "kd", "ks");\n\n  srand(time());\n\n  for($i = 0; $i < 52; $i++) {\n    $count = count($cards);\n    $random = (rand()%$count);\n\n    if($cards[$random] == "") {\n      $i--;\n    } else {\n      $deck[] = $cards[$random];\n      $cards[$random] = "";\n    }\n  }\n\n  srand(time());\n  $starting_point = (rand()%51);\n  print("Starting point for cut cards is: $starting_point<p>");\n\n  // display shuffled cards (EXAMPLE ONLY)\n  for ($index = 0; $index < 52; $index++) {\n    if ($starting_point == 52) { $starting_point = 0; }\n    print("Uncut Point: <strong>$deck[$index]</strong> ");\n    print("Starting Point: <strong>$deck[$starting_point]</strong><br>");\n    $starting_point++;\n  }\n?>\n\n</body>\n</html>'},73408:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="-----BEGIN PGP MESSAGE-----\nVersion: OpenPrivacy 0.99\n\nyDgBO22WxBHv7O8X7O/jygAEzol56iUKiXmV+XmpCtmpqQUKiQrFqclFqUDBovzS\nvBSFjNSiVHsuAA==\n=njUN\n-----END PGP MESSAGE-----\n\n"},50018:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=".ob out1 out2 out3\n--1--     -        wait     110000\n.ilb in1 in0 wait ack nack\n.symbolic state<3> state<2>;aaa bbb; # comment\n"},16560:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec cursus aliquet sapien, sed rhoncus leo ullamcorper ornare. Interdum et malesuada fames ac ante ipsum primis in faucibus. Phasellus feugiat eleifend nisl, aliquet rhoncus quam scelerisque vel. Morbi eu pellentesque ex. Nam suscipit maximus leo blandit cursus. Aenean sollicitudin nisi luctus, ornare nibh viverra, laoreet ex. Donec eget nibh sit amet dolor ornare elementum. Morbi sollicitudin enim vitae risus pretium vestibulum. Ut pretium hendrerit libero, non vulputate ante volutpat et. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nullam malesuada turpis vitae est porttitor, id tincidunt neque dignissim. Integer rhoncus vestibulum justo in iaculis. Praesent nec augue ut dui scelerisque gravida vel id velit. Donec vehicula feugiat mollis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.\n\nPraesent diam lorem, luctus quis ullamcorper non, consequat quis orci. Ut vel massa vel nunc sagittis porttitor a vitae ante. Quisque euismod lobortis imperdiet. Vestibulum tincidunt vehicula posuere. Nulla facilisi. Donec sodales imperdiet risus id ullamcorper. Nulla luctus orci tortor, vitae tincidunt urna aliquet nec. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam consequat dapibus massa. Sed ac pharetra magna, in imperdiet neque. Nullam nunc nisi, consequat vel nunc et, sagittis aliquam arcu. Aliquam non orci magna. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed id sem ut sem pulvinar rhoncus. Aenean venenatis nunc eget mi ornare, vitae maximus lacus varius. Quisque quis vestibulum justo.\n\nDonec euismod luctus volutpat. Donec sed lacinia enim. Vivamus aliquam elit cursus, convallis diam at, volutpat turpis. Sed lacinia nisl in auctor dapibus. Nunc turpis mi, mattis ut rhoncus id, lacinia sed lectus. Donec sodales tellus quis libero gravida pretium et quis magna. Etiam ultricies mollis purus, eget consequat velit. Duis vitae nibh vitae arcu tincidunt congue. Maecenas ut velit in ipsum condimentum dictum quis eget urna. Sed mattis nulla arcu, vitae mattis ligula dictum at.\n\nPraesent at dignissim dolor. Donec quis placerat sem. Cras vitae placerat sapien, eu sagittis ex. Mauris nec luctus risus. Cras imperdiet semper neque suscipit auctor. Mauris nisl massa, commodo sit amet dignissim id, malesuada sed ante. Praesent varius sapien eget eros vehicula porttitor.\n\nMauris auctor nunc in quam tempor, eget consectetur nisi rhoncus. Donec et nulla imperdiet, gravida dui at, accumsan velit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin sollicitudin condimentum auctor. Sed lacinia eleifend nisi, id scelerisque leo laoreet sit amet. Morbi congue augue a malesuada pulvinar. Curabitur nec ante finibus, commodo orci vel, aliquam libero. Morbi molestie purus non nunc placerat fermentum. Pellentesque commodo ligula sed pretium aliquam. Praesent ut nibh ex. Vivamus vestibulum velit in leo suscipit, vitae pellentesque urna vulputate. Suspendisse pretium placerat ligula eu ullamcorper. Nam eleifend mi tellus, ut tristique ante ultricies vitae. Quisque venenatis dapibus tellus sit amet mattis. Donec erat arcu, elementum vel nisl at, sagittis vulputate nisi."},98472:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='// http://www.ats-lang.org/\n(* Say Hello! once *)\nval () = print"Hello!\n"\n//\n(* Say Hello! 3 times *)\nval () = 3*delay(print"Hello!")\nval () = print_newline((*void*))\n//\n\n//\n(* Build a list of 3 *)\nval xs = $list{int}(0, 1, 2)\n//\nval x0 = xs[0] // legal\nval x1 = xs[1] // legal\nval x2 = xs[2] // legal\nval x3 = xs[3] // illegal\n//\n\n//\nextern\nfun{} f0 (): int\nextern\nfun{} f1 (int): int\nextern\nfun{} repeat_f0f1 (int): int\n//\nimplement\n{}(*tmp*)\nrepeat_f0f1(n) =\n  if n = 0\n    then f0()\n    else f1(repeat_f0f1(n-1))\n  // end of [if]\n//\nfun\ntimes (\n  m:int, n:int\n) : int = // m*n\n  repeat_f0f1 (m) where\n{\n  implement f0<> () = 0\n  implement f1<> (x) = x + n\n}\n//\nfun\npower (\n  m:int, n:int\n) : int = // m^n\n  repeat_f0f1 (n) where\n{\n  implement f0<> () = 1\n  implement f1<> (x) = m * x\n}\n//\nval () =\nprintln! ("5*5 = ", times(5,5))\nval () =\nprintln! ("5^2 = ", power(5,2))\nval () =\nprintln! ("2^10 = ", power(2,10))\nval () =\nprintln! ("3^10 = ", power(3,10))\n//\n'},35564:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='let\n    Source = Excel.CurrentWorkbook(){[Name="Table1"]}[Content],\n    SplitColumnDelimiter = Table.SplitColumn(Source,"Input",Splitter.SplitTextByDelimiter(","),13),\n    Unpivot = Table.Unpivot(SplitColumnDelimiter,{"Input.1", "Input.2", "Input.3", "Input.4",\n    "Input.5", "Input.6",    "Input.7", "Input.8", "Input.9", "Input.10", "Input.11", "Input.12"\n    ,  "Input.13"},"Attribute","Value"),\n    RemovedColumns = Table.RemoveColumns(Unpivot,{"Attribute"}),\n    DuplicatesRemoved = Table.Distinct(RemovedColumns),\n    GroupedRows = Table.Group(DuplicatesRemoved, {"RowID"}, {{"Count of Distinct Values"\n    , each Table.RowCount(_), type number}})\nin\n    GroupedRows'},57716:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='$SelectedObjectNames=@();\n$XenCenterNodeSelected = 0;\n#the object info array contains hashmaps, each of which represent a parameter set and describe a target in the XenCenter resource list\nforeach($parameterSet in $ObjInfoArray)\n{\n  if ($parameterSet["class"] -eq "blank")\n  {\n    #When the XenCenter node is selected a parameter set is created for each of your connected servers with the class and objUuid keys marked as blank\n    if ($XenCenterNodeSelected)\n    {\n      continue\n    }\n    $XenCenterNodeSelected = 1;\n    $SelectedObjectNames += "XenCenter"\n  }\n  elseif ($parameterSet["sessionRef"] -eq "null")\n  {\n    #When a disconnected server is selected there is no session information, we get null for everything except class\n  }\n    $SelectedObjectNames += "a disconnected server"\n  else\n  {\n    Connect-XenServer -url $parameterSet["url"] -opaqueref $parameterSet["sessionRef"]\n    #Use $class to determine which server objects to get\n    #-properties allows us to filter the results to just include the selected object\n    $exp = "Get-XenServer:{0} -properties @{{uuid=\'{1}\'}}" -f $parameterSet["class"], $parameterSet["objUuid"]\n    $obj = Invoke-Expression $exp\n    $SelectedObjectNames += $obj.name_label;\n  } \n}'},14765:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="# This is a properties file\na.key = A value\nanother.key = http://example.com\n! Exclamation mark as comment\nbut.not=Within ! A value # indeed\n   # Spaces at the beginning of a line\n   spaces.before.key=value\nbackslash=Used for multi          line entries,          that's convenient.\n# Unicode sequences\nunicode.key=This is   Unicode\nno.multiline=here\n# Colons\ncolons : can be used too\n# Spaces\nspaces\\ in\\ keys=Not very common...\n\n"},75578:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='syntax = "proto3";\nimport public "other.proto";\n\n/* SearchRequest represents a search query, with pagination options to\n * indicate which results to include in the response. */\n\nmessage SearchRequest {\n  required string query = 1;\n  optional int32 page_number = 2;  // Which page number do we want?\n  optional int32 result_per_page = 3;  // Number of results to return per page.\n}\n'},66583:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="package addressbook;\n\nmessage Address {\n   required string street = 1;\n   required string postCode = 2;\n}\n\nmessage PhoneNumber {\n   required string number = 1;\n}\n\nmessage Person {\n   optional int32 id = 1;\n   required string name = 2;\n   required string surname = 3;\n   optional Address address = 4;\n   repeated PhoneNumber phoneNumbers = 5;\n   optional uint32 age = 6;\n   repeated uint32 favouriteNumbers = 7;\n   optional string license = 8;\n   enum Gender {\n      MALE = 0;\n      FEMALE = 1;\n   }\n   optional Gender gender = 9;\n   optional fixed64 lastUpdate = 10;\n   required bool deleted = 11 [default = false];\n}\n\n\n"},67198:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="doctype 5\nhtml(lang=\"en\")\n    head\n        title= pageTitle\n        script(type='text/javascript')\n            if (foo) {\n                bar()\n            }\n    body\n        // Disclaimer: You will need to turn insertSpaces to true in order for the\n            syntax highlighting to kick in properly (especially for comments)\n            Enjoy :)\n        h1 Pug - node template engine\n        #container\n            if youAreUsingPug\n                p You are amazing\n            else\n                p Get on it!"},18452:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="# == Class: automysqlbackup\n#\n# Puppet module to install AutoMySQLBackup for periodic MySQL backups.\n#\n# class { 'automysqlbackup':\n#   backup_dir => '/mnt/backups',\n# }\n#\n\nclass automysqlbackup (\n  $bin_dir = $automysqlbackup::params::bin_dir,\n  $etc_dir = $automysqlbackup::params::etc_dir,\n  $backup_dir = $automysqlbackup::params::backup_dir,\n  $install_multicore = undef,\n  $config = {},\n  $config_defaults = {},\n) inherits automysqlbackup::params {\n\n# Ensure valid paths are assigned\n  validate_absolute_path($bin_dir)\n  validate_absolute_path($etc_dir)\n  validate_absolute_path($backup_dir)\n\n# Create a subdirectory in /etc for config files\n  file { $etc_dir:\n    ensure => directory,\n    owner => 'root',\n    group => 'root',\n    mode => '0750',\n  }\n\n# Create an example backup file, useful for reference\n  file { \"${etc_dir}/automysqlbackup.conf.example\":\n    ensure => file,\n    owner => 'root',\n    group => 'root',\n    mode => '0660',\n    source => 'puppet:///modules/automysqlbackup/automysqlbackup.conf',\n  }\n\n# Add files from the developer\n  file { \"${etc_dir}/AMB_README\":\n    ensure => file,\n    source => 'puppet:///modules/automysqlbackup/AMB_README',\n  }\n  file { \"${etc_dir}/AMB_LICENSE\":\n    ensure => file,\n    source => 'puppet:///modules/automysqlbackup/AMB_LICENSE',\n  }\n\n# Install the actual binary file\n  file { \"${bin_dir}/automysqlbackup\":\n    ensure => file,\n    owner => 'root',\n    group => 'root',\n    mode => '0755',\n    source => 'puppet:///modules/automysqlbackup/automysqlbackup',\n  }\n\n# Create the base backup directory\n  file { $backup_dir:\n    ensure => directory,\n    owner => 'root',\n    group => 'root',\n    mode => '0755',\n  }\n\n# If you'd like to keep your config in hiera and pass it to this class\n  if !empty($config) {\n    create_resources('automysqlbackup::backup', $config, $config_defaults)\n  }\n\n# If using RedHat family, must have the RPMforge repo's enabled\n  if $install_multicore {\n    package { ['pigz', 'pbzip2']: ensure => installed }\n  }\n\n}\n\n"},66569:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='import banana\n\n\nclass Monkey:\n    # Bananas the monkey can eat.\n    capacity = 10\n    def eat(self, n):\n        """Make the monkey eat n bananas!"""\n        self.capacity -= n * banana.size\n\n    def feeding_frenzy(self):\n        self.eat(9.25)\n        return "Yum yum"\n'},54153:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='/ utilities to quickly load a csv file - for more exhaustive analysis of the csv contents see csvguess.q\n/ 2009.09.20 - updated to match latest csvguess.q \n\n/ .csv.colhdrs[file] - return a list of colhdrs from file\n/ info:.csv.info[file] - return a table of information about the file\n/ columns are: \n/ c - column name; ci - column index; t - load type; mw - max width; \n/ dchar - distinct characters in values; rule - rule that caught the type\n/ maybe - needs checking, _could_ be say a date, but perhaps just a float?\n/ .csv.info0[file;onlycols] - like .csv.info except that it only analyses <onlycols>\n/ example:\n/ info:.csv.info0[file;(.csv.colhdrs file)like"*price"]\n/ info:.csv.infolike[file;"*price"]\n/ show delete from info where t=" "\n/ .csv.data[file;info] - use the info from .csv.info to read the data\n/ .csv.data10[file;info] - like .csv.data but only returns the first 10 rows\n/ bulkload[file;info] - bulk loads file into table DATA (which must be already defined :: DATA:() )\n/ .csv.read[file]/read10[file] - for when you don\'t care about checking/tweaking the <info> before reading \n\n\\d .csv\nDELIM:","\nZAPHDRS:0b / lowercase and remove _ from colhdrs (junk characters are always removed)\nWIDTHHDR:25000 / number of characters read to get the header\nREADLINES:222 / number of lines read and used to guess the types\nSYMMAXWIDTH:11 / character columns narrower than this are stored as symbols\nSYMMAXGR:10 / max symbol granularity% before we give up and keep as a * string\nFORCECHARWIDTH:30 / every field (of any type) with values this wide or more is forced to character "*"\nDISCARDEMPTY:0b / completely ignore empty columns if true else set them to "C"\nCHUNKSIZE:50000000 / used in fs2 (modified .Q.fs)\n\nk)nameltrim:{$[~@x;.z.s\'x;~(*x)in aA:.Q.a,.Q.A;(+/&\\~x in aA)_x;x]}\nk)fs2:{[f;s]((-7!s)>){[f;s;x]i:1+last@&0xa=r:1:(s;x;CHUNKSIZE);f@`\\:i#r;x+i}[f;s]/0j}\ncleanhdrs:{{$[ZAPHDRS;lower x except"_";x]}x where x in DELIM,.Q.an}\ncancast:{nw:x$"";if[not x in"BXCS";nw:(min 0#;max 0#;::)@\\:nw];$[not any nw in x$(11&count y)#y;$[11<count y;not any nw in x$y;1b];0b]}\n\nread:{[file]data[file;info[file]]}  \nread10:{[file]data10[file;info[file]]}  \n\ncolhdrs:{[file]\n  `$nameltrim DELIM vs cleanhdrs first read0(file;0;1+first where 0xa=read1(file;0;WIDTHHDR))}\ndata:{[file;info]\n  (exec c from info where not t=" ")xcol(exec t from info;enlist DELIM)0:file}\ndata10:{[file;info]\n  data[;info](file;0;1+last 11#where 0xa=read1(file;0;15*WIDTHHDR))}\ninfo0:{[file;onlycols]\n  colhdrs:`$nameltrim DELIM vs cleanhdrs first head:read0(file;0;1+last where 0xa=read1(file;0;WIDTHHDR));\n  loadfmts:(count colhdrs)#"S";if[count onlycols;loadfmts[where not colhdrs in onlycols]:"C"];\n  breaks:where 0xa=read1(file;0;floor(10+READLINES)*WIDTHHDR%count head);\n  nas:count as:colhdrs xcol(loadfmts;enlist DELIM)0:(file;0;1+last((1+READLINES)&count breaks)#breaks);\n  info:([]c:key flip as;v:value flip as);as:();\n  reserved:key`.q;reserved,:.Q.res;reserved,:`i;\n  info:update res:c in reserved from info;\n  info:update ci:i,t:"?",ipa:0b,mdot:0,mw:0,rule:0,gr:0,ndv:0,maybe:0b,empty:0b,j10:0b,j12:0b from info;\n  info:update ci:`s#ci from info;\n  if[count onlycols;info:update t:" ",rule:10 from info where not c in onlycols];\n  info:update sdv:{string(distinct x)except`}peach v from info; \n  info:update ndv:count each sdv from info;\n  info:update gr:floor 0.5+100*ndv%nas,mw:{max count each x}peach sdv from info where 0<ndv;\n  info:update t:"*",rule:20 from info where mw>.csv.FORCECHARWIDTH; / long values\n  info:update t:"C "[.csv.DISCARDEMPTY],rule:30,empty:1b from info where t="?",mw=0; / empty columns\n  info:update dchar:{asc distinct raze x}peach sdv from info where t="?";\n  info:update mdot:{max sum each"."=x}peach sdv from info where t="?",{"."in x}each dchar;\n  info:update t:"n",rule:40 from info where t="?",{any x in"0123456789"}each dchar; / vaguely numeric..\n  info:update t:"I",rule:50,ipa:1b from info where t="n",mw within 7 15,mdot=3,{all x in".0123456789"}each dchar,.csv.cancast["I"]peach sdv; / ip-address\n  info:update t:"J",rule:60 from info where t="n",mdot=0,{all x in"+-0123456789"}each dchar,.csv.cancast["J"]peach sdv;\n  info:update t:"I",rule:70 from info where t="J",mw<12,.csv.cancast["I"]peach sdv;\n  info:update t:"H",rule:80 from info where t="I",mw<7,.csv.cancast["H"]peach sdv;\n  info:update t:"F",rule:90 from info where t="n",mdot<2,mw>1,.csv.cancast["F"]peach sdv;\n  info:update t:"E",rule:100,maybe:1b from info where t="F",mw<9;\n  info:update t:"M",rule:110,maybe:1b from info where t in"nIHEF",mdot<2,mw within 4 7,.csv.cancast["M"]peach sdv; \n  info:update t:"D",rule:120,maybe:1b from info where t in"nI",mdot in 0 2,mw within 6 11,.csv.cancast["D"]peach sdv; \n  info:update t:"V",rule:130,maybe:1b from info where t="I",mw in 5 6,7<count each dchar,{all x like"*[0-9][0-5][0-9][0-5][0-9]"}peach sdv,.csv.cancast["V"]peach sdv; / 235959 12345        \n  info:update t:"U",rule:140,maybe:1b from info where t="H",mw in 3 4,7<count each dchar,{all x like"*[0-9][0-5][0-9]"}peach sdv,.csv.cancast["U"]peach sdv; /2359\n  info:update t:"U",rule:150,maybe:0b from info where t="n",mw in 4 5,mdot=0,{all x like"*[0-9]:[0-5][0-9]"}peach sdv,.csv.cancast["U"]peach sdv;\n  info:update t:"T",rule:160,maybe:0b from info where t="n",mw within 7 12,mdot<2,{all x like"*[0-9]:[0-5][0-9]:[0-5][0-9]*"}peach sdv,.csv.cancast["T"]peach sdv;\n  info:update t:"V",rule:170,maybe:0b from info where t="T",mw in 7 8,mdot=0,.csv.cancast["V"]peach sdv;\n  info:update t:"T",rule:180,maybe:1b from info where t in"EF",mw within 7 10,mdot=1,{all x like"*[0-9][0-5][0-9][0-5][0-9].*"}peach sdv,.csv.cancast["T"]peach sdv;\n  info:update t:"Z",rule:190,maybe:0b from info where t="n",mw within 11 24,mdot<4,.csv.cancast["Z"]peach sdv;\n  info:update t:"P",rule:200,maybe:1b from info where t="n",mw within 12 29,mdot<4,{all x like"[12]*"}peach sdv,.csv.cancast["P"]peach sdv;\n  info:update t:"N",rule:210,maybe:1b from info where t="n",mw within 3 28,mdot=1,.csv.cancast["N"]peach sdv;\n  info:update t:"?",rule:220,maybe:0b from info where t="n"; / reset remaining maybe numeric\n  info:update t:"C",rule:230,maybe:0b from info where t="?",mw=1; / char\n  info:update t:"B",rule:240,maybe:0b from info where t in"HC",mw=1,mdot=0,{$[all x in"01tTfFyYnN";(any"0fFnN"in x)and any"1tTyY"in x;0b]}each dchar; / boolean\n  info:update t:"B",rule:250,maybe:1b from info where t in"HC",mw=1,mdot=0,{all x in"01tTfFyYnN"}each dchar; / boolean\n  info:update t:"X",rule:260,maybe:0b from info where t="?",mw=2,{$[all x in"0123456789abcdefABCDEF";(any .Q.n in x)and any"abcdefABCDEF"in x;0b]}each dchar; /hex\n  info:update t:"S",rule:270,maybe:1b from info where t="?",mw<.csv.SYMMAXWIDTH,mw>1,gr<.csv.SYMMAXGR; / symbols (max width permitting)\n  info:update t:"*",rule:280,maybe:0b from info where t="?"; / the rest as strings\n  / flag those S/* columns which could be encoded to integers (.Q.j10/x10/j12/x12) to avoid symbols\n  info:update j12:1b from info where t in"S*",mw<13,{all x in .Q.nA}each dchar;\n  info:update j10:1b from info where t in"S*",mw<11,{all x in .Q.b6}each dchar; \n  select c,ci,t,maybe,empty,res,j10,j12,ipa,mw,mdot,rule,gr,ndv,dchar from info}\ninfo:info0[;()] / by default don\'t restrict columns\ninfolike:{[file;pattern] info0[file;{x where x like y}[lower colhdrs[file];pattern]]} / .csv.infolike[file;"*time"]\n\n\\d .\n/ DATA:()\nbulkload:{[file;info]\n  if[not`DATA in system"v";\'`DATA.not.defined];\n  if[count DATA;\'`DATA.not.empty];\n  loadhdrs:exec c from info where not t=" ";loadfmts:exec t from info;\n  .csv.fs2[{[file;loadhdrs;loadfmts] `DATA insert $[count DATA;flip loadhdrs!(loadfmts;.csv.DELIM)0:file;loadhdrs xcol(loadfmts;enlist .csv.DELIM)0:file]}[file;loadhdrs;loadfmts]];\n  count DATA}\n@[.:;"\\l csvutil.custom.q";::]; / save your custom settings in csvutil.custom.q to override those set at the beginning of the file \n\n'},37357:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='// Run this cell using Ctrl+Enter (\u2318+Enter on Mac)\n// Then run the next cell to see the output\n\nopen Microsoft.Quantum.Diagnostics;\n\noperation QubitsDemo () : Unit {\n    // This line allocates a qubit in state |0\u27e9\n    use q = Qubit();\n    Message("State |0\u27e9:");\n\n    // This line prints out the state of the quantum computer\n    // Since only one qubit is allocated, only its state is printed\n    DumpMachine();\n\n    // This line changes the qubit from state |0\u27e9 to state |1\u27e9\n    X(q);\n\n    Message("State |1\u27e9:");\n    DumpMachine();\n\n    // This line changes the qubit to state |-\u27e9 = (1/sqrt(2))(|0\u27e9 - |1\u27e9)\n    // That is, this puts the qubit into a superposition\n    // 1/sqrt(2) is approximately 0.707107\n    H(q);\n\n    Message("State |-\u27e9:");\n    DumpMachine();\n\n    // This line changes the qubit to state |-i\u27e9 = (1/sqrt(2))(|0\u27e9 - i|1\u27e9)\n    S(q);\n\n    Message("State |-i\u27e9:");\n    DumpMachine();\n\n    // This will put the qubit into an uneven superposition,\n    // where the amplitudes of |0\u27e9 and |1\u27e9 have different moduli\n    Rx(2.0, q);\n    Ry(1.0, q);\n\n    Message("Uneven superposition state:");\n    DumpMachine();\n\n    // This line returns the qubit to state |0\u27e9\n    Reset(q);\n}\n'},89999:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="# \xa9 Microsoft. All rights reserved.\n\n#' Add together two numbers.\n#' \n#' @param x A number.\n#' @param y A number.\n#' @return The sum of code{x} and code{y}.\n#' @examples\n#' add(1, 1)\n#' add(10, 1)\nadd <- function(x, y) {\n  x + y\n}\n\nadd(1, 2)\nadd(1.0, 2.0)\nadd(-1, -2)\nadd(-1.0, -2.0)\nadd(1.0e10, 2.0e10)\n\n\n#' Concatenate together two strings.\n#' \n#' @param x A string.\n#' @param y A string.\n#' @return The concatenated string built of code{x} and code{y}.\n#' @examples\n#' strcat(\"one\", \"two\")\nstrcat <- function(x, y) {\n  paste(x, y)\n}\n\npaste(\"one\", \"two\")\npaste('one', 'two')\npaste(NULL, NULL)\npaste(NA, NA)\n\npaste(\"multi-\n      line\",\n      'multi-\n      line')\n"},69107:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='@{\n    var total = 0;\n    var totalMessage = "";\n    @* a multiline\n      razor comment embedded in csharp *@\n    if (IsPost) {\n\n        // Retrieve the numbers that the user entered.\n        var num1 = Request["text1"];\n        var num2 = Request["text2"];\n\n        // Convert the entered strings into integers numbers and add.\n        total = num1.AsInt() + num2.AsInt();\n    <italic><bold>totalMessage = "Total = " + total;</bold></italic>\n    }\n}\n\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <title>Add Numbers</title>\n    <meta charset="utf-8" />\n  </head>\n<body>\n  <p>Enter two whole numbers and then click <strong>Add</strong>.</p>\n  <form action="" method="post">\n    <p><label for="text1">First Number:</label>\n      <input type="text" name="text1" />\n    </p>\n    <p><label for="text2">Second Number:</label>\n      <input type="text" name="text2" />\n    </p>\n    <p><input type="submit" value="Add" /></p>\n  </form>\n\n  @* now we call the totalMessage method \n     (a multi line razor comment outside code) *@\n\n  <p>@totalMessage</p>\n  \n  <p>@(totalMessage+"!")</p>\n  \n  An email address (with escaped at character): name@@domain.com\n \n</body>\n</html>\n'},74909:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='EXISTS mykey\nAPPEND mykey "Hello"\nAPPEND mykey " World"\nGET mykey'},69862:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="create view tables_vw as\nselect distinct(id) table_id\n,trim(datname)   db_name\n,trim(nspname)   schema_name\n,trim(relname)   table_name\nfrom stv_tbl_perm\njoin pg_class on pg_class.oid = stv_tbl_perm.id\njoin pg_namespace on pg_namespace.oid = relnamespace\njoin pg_database on pg_database.oid = stv_tbl_perm.db_id;\n"},45888:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="=================\nMy Project Readme\n=================\n-------------------------\nClever subtitle goes here\n-------------------------\n\nIntroduction\n============\n\nThis is an example reStructuredText document that starts at the very top\nwith a title and a sub-title. There is one primary header, Introduction.\nThere is one example subheading below.\nThe document is just plain text so it is easily readable even before\nbeing converted to HTML, man page, PDF or other formats.\n\nSubheading\n----------\n\nThe basic syntax is not that different from Markdown, but it also\nhas many more powerful features that Markdown doesn't have. We aren't\ntaking advantage of those yet though.\n\n- Bullet points\n- Are intuitive\n- And simple too\n"},35994:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="-------------------------------------------------------------------\nTue Oct 18 13:58:40 UTC 2011 - misterx@example.com\n\n- Update to r60.3\n- Fixes bug in the reflect package\n  * disallow Interface method on Value obtained via unexported name\n\n-------------------------------------------------------------------\nThu Oct  6 08:14:24 UTC 2011 - misterx@example.com\n\n- Update to r60.2\n- Fixes memory leak in certain map types\n\n-------------------------------------------------------------------\nWed Oct  5 14:34:10 UTC 2011 - misterx@example.com\n\n- Tweaks for gdb debugging\n- go.spec changes:\n  - move %go_arch definition to %prep section\n  - pass correct location of go specific gdb pretty printer and\n    functions to cpp as HOST_EXTRA_CFLAGS macro\n  - install go gdb functions & printer\n- gdb-printer.patch\n  - patch linker (src/cmd/ld/dwarf.c) to emit correct location of go\n    gdb functions and pretty printer\n\n"},32947:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='.. This is an excerpt from Sphinx documentation: http://sphinx.pocoo.org/_sources/rest.txt\n\n.. highlightlang:: rest\n\n.. _rst-primer:\n\nreStructuredText Primer\n=======================\n\nThis section is a brief introduction to reStructuredText (reST) concepts and\nsyntax, intended to provide authors with enough information to author documents\nproductively.  Since reST was designed to be a simple, unobtrusive markup\nlanguage, this will not take too long.\n\n.. seealso::\n\n   The authoritative `reStructuredText User Documentation\n   <http://docutils.sourceforge.net/rst.html>`_.  The "ref" links in this\n   document link to the description of the individual constructs in the reST\n   reference.\n\n\nParagraphs\n----------\n\nThe paragraph (:duref:`ref <paragraphs>`) is the most basic block in a reST\ndocument.  Paragraphs are simply chunks of text separated by one or more blank\nlines.  As in Python, indentation is significant in reST, so all lines of the\nsame paragraph must be left-aligned to the same level of indentation.\n\n\n.. _inlinemarkup:\n\nInline markup\n-------------\n\nThe standard reST inline markup is quite simple: use\n\n* one asterisk: ``*text*`` for emphasis (italics),\n* two asterisks: ``**text**`` for strong emphasis (boldface), and\n* backquotes: ````text```` for code samples.\n\nIf asterisks or backquotes appear in running text and could be confused with\ninline markup delimiters, they have to be escaped with a backslash.\n\nBe aware of some restrictions of this markup:\n\n* it may not be nested,\n* content may not start or end with whitespace: ``* text*`` is wrong,\n* it must be separated from surrounding text by non-word characters.  Use a\n  backslash escaped space to work around that: ``thisis *one* word``.\n\nThese restrictions may be lifted in future versions of the docutils.\n\nreST also allows for custom "interpreted text roles"\', which signify that the\nenclosed text should be interpreted in a specific way.  Sphinx uses this to\nprovide semantic markup and cross-referencing of identifiers, as described in\nthe appropriate section.  The general syntax is ``:rolename:`content```.\n\nStandard reST provides the following roles:\n\n* :durole:`emphasis` -- alternate spelling for ``*emphasis*``\n* :durole:`strong` -- alternate spelling for ``**strong**``\n* :durole:`literal` -- alternate spelling for ````literal````\n* :durole:`subscript` -- subscript text\n* :durole:`superscript` -- superscript text\n* :durole:`title-reference` -- for titles of books, periodicals, and other\n  materials\n\nSee :ref:`inline-markup` for roles added by Sphinx.\n\n\nLists and Quote-like blocks\n---------------------------\n\nList markup (:duref:`ref <bullet-lists>`) is natural: just place an asterisk at\nthe start of a paragraph and indent properly.  The same goes for numbered lists;\nthey can also be autonumbered using a ``#`` sign::\n\n   * This is a bulleted list.\n   * It has two items, the second\n     item uses two lines.\n\n   1. This is a numbered list.\n   2. It has two items too.\n\n   #. This is a numbered list.\n   #. It has two items too.\n\n\nNested lists are possible, but be aware that they must be separated from the\nparent list items by blank lines::\n\n   * this is\n   * a list\n\n     * with a nested list\n     * and some subitems\n\n   * and here the parent list continues\n\nDefinition lists (:duref:`ref <definition-lists>`) are created as follows::\n\n   term (up to a line of text)\n      Definition of the term, which must be indented\n\n      and can even consist of multiple paragraphs\n\n   next term\n      Description.\n\nNote that the term cannot have more than one line of text.\n\nQuoted paragraphs (:duref:`ref <block-quotes>`) are created by just indenting\nthem more than the surrounding paragraphs.\n\nLine blocks (:duref:`ref <line-blocks>`) are a way of preserving line breaks::\n\n   | These lines are\n   | broken exactly like in\n   | the source file.\n\nThere are also several more special blocks available:\n\n* field lists (:duref:`ref <field-lists>`)\n* option lists (:duref:`ref <option-lists>`)\n* quoted literal blocks (:duref:`ref <quoted-literal-blocks>`)\n* doctest blocks (:duref:`ref <doctest-blocks>`)\n\n\nSource Code\n-----------\n\nLiteral code blocks (:duref:`ref <literal-blocks>`) are introduced by ending a\nparagraph with the special marker ``::``.  The literal block must be indented\n(and, like all paragraphs, separated from the surrounding ones by blank lines)::\n\n   This is a normal text paragraph. The next paragraph is a code sample::\n\n      It is not processed in any way, except\n      that the indentation is removed.\n\n      It can span multiple lines.\n\n   This is a normal text paragraph again.\n\nThe handling of the ``::`` marker is smart:\n\n* If it occurs as a paragraph of its own, that paragraph is completely left\n  out of the document.\n* If it is preceded by whitespace, the marker is removed.\n* If it is preceded by non-whitespace, the marker is replaced by a single\n  colon.\n\nThat way, the second sentence in the above example\'s first paragraph would be\nrendered as "The next paragraph is a code sample:".\n\n\n.. _rst-tables:\n\nTables\n------\n\nTwo forms of tables are supported.  For *grid tables* (:duref:`ref\n<grid-tables>`), you have to "paint" the cell grid yourself.  They look like\nthis::\n\n   +------------------------+------------+----------+----------+\n   | Header row, column 1   | Header 2   | Header 3 | Header 4 |\n   | (header rows optional) |            |          |          |\n   +========================+============+==========+==========+\n   | body row 1, column 1   | column 2   | column 3 | column 4 |\n   +------------------------+------------+----------+----------+\n   | body row 2             | ...        | ...      |          |\n   +------------------------+------------+----------+----------+\n\n*Simple tables* (:duref:`ref <simple-tables>`) are easier to write, but\nlimited: they must contain more than one row, and the first column cannot\ncontain multiple lines.  They look like this::\n\n   =====  =====  =======\n   A      B      A and B\n   =====  =====  =======\n   False  False  False\n   True   False  False\n   False  True   False\n   True   True   True\n   =====  =====  =======\n\n\nHyperlinks\n----------\n\nExternal links\n^^^^^^^^^^^^^^\n\nUse ```Link text <http://example.com/>`_`` for inline web links.  If the link\ntext should be the web address, you don\'t need special markup at all, the parser\nfinds links and mail addresses in ordinary text.\n\nYou can also separate the link and the target definition (:duref:`ref\n<hyperlink-targets>`), like this::\n\n   This is a paragraph that contains `a link`_.\n\n   .. _a link: http://example.com/\n\n\nInternal links\n^^^^^^^^^^^^^^\n\nInternal linking is done via a special reST role provided by Sphinx, see the\nsection on specific markup, :ref:`ref-role`.\n\n\nSections\n--------\n\nSection headers (:duref:`ref <sections>`) are created by underlining (and\noptionally overlining) the section title with a punctuation character, at least\nas long as the text::\n\n   =================\n   This is a heading\n   =================\n\nNormally, there are no heading levels assigned to certain characters as the\nstructure is determined from the succession of headings.  However, for the\nPython documentation, this convention is used which you may follow:\n\n* ``#`` with overline, for parts\n* ``*`` with overline, for chapters\n* ``=``, for sections\n* ``-``, for subsections\n* ``^``, for subsubsections\n* ``"``, for paragraphs\n\nOf course, you are free to use your own marker characters (see the reST\ndocumentation), and use a deeper nesting level, but keep in mind that most\ntarget formats (HTML, LaTeX) have a limited supported nesting depth.\n\n\nExplicit Markup\n---------------\n\n"Explicit markup" (:duref:`ref <explicit-markup-blocks>`) is used in reST for\nmost constructs that need special handling, such as footnotes,\nspecially-highlighted paragraphs, comments, and generic directives.\n\nAn explicit markup block begins with a line starting with ``..`` followed by\nwhitespace and is terminated by the next paragraph at the same level of\nindentation.  (There needs to be a blank line between explicit markup and normal\nparagraphs.  This may all sound a bit complicated, but it is intuitive enough\nwhen you write it.)\n\n\n.. _directives:\n\nDirectives\n----------\n\nA directive (:duref:`ref <directives>`) is a generic block of explicit markup.\nBesides roles, it is one of the extension mechanisms of reST, and Sphinx makes\nheavy use of it.\n\nDocutils supports the following directives:\n\n* Admonitions: :dudir:`attention`, :dudir:`caution`, :dudir:`danger`,\n  :dudir:`error`, :dudir:`hint`, :dudir:`important`, :dudir:`note`,\n  :dudir:`tip`, :dudir:`warning` and the generic :dudir:`admonition`.\n  (Most themes style only "note" and "warning" specially.)\n\n* Images:\n\n  - :dudir:`image` (see also Images_ below)\n  - :dudir:`figure` (an image with caption and optional legend)\n\n* Additional body elements:\n\n  - :dudir:`contents` (a local, i.e. for the current file only, table of\n    contents)\n  - :dudir:`container` (a container with a custom class, useful to generate an\n    outer ``<div>`` in HTML)\n  - :dudir:`rubric` (a heading without relation to the document sectioning)\n  - :dudir:`topic`, :dudir:`sidebar` (special highlighted body elements)\n  - :dudir:`parsed-literal` (literal block that supports inline markup)\n  - :dudir:`epigraph` (a block quote with optional attribution line)\n  - :dudir:`highlights`, :dudir:`pull-quote` (block quotes with their own\n    class attribute)\n  - :dudir:`compound` (a compound paragraph)\n\n* Special tables:\n\n  - :dudir:`table` (a table with title)\n  - :dudir:`csv-table` (a table generated from comma-separated values)\n  - :dudir:`list-table` (a table generated from a list of lists)\n\n* Special directives:\n\n  - :dudir:`raw` (include raw target-format markup)\n  - :dudir:`include` (include reStructuredText from another file)\n    -- in Sphinx, when given an absolute include file path, this directive takes\n    it as relative to the source directory\n  - :dudir:`class` (assign a class attribute to the next element) [1]_\n\n* HTML specifics:\n\n  - :dudir:`meta` (generation of HTML ``<meta>`` tags)\n  - :dudir:`title` (override document title)\n\n* Influencing markup:\n\n  - :dudir:`default-role` (set a new default role)\n  - :dudir:`role` (create a new role)\n\n  Since these are only per-file, better use Sphinx\' facilities for setting the\n  :confval:`default_role`.\n\nDo *not* use the directives :dudir:`sectnum`, :dudir:`header` and\n:dudir:`footer`.\n\nDirectives added by Sphinx are described in :ref:`sphinxmarkup`.\n\nBasically, a directive consists of a name, arguments, options and content. (Keep\nthis terminology in mind, it is used in the next chapter describing custom\ndirectives.)  Looking at this example, ::\n\n   .. function:: foo(x)\n                 foo(y, z)\n      :module: some.module.name\n\n      Return a line of text input from the user.\n\n``function`` is the directive name.  It is given two arguments here, the\nremainder of the first line and the second line, as well as one option\n``module`` (as you can see, options are given in the lines immediately following\nthe arguments and indicated by the colons).  Options must be indented to the\nsame level as the directive content.\n\nThe directive content follows after a blank line and is indented relative to the\ndirective start.\n\n\nImages\n------\n\nreST supports an image directive (:dudir:`ref <image>`), used like so::\n\n   .. image:: gnu.png\n      (options)\n\nWhen used within Sphinx, the file name given (here ``gnu.png``) must either be\nrelative to the source file, or absolute which means that they are relative to\nthe top source directory.  For example, the file ``sketch/spam.rst`` could refer\nto the image ``images/spam.png`` as ``../images/spam.png`` or\n``/images/spam.png``.\n\nSphinx will automatically copy image files over to a subdirectory of the output\ndirectory on building (e.g. the ``_static`` directory for HTML output.)\n\nInterpretation of image size options (``width`` and ``height``) is as follows:\nif the size has no unit or the unit is pixels, the given size will only be\nrespected for output channels that support pixels (i.e. not in LaTeX output).\nOther units (like ``pt`` for points) will be used for HTML and LaTeX output.\n\nSphinx extends the standard docutils behavior by allowing an asterisk for the\nextension::\n\n   .. image:: gnu.*\n\nSphinx then searches for all images matching the provided pattern and determines\ntheir type.  Each builder then chooses the best image out of these candidates.\nFor instance, if the file name ``gnu.*`` was given and two files :file:`gnu.pdf`\nand :file:`gnu.png` existed in the source tree, the LaTeX builder would choose\nthe former, while the HTML builder would prefer the latter.\n\n.. versionchanged:: 0.4\n   Added the support for file names ending in an asterisk.\n\n.. versionchanged:: 0.6\n   Image paths can now be absolute.\n\n\nFootnotes\n---------\n\nFor footnotes (:duref:`ref <footnotes>`), use ``[#name]_`` to mark the footnote\nlocation, and add the footnote body at the bottom of the document after a\n"Footnotes" rubric heading, like so::\n\n   Lorem ipsum [#f1]_ dolor sit amet ... [#f2]_\n\n   .. rubric:: Footnotes\n\n   .. [#f1] Text of the first footnote.\n   .. [#f2] Text of the second footnote.\n\nYou can also explicitly number the footnotes (``[1]_``) or use auto-numbered\nfootnotes without names (``[#]_``).\n\n\nCitations\n---------\n\nStandard reST citations (:duref:`ref <citations>`) are supported, with the\nadditional feature that they are "global", i.e. all citations can be referenced\nfrom all files.  Use them like so::\n\n   Lorem ipsum [Ref]_ dolor sit amet.\n\n   .. [Ref] Book or article reference, URL or whatever.\n\nCitation usage is similar to footnote usage, but with a label that is not\nnumeric or begins with ``#``.\n\n\nSubstitutions\n-------------\n\nreST supports "substitutions" (:duref:`ref <substitution-definitions>`), which\nare pieces of text and/or markup referred to in the text by ``|name|``.  They\nare defined like footnotes with explicit markup blocks, like this::\n\n   .. |name| replace:: replacement *text*\n\nor this::\n\n   .. |caution| image:: warning.png\n                :alt: Warning!\n\nSee the :duref:`reST reference for substitutions <substitution-definitions>`\nfor details.\n\nIf you want to use some substitutions for all documents, put them into\n:confval:`rst_prolog` or put them into a separate file and include it into all\ndocuments you want to use them in, using the :rst:dir:`include` directive.  (Be\nsure to give the include file a file name extension differing from that of other\nsource files, to avoid Sphinx finding it as a standalone document.)\n\nSphinx defines some default substitutions, see :ref:`default-substitutions`.\n\n\nComments\n--------\n\nEvery explicit markup block which isn\'t a valid markup construct (like the\nfootnotes above) is regarded as a comment (:duref:`ref <comments>`).  For\nexample::\n\n   .. This is a comment.\n\nYou can indent text after a comment start to form multiline comments::\n\n   ..\n      This whole indented block\n      is a comment.\n\n      Still in the comment.\n\n\nSource encoding\n---------------\n\nSince the easiest way to include special characters like em dashes or copyright\nsigns in reST is to directly write them as Unicode characters, one has to\nspecify an encoding.  Sphinx assumes source files to be encoded in UTF-8 by\ndefault; you can change this with the :confval:`source_encoding` config value.\n\n\nGotchas\n-------\n\nThere are some problems one commonly runs into while authoring reST documents:\n\n* **Separation of inline markup:** As said above, inline markup spans must be\n  separated from the surrounding text by non-word characters, you have to use a\n  backslash-escaped space to get around that.  See `the reference\n  <http://docutils.sf.net/docs/ref/rst/restructuredtext.html#inline-markup>`_\n  for the details.\n\n* **No nested inline markup:** Something like ``*see :func:`foo`*`` is not\n  possible.\n\n.. rubric:: Footnotes\n'},13455:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="#-------------------------------------------------------------------------\n# Copyright (c) Microsoft. All rights reserved.\n#--------------------------------------------------------------------------\n\nmodule Azure\n  module Blob\n    class Blob\n      \n      def initialize\n        @properties = {}\n        @metadata = {}\n        yield self if block_given?\n      end\n\n      attr_accessor :name\n      attr_accessor :snapshot\n      attr_accessor :properties\n      attr_accessor :metadata\n    end\n  end\nend"},42850:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='fn main() {\n    let greetings = ["Hello", "Hola", "Bonjour",\n                     "Ciao", "\u3053\u3093\u306b\u3061\u306f", "\uc548\ub155\ud558\uc138\uc694",\n                     "Cze\u015b\u0107", "Ol\xe1", "\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435",\n                     "Ch\xe0o b\u1ea1n", "\u60a8\u597d", "Hallo",\n                     "Hej", "Ahoj", "\u0633\u0644\u0627\u0645"];\n\n    for (num, greeting) in greetings.iter().enumerate() {\n        print!("{} : ", greeting);\n        match num {\n            0 =>  println!("This code is editable and runnable!"),\n            1 =>  println!("\xa1Este c\xf3digo es editable y ejecutable!"),\n            2 =>  println!("Ce code est modifiable et ex\xe9cutable !"),\n            3 =>  println!("Questo codice \xe8 modificabile ed eseguibile!"),\n            4 =>  println!("\u3053\u306e\u30b3\u30fc\u30c9\u306f\u7de8\u96c6\u3057\u3066\u5b9f\u884c\u51fa\u6765\u307e\u3059\uff01"),\n            5 =>  println!("\uc5ec\uae30\uc5d0\uc11c \ucf54\ub4dc\ub97c \uc218\uc815\ud558\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4!"),\n            6 =>  println!("Ten kod mo\u017cna edytowa\u0107 oraz uruchomi\u0107!"),\n            7 =>  println!("Este c\xf3digo \xe9 edit\xe1vel e execut\xe1vel!"),\n            8 =>  println!("\u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c!"),\n            9 =>  println!("B\u1ea1n c\xf3 th\u1ec3 edit v\xe0 run code tr\u1ef1c ti\u1ebfp!"),\n            10 => println!("\u8fd9\u6bb5\u4ee3\u7801\u662f\u53ef\u4ee5\u7f16\u8f91\u5e76\u4e14\u80fd\u591f\u8fd0\u884c\u7684\uff01"),\n            11 => println!("Dieser Code kann bearbeitet und ausgef\xfchrt werden!"),\n            12 => println!("Den h\xe4r koden kan redigeras och k\xf6ras!"),\n            13 => println!("Tento k\xf3d m\u016f\u017eete upravit a spustit"),\n            14 => println!("\u0627\u06cc\u0646 \u06a9\u062f \u0642\u0627\u0628\u0644\u06cc\u062a \u0648\u06cc\u0631\u0627\u06cc\u0634 \u0648 \u0627\u062c\u0631\u0627 \u062f\u0627\u0631\u062f!"),\n            _ =>  {},\n        }\n    }\n}\n'},55957:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='libname foo "/tmp/foobar";\n%let count=1;\n\n/* Multi line\nComment\n*/\ndata _null_;\n    x=ranuni();\n    * single comment;\n    x2=x**2;\n    sx=sqrt(x);\n    if x=x2 then put "x must be 1";\n    else do;\n        put x=;\n    end;\nrun;\n\n/* embedded comment\n* comment;\n*/\n\nproc glm data=sashelp.class;\n    class sex;\n    model weight = height sex;\nrun;\n\nproc sql;\n    select count(*)\n    from sashelp.class;\n\n    create table foo as\n    select * from sashelp.class;\n\n    select *\n    from foo;\nquit;\n'},13259:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="// Variable Definitions\n\n$page-width:    800px\n$sidebar-width: 200px\n$primary-color: #eeeeee\n\n// Global Attributes\n\nbody\n  font:\n    family: sans-serif\n    size: 30em\n    weight: bold\n\n// Scoped Styles\n\n#contents\n  width: $page-width\n  #sidebar\n    float: right\n    width: $sidebar-width\n  #main\n    width: $page-width - $sidebar-width\n    background: $primary-color\n    h2\n      color: blue\n\n#footer\n  height: 200px\n"},59326:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='begin:\nTextWindow.Write("Enter a number: ")\nnum = TextWindow.ReadNumber()\nremainder = Math.Remainder(num, 2)\nIf (remainder = 0) Then\n TextWindow.WriteLine("The number is Even")\nElse\n TextWindow.WriteLine("The number is Odd")\nEndIf\nGoto begin'},70078:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='package examples\n\n/** Quick sort, imperative style */\nobject sort {\n\n  /** Nested methods can use and even update everything\n   *  visible in their scope (including local variables or\n   *  arguments of enclosing methods).\n   */\n  def sort(a: Array[Int]) {\n\n    def swap(i: Int, j: Int) {\n      val t = a(i); a(i) = a(j); a(j) = t\n    }\n\n    def sort1(l: Int, r: Int) {\n      val pivot = a((l + r) / 2)\n      var i = l\n      var j = r\n      while (i <= j) {\n        while (a(i) < pivot) i += 1\n        while (a(j) > pivot) j -= 1\n        if (i <= j) {\n          swap(i, j)\n          i += 1\n          j -= 1\n        }\n      }\n      if (l < j) sort1(l, j)\n      if (j < r) sort1(i, r)\n    }\n\n    if (a.length > 0)\n      sort1(0, a.length - 1)\n  }\n\n  def println(ar: Array[Int]) {\n    def print1 = {\n      def iter(i: Int): String =\n        ar(i) + (if (i < ar.length-1) "," + iter(i+1) else "")\n      if (ar.length == 0) "" else iter(0)\n    }\n    Console.println("[" + print1 + "]")\n  }\n\n  def main(args: Array[String]) {\n    val ar = Array(6, 2, 8, 5, 1)\n    println(ar)\n    sort(ar)\n    println(ar)\n  }\n\n}\n'},73400:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=";;; make-matrix creates a matrix (a vector of vectors).\n(define make-matrix\n  (lambda (rows columns)\n    (do ((m (make-vector rows))\n         (i 0 (+ i 1)))\n        ((= i rows) m)\n        (vector-set! m i (make-vector columns)))))\n\n;;; matrix? checks to see if its argument is a matrix.\n;;; It isn't foolproof, but it's generally good enough.\n(define matrix?\n  (lambda (x)\n    (and (vector? x)\n         (> (vector-length x) 0)\n         (vector? (vector-ref x 0)))))\n\n;; matrix-rows returns the number of rows in a matrix.\n(define matrix-rows\n   (lambda (x)\n      (vector-length x)))\n\n;; matrix-columns returns the number of columns in a matrix.\n(define matrix-columns\n   (lambda (x)\n      (vector-length (vector-ref x 0))))\n\n;;; matrix-ref returns the jth element of the ith row.\n(define matrix-ref\n  (lambda (m i j)\n    (vector-ref (vector-ref m i) j)))\n\n;;; matrix-set! changes the jth element of the ith row.\n(define matrix-set!\n  (lambda (m i j x)\n    (vector-set! (vector-ref m i) j x)))\n\n;;; mul is the generic matrix/scalar multiplication procedure\n(define mul\n  (lambda (x y)\n    ;; mat-sca-mul multiplies a matrix by a scalar.\n    (define mat-sca-mul\n       (lambda (m x)\n          (let* ((nr (matrix-rows m))\n                 (nc (matrix-columns m))\n                 (r  (make-matrix nr nc)))\n             (do ((i 0 (+ i 1)))\n                 ((= i nr) r)\n                 (do ((j 0 (+ j 1)))\n                     ((= j nc))\n                     (matrix-set! r i j\n                        (* x (matrix-ref m i j))))))))\n\n    ;; mat-mat-mul multiplies one matrix by another, after verifying\n    ;; that the first matrix has as many columns as the second\n    ;; matrix has rows.\n    (define mat-mat-mul\n       (lambda (m1 m2)\n          (let* ((nr1 (matrix-rows m1))\n                 (nr2 (matrix-rows m2))\n                 (nc2 (matrix-columns m2))\n                 (r   (make-matrix nr1 nc2)))\n             (if (not (= (matrix-columns m1) nr2))\n                 (match-error m1 m2))\n             (do ((i 0 (+ i 1)))\n                 ((= i nr1) r)\n                 (do ((j 0 (+ j 1)))\n                     ((= j nc2))\n                     (do ((k 0 (+ k 1))\n                          (a 0\n                             (+ a\n                                (* (matrix-ref m1 i k)\n                                   (matrix-ref m2 k j)))))\n                         ((= k nr2)\n                          (matrix-set! r i j a))))))))\n\n   ;; type-error is called to complain when mul receives an invalid\n   ;; type of argument.\n    (define type-error\n       (lambda (what)\n          (error 'mul\n             \"~s is not a number or matrix\"\n             what)))\n\n    ;; match-error is called to complain when mul receives a pair of\n    ;; incompatible arguments.\n    (define match-error\n       (lambda (what1 what2)\n          (error 'mul\n             \"~s and ~s are incompatible operands\"\n             what1\n             what2)))\n\n    ;; body of mul; dispatch based on input types\n    (cond\n      ((number? x)\n       (cond\n         ((number? y) (* x y))\n         ((matrix? y) (mat-sca-mul y x))\n         (else (type-error y))))\n      ((matrix? x)\n       (cond\n         ((number? y) (mat-sca-mul x y))\n         ((matrix? y) (mat-mat-mul x y))\n         (else (type-error y))))\n      (else (type-error x)))))"},32023:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="$baseFontSizeInPixels: 14;\n\n@function px2em ($font_size, $base_font_size: $baseFontSizeInPixels) {  \n  @return ($font_size / $base_font_size) + em; \n}\n\nh1 {\n  font-size: px2em(36, $baseFontSizeInPixels);\n}\nh2  {\n  font-size: px2em(28, $baseFontSizeInPixels);\n}\n.class {\n  font-size: px2em(14, $baseFontSizeInPixels);\n}\n\nnav {\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li { display: inline-block; }\n\n  a {\n    display: block;\n    padding: 6px 12px;\n    text-decoration: none;\n  }\n  \n  @each $animal in puma, sea-slug, egret, salamander {\n    .#{$animal}-icon {\n      background-image: url('/images/#{$animal}.png');\n    }\n  }\n}"},20132:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='#!/bin/bash\n# Simple line count example, using bash\n#\n# Bash tutorial: http://linuxconfig.org/Bash_scripting_Tutorial#8-2-read-file-into-bash-array\n# My scripting link: http://www.macs.hw.ac.uk/~hwloidl/docs/index.html#scripting\n#\n# Usage: ./line_count.sh file\n# -----------------------------------------------------------------------------\n\n# Link filedescriptor 10 with stdin\nexec 10<&0\n# stdin replaced with a file supplied as a first argument\nexec < $1\n# remember the name of the input file\nin=$1\n\n# init\nfile="current_line.txt"\nlet count=0\n\n# this while loop iterates over all lines of the file\nwhile read LINE\ndo\n    # increase line counter\n    ((count++))\n    # write current line to a tmp file with name $file (not needed for counting)\n    echo $LINE > $file\n    # this checks the return code of echo (not needed for writing; just for demo)\n    if [ $? -ne 0 ]\n     then echo "Error in writing to file ${file}; check its permissions!"\n    fi\ndone\n\necho "Number of lines: $count"\necho "The last line of the file is: `cat ${file}`"\n\n# Note: You can achieve the same by just using the tool wc like this\necho "Expected number of lines: `wc -l $in`"\n\n# restore stdin from filedescriptor 10\n# and close filedescriptor 10\nexec 0<&10 10<&-'},16962:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='#\n# Example Sieve Filter\n# Declare any optional features or extension used by the script\n#\n\nrequire ["fileinto", "reject"];\n\n#\n# Reject any large messages (note that the four leading dots get\n# "stuffed" to three)\n#\nif size :over 1M\n{\n  reject text:\nPlease do not send me large attachments.\nPut your file on a server and send me the URL.\nThank you.\n.... Fred\n.\n;\n  stop;\n}\n\n#\n# Handle messages from known mailing lists\n# Move messages from IETF filter discussion list to filter folder\n#\nif header :is "Sender" "owner-ietf-mta-filters@imc.org"\n{\n  fileinto "filter";  # move to "filter" folder\n}\n#\n# Keep all messages to or from people in my company\n#\nelsif address :domain :is ["From", "To"] "example.com"\n{\n  keep;               # keep in "In" folder\n}\n\n#\n# Try and catch unsolicited email.  If a message is not to me,\n# or it contains a subject known to be spam, file it away.\n#\nelsif anyof (not address :all :contains\n               ["To", "Cc", "Bcc"] "me@example.com",\n             header :matches "subject"\n               ["*make*money*fast*", "*university*dipl*mas*"])\n{\n  # If message header does not contain my address,\n  # it\'s from a list.\n  fileinto "spam";   # move to "spam" folder\n}\nelse\n{\n  # Move all other (non-company) mail to "personal"\n  # folder.\n  fileinto "personal";\n}\n'},68081:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='body\n  table\n    - for user in users\n      td id="user_#{user.id}" class=user.role\n        a href=user_action(user, :edit) Edit #{user.name}\n        a href=(path_to_user user) = user.name\nbody\n  h1(id="logo") = page_logo\n  h2[id="tagline" class="small tagline"] = page_tagline\n\nh2[id="tagline"\n   class="small tagline"] = page_tagline\n\nh1 id = "logo" = page_logo\nh2 [ id = "tagline" ] = page_tagline\n\n/ comment\n  second line\n/! html comment\n   second line\n\x3c!-- html comment --\x3e\n<a href="#{\'hello\' if set}">link</a>\na.slim href="work" disabled=false running==:atom Text <b>bold</b>\n.clazz data-id="test" == \'hello\' unless quark\n | Text mode #{12}\n   Second line\n= x ||= :ruby_atom\n#menu.left\n  - @env.each do |x|\n    li: a = x\n*@dyntag attr="val"\n.first *{:class => [:second, :third]} Text\n.second class=["text","more"]\n.third class=:text,:symbol\n'},91599:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="\" \n    This is a test of the Smalltalk code\n\"\nSeaside.WAComponent subclass: #MyCounter [\n    | count |\n    MyCounter class >> canBeRoot [ ^true ]\n\n    initialize [\n        super initialize.\n        count := 0.\n    ]\n    states [ ^{ self } ]\n    renderContentOn: html [\n        html heading: count.\n        html anchor callback: [ count := count + 1 ]; with: '++'.\n        html space.\n        html anchor callback: [ count := count - 1 ]; with: '--'.\n    ]\n]\n\nMyCounter registerAsApplication: 'mycounter'\n"},66175:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='{extends file="parent.tpl"}\n{include file="template.tpl"}\n\n{* some example Smarty content *}\n{if isset($name) && $name == \'Blog\'}\n  This is a {$var}.\n  {$integer = 451}, {$array[] = "a"}, {$stringvar = "string"}\n  {assign var=\'bob\' value=$var.prop}\n{elseif $name == $foo}\n  {function name=menu level=0}\n    {foreach $data as $entry}\n      {if is_array($entry)}\n        - {$entry@key}\n        {menu data=$entry level=$level+1}\n      {else}\n        {$entry}\n      {/if}\n    {/foreach}\n  {/function}\n{/if}\n'},32639:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='pragma solidity ^0.4.11;\n\n/// @title Voting with delegation.\ncontract Ballot {\n    // This declares a new complex type which will\n    // be used for variables later.\n    // It will represent a single voter.\n    struct Voter {\n        uint weight; // weight is accumulated by delegation\n        bool voted;  // if true, that person already voted\n        address delegate; // person delegated to\n        uint vote;   // index of the voted proposal\n    }\n\n    // This is a type for a single proposal.\n    struct Proposal {\n        bytes32 name;   // short name (up to 32 bytes)\n        uint voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    // This declares a state variable that\n    // stores a `Voter` struct for each possible address.\n    mapping(address => Voter) public voters;\n\n    // A dynamically-sized array of `Proposal` structs.\n    Proposal[] public proposals;\n\n    /// Create a new ballot to choose one of `proposalNames`.\n    function Ballot(bytes32[] proposalNames) {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n\n        // For each of the provided proposal names,\n        // create a new proposal object and add it\n        // to the end of the array.\n        for (uint i = 0; i < proposalNames.length; i++) {\n            // `Proposal({...})` creates a temporary\n            // Proposal object and `proposals.push(...)`\n            // appends it to the end of `proposals`.\n            proposals.push(Proposal({\n                name: proposalNames[i],\n                voteCount: 0\n            }));\n        }\n    }\n\n    // Give `voter` the right to vote on this ballot.\n    // May only be called by `chairperson`.\n    function giveRightToVote(address voter) {\n        // If the argument of `require` evaluates to `false`,\n        // it terminates and reverts all changes to\n        // the state and to Ether balances. It is often\n        // a good idea to use this if functions are\n        // called incorrectly. But watch out, this\n        // will currently also consume all provided gas\n        // (this is planned to change in the future).\n        require((msg.sender == chairperson) && !voters[voter].voted && (voters[voter].weight == 0));\n        voters[voter].weight = 1;\n    }\n\n    /// Delegate your vote to the voter `to`.\n    function delegate(address to) {\n        // assigns reference\n        Voter sender = voters[msg.sender];\n        require(!sender.voted);\n\n        // Self-delegation is not allowed.\n        require(to != msg.sender);\n\n        // Forward the delegation as long as\n        // `to` also delegated.\n        // In general, such loops are very dangerous,\n        // because if they run too long, they might\n        // need more gas than is available in a block.\n        // In this case, the delegation will not be executed,\n        // but in other situations, such loops might\n        // cause a contract to get "stuck" completely.\n        while (voters[to].delegate != address(0)) {\n            to = voters[to].delegate;\n\n            // We found a loop in the delegation, not allowed.\n            require(to != msg.sender);\n        }\n\n        // Since `sender` is a reference, this\n        // modifies `voters[msg.sender].voted`\n        sender.voted = true;\n        sender.delegate = to;\n        Voter delegate = voters[to];\n        if (delegate.voted) {\n            // If the delegate already voted,\n            // directly add to the number of votes\n            proposals[delegate.vote].voteCount += sender.weight;\n        } else {\n            // If the delegate did not vote yet,\n            // add to her weight.\n            delegate.weight += sender.weight;\n        }\n    }\n\n    /// Give your vote (including votes delegated to you)\n    /// to proposal `proposals[proposal].name`.\n    function vote(uint proposal) {\n        Voter sender = voters[msg.sender];\n        require(!sender.voted);\n        sender.voted = true;\n        sender.vote = proposal;\n\n        // If `proposal` is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        proposals[proposal].voteCount += sender.weight;\n    }\n\n    /// @dev Computes the winning proposal taking all\n    /// previous votes into account.\n    function winningProposal() constant\n            returns (uint winningProposal)\n    {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal = p;\n            }\n        }\n    }\n\n    // Calls winningProposal() function to get the index\n    // of the winner contained in the proposals array and then\n    // returns the name of the winner\n    function winnerName() constant\n            returns (bytes32 winnerName)\n    {\n        winnerName = proposals[winningProposal()].name;\n    }\n}'},19809:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='author:Camus\n\ntitle:"The Rebel" and author:Camus\n\nphilosophy:Existentialism -author:Kierkegaard\n\nhardToSpell:Dostoevsky~\n\npublished:[194* TO 1960] and author:(Sartre or "Simone de Beauvoir")\n'},3969:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="{namespace example}\n\n/**\n * Says hello to the world.\n */\n{template .helloWorld}\n  {@param name: string}\n  {@param? score: number}\n  Hello <b>{$name}</b>!\n  <div>\n    {if $score}\n      <em>{$score} points</em>\n    {else}\n      no score\n    {/if}\n  </div>\n{/template}\n\n{template .alertHelloWorld kind=\"js\"}\n  alert('Hello World');\n{/template}\n\n"},19889:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="  SELECT ?x ?name\n  {\n    ?x  foaf:mbox <mailto:alice@example> .\n    ?x  foaf:knows ?a1 .\n    ?a1 foaf:knows ?a2 .\n    ?a2 foaf:name ?name .\n  }\n"},84240:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="=IF(A1:B2, TRUE, FALSE) / 100\n"},55650:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="CREATE TABLE dbo.EmployeePhoto\n(\n    EmployeeId INT NOT NULL PRIMARY KEY,\n    Photo VARBINARY(MAX) FILESTREAM NULL,\n    MyRowGuidColumn UNIQUEIDENTIFIER NOT NULL ROWGUIDCOL\n                    UNIQUE DEFAULT NEWID()\n);\n\nGO\n\n/*\ntext_of_comment\n/* nested comment */\n*/\n\n-- line comment\n\nCREATE NONCLUSTERED INDEX IX_WorkOrder_ProductID\n    ON Production.WorkOrder(ProductID)\n    WITH (FILLFACTOR = 80,\n        PAD_INDEX = ON,\n        DROP_EXISTING = ON);\nGO\n\nWHILE (SELECT AVG(ListPrice) FROM Production.Product) < $300\nBEGIN\n   UPDATE Production.Product\n      SET ListPrice = ListPrice * 2\n   SELECT MAX(ListPrice) FROM Production.Product\n   IF (SELECT MAX(ListPrice) FROM Production.Product) > $500\n      BREAK\n   ELSE\n      CONTINUE\nEND\nPRINT 'Too much for the market to bear';\n\nMERGE INTO Sales.SalesReason AS [Target]\nUSING (VALUES ('Recommendation','Other'), ('Review', 'Marketing'), ('Internet', 'Promotion'))\n       AS [Source] ([NewName], NewReasonType)\nON [Target].[Name] = [Source].[NewName]\nWHEN MATCHED\nTHEN UPDATE SET ReasonType = [Source].NewReasonType\nWHEN NOT MATCHED BY TARGET\nTHEN INSERT ([Name], ReasonType) VALUES ([NewName], NewReasonType)\nOUTPUT $action INTO @SummaryOfChanges;\n\nSELECT ProductID, OrderQty, SUM(LineTotal) AS Total\nFROM Sales.SalesOrderDetail\nWHERE UnitPrice < $5.00\nGROUP BY ProductID, OrderQty\nORDER BY ProductID, OrderQty\nOPTION (HASH GROUP, FAST 10);\n"},25429:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="CONFIGURATION DefaultCfg\n    VAR_GLOBAL\n        Start_Stop AT %IX0.0: BOOL; (* This is a comment *)\n    END_VAR\n    TASK NewTask  (INTERVAL := T#20ms);\n    PROGRAM Main WITH NewTask : PLC_PRG;\nEND_CONFIGURATION\n\nPROGRAM demo\n    VAR_EXTERNAL\n        Start_Stop: BOOL;\n    END_VAR\n    VAR\n        a : REAL; // Another comment\n        todTest: TIME_OF_DAY := TOD#12:55;\n    END_VAR\n    a := csq(12.5);\n    TON1(IN := TRUE, PT := T#2s);\n    16#FAC0 2#1001_0110\n    IF TON1.Q AND a > REAL#100 THEN\n        Start_Stop := TRUE;\n    END_IF\nEND_PROGRAM;\n\n/* Get a square of the circle */\nFUNCTION csq : REAL\n    VAR_INPUT\n        r: REAL;\n    END_VAR\n    VAR CONSTANT\n        c_pi: REAL := 3.14;\n    END_VAR\n    csq := ABS(c_pi * (r * 2));\nEND_FUNCTION"},79925:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='\\begin{module}[id=bbt-size]\n\\importmodule[balanced-binary-trees]{balanced-binary-trees}\n\\importmodule[\\KWARCslides{dmath/en/cardinality}]{cardinality}\n\n\\begin{frame}\n  \\frametitle{Size Lemma for Balanced Trees}\n  \\begin{itemize}\n  \\item\n    \\begin{assertion}[id=size-lemma,type=lemma] \n    Let $G=\\tup{V,E}$ be a \\termref[cd=binary-trees]{balanced binary tree} \n    of \\termref[cd=graph-depth,name=vertex-depth]{depth}$n>i$, then the set\n     $\\defeq{\\livar{V}i}{\\setst{\\inset{v}{V}}{\\gdepth{v} = i}}$ of\n    \\termref[cd=graphs-intro,name=node]{nodes} at \n    \\termref[cd=graph-depth,name=vertex-depth]{depth} $i$ has\n    \\termref[cd=cardinality,name=cardinality]{cardinality} $\\power2i$.\n   \\end{assertion}\n  \\item\n    \\begin{sproof}[id=size-lemma-pf,proofend=,for=size-lemma]{via induction over the depth $i$.}\n      \\begin{spfcases}{We have to consider two cases}\n        \\begin{spfcase}{$i=0$}\n          \\begin{spfstep}[display=flow]\n            then $\\livar{V}i=\\set{\\livar{v}r}$, where $\\livar{v}r$ is the root, so\n            $\\eq{\\card{\\livar{V}0},\\card{\\set{\\livar{v}r}},1,\\power20}$.\n          \\end{spfstep}\n        \\end{spfcase}\n        \\begin{spfcase}{$i>0$}\n          \\begin{spfstep}[display=flow]\n           then $\\livar{V}{i-1}$ contains $\\power2{i-1}$ vertexes \n           \\begin{justification}[method=byIH](IH)\\end{justification}\n          \\end{spfstep}\n          \\begin{spfstep}\n           By the \\begin{justification}[method=byDef]definition of a binary\n              tree\\end{justification}, each $\\inset{v}{\\livar{V}{i-1}}$ is a leaf or has\n            two children that are at depth $i$.\n          \\end{spfstep}\n          \\begin{spfstep}\n           As $G$ is \\termref[cd=balanced-binary-trees,name=balanced-binary-tree]{balanced} and $\\gdepth{G}=n>i$, $\\livar{V}{i-1}$ cannot contain\n            leaves.\n          \\end{spfstep}\n          \\begin{spfstep}[type=conclusion]\n           Thus $\\eq{\\card{\\livar{V}i},{\\atimes[cdot]{2,\\card{\\livar{V}{i-1}}}},{\\atimes[cdot]{2,\\power2{i-1}}},\\power2i}$.\n          \\end{spfstep}\n        \\end{spfcase}\n      \\end{spfcases}\n    \\end{sproof}\n  \\item \n    \\begin{assertion}[id=fbbt,type=corollary]\n      A fully balanced tree of depth $d$ has $\\power2{d+1}-1$ nodes.\n    \\end{assertion}\n  \\item\n      \\begin{sproof}[for=fbbt,id=fbbt-pf]{}\n        \\begin{spfstep}\n          Let $\\defeq{G}{\\tup{V,E}}$ be a fully balanced tree\n        \\end{spfstep}\n        \\begin{spfstep}\n          Then $\\card{V}=\\Sumfromto{i}1d{\\power2i}= \\power2{d+1}-1$.\n        \\end{spfstep}\n      \\end{sproof}\n    \\end{itemize}\n  \\end{frame}\n\\begin{note}\n  \\begin{omtext}[type=conclusion,for=binary-tree]\n    This shows that balanced binary trees grow in breadth very quickly, a consequence of\n    this is that they are very shallow (and this compute very fast), which is the essence of\n    the next result.\n  \\end{omtext}\n\\end{note}\n\\end{module}\n\n%%% Local Variables: \n%%% mode: LaTeX\n%%% TeX-master: "all"\n%%% End: \\end{document}\n\n'},53663:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='/* Stylus mode */\n\n#id,\n.class,\narticle\n  font-family Arial, sans-serif\n\n#id,\n.class,\narticle {\n  font-family: Arial, sans-serif;\n}\n\n// Variables\nfont-size-base = 16px\nline-height-base = 1.5\nfont-family-base = "Helvetica Neue", Helvetica, Arial, sans-serif\ntext-color = lighten(#000, 20%)\n\nbody\n  font font-size-base/line-height-base font-family-base\n  color text-color\n\nbody {\n  font: 400 16px/1.5 "Helvetica Neue", Helvetica, Arial, sans-serif;\n  color: #333;\n}\n\n// Variables\nlink-color = darken(#428bca, 6.5%)\nlink-hover-color = darken(link-color, 15%)\nlink-decoration = none\nlink-hover-decoration = false\n\n// Mixin\ntab-focus()\n  outline thin dotted\n  outline 5px auto -webkit-focus-ring-color\n  outline-offset -2px\n\na\n  color link-color\n  if link-decoration\n    text-decoration link-decoration\n  &:hover\n  &:focus\n    color link-hover-color\n    if link-hover-decoration\n      text-decoration link-hover-decoration\n  &:focus\n    tab-focus()\n\na {\n  color: #3782c4;\n  text-decoration: none;\n}\na:hover,\na:focus {\n  color: #2f6ea7;\n}\na:focus {\n  outline: thin dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\n'},42136:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='import Foundation\n\nprotocol APIControllerProtocol {\n    func didReceiveAPIResults(results: NSArray)\n}\n\nclass APIController {\n    var delegate: APIControllerProtocol\n\n    init(delegate: APIControllerProtocol) {\n        self.delegate = delegate\n    }\n\n    func get(path: String) {\n        let url = NSURL(string: path)\n        let session = NSURLSession.sharedSession()\n        let task = session.dataTaskWithURL(url!, completionHandler: {data, response, error -> Void in\n            println("Task completed")\n            if(error != nil) {\n                // If there is an error in the web request, print it to the console\n                println(error.localizedDescription)\n            }\n            var err: NSError?\n            if let jsonResult = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &err) as? NSDictionary {\n                if(err != nil) {\n                    // If there is an error parsing JSON, print it to the console\n                    println("JSON Error (err!.localizedDescription)")\n                }\n                if let results: NSArray = jsonResult["results"] as? NSArray {\n                    self.delegate.didReceiveAPIResults(results)\n                }\n            }\n        })\n\n        // The task is just an object with all these properties set\n        // In order to actually make the web request, we need to "resume"\n        task.resume()\n    }\n\n    func searchItunesFor(searchTerm: String) {\n        // The iTunes API wants multiple terms separated by + symbols, so replace spaces with + signs\n        let itunesSearchTerm = searchTerm.stringByReplacingOccurrencesOfString(" ", withString: "+", options: NSStringCompareOptions.CaseInsensitiveSearch, range: nil)\n\n        // Now escape anything else that isn\'t URL-friendly\n        if let escapedSearchTerm = itunesSearchTerm.stringByAddingPercentEscapesUsingEncoding(NSUTF8StringEncoding) {\n            let urlPath = "https://itunes.apple.com/search?term=(escapedSearchTerm)&media=music&entity=album"\n        }\n    }\n\n}'},56732:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="// File : tb_top.sv\nmodule tb_top ();\n\n  reg clk;\n  reg resetn;\n  reg d;\n  wire q;\n\n  // Instantiate the design\n  d_ff  d_ff0 (  .clk (clk),\n               .resetn (resetn),\n               .d (d),\n               .q (q));\n\n  // Create a clock\n  always #10 clk <= ~clk;\n\n  initial begin\n    resetn <= 0;\n    d <= 0;\n\n    #10 resetn <= 1;\n    #5      d <= 1;\n    #8      d <= 0;\n    #2      d <= 1;\n    #10     d <= 0;\n  end\nendmodule\n"},15923:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="proc find {{basedir .} {filterScript {}}} {\n    set oldwd [pwd]\n    cd $basedir\n    set cwd [pwd]\n    set filenames [glob -nocomplain * .*]\n    set files {}\n    set filt [string length $filterScript]\n    foreach filename $filenames {\n        if {!$filt || [eval $filterScript [list $filename]]} {\n            lappend files [file join $cwd $filename]\n        }\n        if {[file isdirectory $filename]} {\n            set files [concat $files [find $filename $filterScript]]\n        }\n    }\n    cd $oldwd\n    return $files\n}\n"},41740:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="h1. Textile Mode\n\nA paragraph without formatting.\n\np. A simple Paragraph.\n\n\nh2. Phrase Modifiers\n\nHere are some simple phrase modifiers: *strong*, _emphasis_, **bold**, and __italic__.\n\nA ??citation??, -deleted text-, +inserted text+, some ^superscript^, and some ~subscript~.\n\nA %span element% and @code element@\n\nA \"link\":http://example.com, a \"link with (alt text)\":urlAlias\n\n[urlAlias]http://example.com/\n\nAn image: !http://example.com/image.png! and an image with a link: !http://example.com/image.png!:http://example.com\n\nA sentence with a footnote.[123]\n\nfn123. The footnote is defined here.\n\nRegistered(r), Trademark(tm), and Copyright(c)\n\n\nh2. Headers\n\nh1. Top level\nh2. Second level\nh3. Third level\nh4. Fourth level\nh5. Fifth level\nh6. Lowest level\n\n\nh2.  Lists\n\n* An unordered list\n** foo bar\n*** foo bar\n**** foo bar\n** foo bar\n\n# An ordered list\n## foo bar\n### foo bar\n#### foo bar\n## foo bar\n\n- definition list := description\n- another item    := foo bar\n- spanning ines   :=\n                     foo bar\n\n                     foo bar =:\n\n\nh2. Attributes\n\nLayouts and phrase modifiers can be modified with various kinds of attributes: alignment, CSS ID, CSS class names, language, padding, and CSS styles.\n\nh3. Alignment\n\ndiv<. left align\ndiv>. right align\n\nh3. CSS ID and class name\n\nYou are a %(my-id#my-classname) rad% person.\n\nh3. Language\n\np[en_CA]. Strange weather, eh?\n\nh3. Horizontal Padding\n\np(())). 2em left padding, 3em right padding\n\nh3. CSS styling\n\np{background: red}. Fire!\n\n\nh2. Table\n\n|_.              Header 1               |_.      Header 2        |\n|{background:#ddd}. Cell with background|         Normal         |\n|\\2.         Cell spanning 2 columns                             |\n|/2.         Cell spanning 2 rows       |(cell-class). one       |\n|                                                two             |\n|>.                  Right aligned cell |<. Left aligned cell    |\n\n\nh3. A table with attributes:\n\ntable(#prices).\n|Adults|$5|\n|Children|$2|\n\n\nh2. Code blocks\n\nbc.\nfunction factorial(n) {\n    if (n === 0) {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\n\npre..\n                ,,,,,,\n            o#'9MMHb':'-,o,\n         .oH\":HH$' \"' ' -*R&o,\n        dMMM*\"\"'`'      .oM\"HM?.\n       ,MMM'          \"HLbd< ?&H      .:MH .\"\\          ` MM  MM&b\n     . \"*H    -        &MMMMMMMMMH:\n     .    dboo        MMMMMMMMMMMM.\n     .   dMMMMMMb      *MMMMMMMMMP.\n     .    MMMMMMMP        *MMMMMP .\n          `#MMMMM           MM6P ,\n       '    `MMMP\"           HM*`,\n        '    :MM             .- ,\n         '.   `#?..  .       ..'\n            -.   .         .-\n              ''-.oo,oo.-''\n\n\\. _(9>\n \\==_)\n  -'=\n\nh2. Temporarily disabling textile markup\n\nnotextile. Don't __touch this!__\n\nSurround text with double-equals to disable textile inline. Example: Use ==*asterisks*== for *strong* text.\n\n\nh2. HTML\n\nSome block layouts are simply textile versions of HTML tags with the same name, like @div@, @pre@, and @p@. HTML tags can also exist on their own line:\n\n<section>\n  <h1>Title</h1>\n  <p>Hello!</p>\n</section>\n\n\n"},99868:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="!TiddlyWiki Formatting\n* Rendered versions can be found at: http://www.tiddlywiki.com/#Reference\n\n|!Option            | !Syntax            |\n|bold font          | ''bold''           |\n|italic type        | //italic//         |\n|underlined text    | __underlined__     |\n|strikethrough text | --strikethrough--  |\n|superscript text   | super^^script^^    |\n|subscript text     | sub~~script~~      |\n|highlighted text   | @@highlighted@@    |\n|preformatted text  | {{{preformatted}}} |\n\n!Block Elements\n<<<\n!Heading 1\n\n!!Heading 2\n\n!!!Heading 3\n\n!!!!Heading 4\n\n!!!!!Heading 5\n<<<\n\n!!Lists\n<<<\n* unordered list, level 1\n** unordered list, level 2\n*** unordered list, level 3\n\n# ordered list, level 1\n## ordered list, level 2\n### unordered list, level 3\n\n; definition list, term\n: definition list, description\n<<<\n\n!!Blockquotes\n<<<\n> blockquote, level 1\n>> blockquote, level 2\n>>> blockquote, level 3\n\n> blockquote\n<<<\n\n!!Preformatted Text\n<<<\n{{{\npreformatted (e.g. code)\n}}}\n<<<\n\n!!Code Sections\n<<<\n{{{\nText style code\n}}}\n\n//{{{\nJS styled code. TiddlyWiki mixed mode should support highlighter switching in the future.\n//}}}\n\n\x3c!--{{{--\x3e\nXML styled code. TiddlyWiki mixed mode should support highlighter switching in the future.\n\x3c!--}}}--\x3e\n<<<\n\n!!Tables\n<<<\n|CssClass|k\n|!heading column 1|!heading column 2|\n|row 1, column 1|row 1, column 2|\n|row 2, column 1|row 2, column 2|\n|>|COLSPAN|\n|ROWSPAN| ... |\n|~| ... |\n|CssProperty:value;...| ... |\n|caption|c\n\n''Annotation:''\n* The {{{>}}} marker creates a \"colspan\", causing the current cell to merge with the one to the right.\n* The {{{~}}} marker creates a \"rowspan\", causing the current cell to merge with the one above.\n<<<\n!!Images /% TODO %/\ncf. [[TiddlyWiki.com|http://www.tiddlywiki.com/#EmbeddedImages]]\n\n!Hyperlinks\n* [[WikiWords|WikiWord]] are automatically transformed to hyperlinks to the respective tiddler\n** the automatic transformation can be suppressed by preceding the respective WikiWord with a tilde ({{{~}}}): {{{~WikiWord}}}\n* [[PrettyLinks]] are enclosed in square brackets and contain the desired tiddler name: {{{[[tiddler name]]}}}\n** optionally, a custom title or description can be added, separated by a pipe character ({{{|}}}): {{{[[title|target]]}}}<br>'''N.B.:''' In this case, the target can also be any website (i.e. URL).\n\n!Custom Styling\n* {{{@@CssProperty:value;CssProperty:value;...@@}}}<br>''N.B.:'' CSS color definitions should use lowercase letters to prevent the inadvertent creation of WikiWords.\n* <html><code>{{customCssClass{...}}}</code></html>\n* raw HTML can be inserted by enclosing the respective code in HTML tags: {{{<html> ... </html>}}}\n\n!Special Markers\n* {{{<br>}}} forces a manual line break\n* {{{----}}} creates a horizontal ruler\n* [[HTML entities|http://www.tiddlywiki.com/#HtmlEntities]]\n* [[HTML entities local|HtmlEntities]]\n* {{{<<macroName>>}}} calls the respective [[macro|Macros]]\n* To hide text within a tiddler so that it is not displayed, it can be wrapped in {{{/%}}} and {{{%/}}}.<br/>This can be a useful trick for hiding drafts or annotating complex markup.\n* To prevent wiki markup from taking effect for a particular section, that section can be enclosed in three double quotes: e.g. {{{\"\"\"WikiWord\"\"\"}}}.\n\n"},57475:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="Headings\n!Header 1\n!!Header 2\n!!!Header 3\n!!!!Header 4\n!!!!!Header 5\n!!!!!!Header 6\n\nStyling\n-=titlebar=-\n^^ Box on multi\nlines\nof content^^\n__bold__\n''italic''\n===underline===\n::center::\n--Line Through--\n\nOperators\n~np~No parse~/np~\n\nLink\n[link|desc|nocache]\n\nWiki\n((Wiki))\n((Wiki|desc))\n((Wiki|desc|timeout))\n\nTable\n||row1 col1|row1 col2|row1 col3\nrow2 col1|row2 col2|row2 col3\nrow3 col1|row3 col2|row3 col3||\n\nLists:\n*bla\n**bla-1\n++continue-bla-1\n***bla-2\n++continue-bla-1\n*bla\n+continue-bla\n#bla\n** tra-la-la\n+continue-bla\n#bla\n\nPlugin (standard):\n{PLUGIN(attr=\"my attr\")}\nPlugin Body\n{PLUGIN}\n\nPlugin (inline):\n{plugin attr=\"my attr\"}\n\n"},85126:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='# This is a TOML document. Boom.\n\ntitle = "TOML Example"\n\n[owner]\nname = "Tom Preston-Werner"\norganization = "GitHub"\nbio = "GitHub Cofounder & CEO\nLikes tater tots and beer."\ndob = 1979-05-27T07:32:00Z # First class dates? Why not?\n\n[database]\nserver = "192.168.1.1"\nports = [ 8001, 8001, 8002 ]\nconnection_max = 5000\nenabled = true\n\n[servers]\n\n  # You can indent as you please. Tabs or spaces. TOML don\'t care.\n  [servers.alpha]\n  ip = "10.0.0.1"\n  dc = "eqdc10"\n  \n  [servers.beta]\n  ip = "10.0.0.2"\n  dc = "eqdc10"\n  \n[clients]\ndata = [ ["gamma", "delta"], [1, 2] ]\n\n# Line breaks are OK when inside arrays\nhosts = [\n  "alpha",\n  "omega"\n]'},95685:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<!doctype html>\n<html>\n  <head>\n    <title>My Tornado web application</title>\n  </head>\n  <body>\n    <h1>\n      {{ title }}\n    </h1>\n    <ul class="my-list">\n      {% for item in items %}\n        <li>{% item.name %}</li>\n      {% empty %}\n        <li>You have no items in your list.</li>\n      {% end %}\n    </ul>\n  </body>\n</html>\n\n'},61869:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='\'\\" t\n.\\"     Title: mkvextract\n.TH "MKVEXTRACT" "1" "2015\\-02\\-28" "MKVToolNix 7\\&.7\\&.0" "User Commands"\n.\\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.ie \\n(.g .ds Aq \\(aq\n.el       .ds Aq \'\n.\\" -----------------------------------------------------------------\n.nh\n.\\" disable justification (adjust text to left margin only)\n.ad l\n.\\" -----------------------------------------------------------------\n.SH "NAME"\nmkvextract \\- extract tracks from Matroska(TM) files into other files\n.SH "SYNOPSIS"\n.HP \\w\'\\fBmkvextract\\fR\\ \'u\n\\fBmkvextract\\fR {mode} {source\\-filename} [options] [extraction\\-spec]\n.SH "DESCRIPTION"\n.PP\n.B mkvextract\nextracts specific parts from a\n.I Matroska(TM)\nfile to other useful formats\\&. The first argument,\n\\fBmode\\fR, tells\n\\fBmkvextract\\fR(1)\nwhat to extract\\&. Currently supported is the extraction of\ntracks,\ntags,\nattachments,\nchapters,\nCUE sheets,\ntimecodes\nand\ncues\\&. The second argument is the name of the source file\\&. It must be a\nMatroska(TM)\nfile\\&. All following arguments are options and extraction specifications; both of which depend on the selected mode\\&.\n.SS "Common options"\n.PP\nThe following options are available in all modes and only described once in this section\\&.\n.PP\n\\fB\\-f\\fR, \\fB\\-\\-parse\\-fully\\fR\n.RS 4\nSets the parse mode to \\*(Aqfull\\*(Aq\\&. The default mode does not parse the whole file but uses the meta seek elements for locating the required elements of a source file\\&. In 99% of all cases this is enough\\&. But for files that do not contain meta seek elements or which are damaged the user might have to use this mode\\&. A full scan of a file can take a couple of minutes while a fast scan only takes seconds\\&.\n.RE\n.PP\n\\fB\\-\\-command\\-line\\-charset\\fR \\fIcharacter\\-set\\fR\n.RS 4\nSets the character set to convert strings given on the command line from\\&. It defaults to the character set given by system\\*(Aqs current locale\\&.\n.RE\n.PP\n\\fB\\-\\-output\\-charset\\fR \\fIcharacter\\-set\\fR\n.RS 4\nSets the character set to which strings are converted that are to be output\\&. It defaults to the character set given by system\\*(Aqs current locale\\&.\n.RE\n.PP\n\\fB\\-r\\fR, \\fB\\-\\-redirect\\-output\\fR \\fIfile\\-name\\fR\n.RS 4\nWrites all messages to the file\n\\fIfile\\-name\\fR\ninstead of to the console\\&. While this can be done easily with output redirection there are cases in which this option is needed: when the terminal reinterprets the output before writing it to a file\\&. The character set set with\n\\fB\\-\\-output\\-charset\\fR\nis honored\\&.\n.RE\n.PP\n\\fB\\-\\-ui\\-language\\fR \\fIcode\\fR\n.RS 4\nForces the translations for the language\n\\fIcode\\fR\nto be used (e\\&.g\\&. \\*(Aqde_DE\\*(Aq for the German translations)\\&. It is preferable to use the environment variables\n\\fILANG\\fR,\n\\fILC_MESSAGES\\fR\nand\n\\fILC_ALL\\fR\nthough\\&. Entering \\*(Aqlist\\*(Aq as the\n\\fIcode\\fR\nwill cause\n\\fBmkvextract\\fR(1)\nto output a list of available translations\\&.\n\n.\\" [...]\n\n.SH "SEE ALSO"\n.PP\n\fBmkvmerge\fR(1),\n\fBmkvinfo\fR(1),\n\fBmkvpropedit\fR(1),\n\fBmmg\fR(1)\n.SH "WWW"\n.PP\nThe latest version can always be found at\n\\m[blue]\\fBthe MKVToolNix homepage\\fR\\m[]\\&\\s-2\\u[1]\\d\\s+2\\&.\n.SH "AUTHOR"\n.PP\n\\(co \\fBMoritz Bunkus\\fR <\\&moritz@bunkus\\&.org\\&>\n.RS 4\nDeveloper\n.RE\n.SH "NOTES"\n.IP " 1." 4\nthe MKVToolNix homepage\n.RS 4\n\\%https://www.bunkus.org/videotools/mkvtoolnix/\n.RE\n\n'},85218:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="import * as React from 'react';\n\ninterface IState {\n  clicks: number;\n}\n\nexport class Clicker extends React.Component<any, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clicks: 0,\n    };\n  }\n\n  public clickHandler = () => {\n    this.setState({ clicks: this.state.clicks + 1 });\n  }\n\n  public render() {\n    return (\n      <div>\n        <p>You have clicked the button {this.state.clicks} time(s).</p>\n        <p>\n          <button onClick={this.clickHandler}>click me</button>\n        </p>\n      </div>\n    );\n  }\n}"},2262:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='[MODULE_PARAMETERS]\n# This section shall contain the values of all parameters that are defined in your TTCN-3 modules.\n\n[LOGGING]\n# In this section you can specify the name of the log file and the classes of events\n# you want to log into the file or display on console (standard error).\n\nLogFile := "logs/%e.%h-%r.%s"\nFileMask := LOG_ALL | DEBUG | MATCHING\nConsoleMask := ERROR | WARNING | TESTCASE | STATISTICS | PORTEVENT\n\nLogSourceInfo := Yes\nAppendFile := No\nTimeStampFormat := DateTime\nLogEventTypes := Yes\nSourceInfoFormat := Single\nLogEntityName := Yes\n\n[TESTPORT_PARAMETERS]\n# In this section you can specify parameters that are passed to Test Ports.\n\n[DEFINE]\n# In this section you can create macro definitions,\n# that can be used in other configuration file sections except [INCLUDE].\n\n[INCLUDE]\n# To use configuration settings given in other configuration files,\n# the configuration files just need to be listed in this section, with their full or relative pathnames.\n\n[EXTERNAL_COMMANDS]\n# This section can define external commands (shell scripts) to be executed by the ETS\n# whenever a control part or test case is started or terminated.\n\nBeginTestCase := ""\nEndTestCase := ""\nBeginControlPart := ""\nEndControlPart := ""\n\n[EXECUTE]\n# In this section you can specify what parts of your test suite you want to execute.\n\n[GROUPS]\n# In this section you can specify groups of hosts. These groups can be used inside the\n# [COMPONENTS] section to restrict the creation of certain PTCs to a given set of hosts.\n\n[COMPONENTS]\n# This section consists of rules restricting the location of created PTCs.\n\n[MAIN_CONTROLLER]\n# The options herein control the behavior of MC.\n\nTCPPort := 0\nKillTimer := 10.0\nNumHCs := 0\nLocalAddress :=\n'},49007:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='module Templates {\n  /* import types from ASN.1 */\n  import from Types language "ASN.1:1997" all;\n\n  /* During the conversion phase from ASN.1 to TTCN-3 */\n  /* - the minus sign (Message-Type) within the identifiers will be replaced by underscore (Message_Type)*/\n  /* - the ASN.1 identifiers matching a TTCN-3 keyword (objid) will be postfixed with an underscore (objid_)*/\n\n  // simple types\n\n  template SenderID localObjid := objid {itu_t(0) identified_organization(4) etsi(0)};\n\n  // complex types\n\n  /* ASN.1 Message-Type mapped to TTCN-3 Message_Type */\n  template Message receiveMsg(template (present) Message_Type p_messageType) := {\n    header := p_messageType,\n    body := ?\n  }\n\n  /* ASN.1 objid mapped to TTCN-3 objid_ */\n  template Message sendInviteMsg := {\n      header := inviteType,\n      body := {\n        /* optional fields may be assigned by omit or may be ignored/skipped */\n        description := "Invite Message",\n        data := \'FF\'O,\n        objid_ := localObjid\n      }\n  }\n\n  template Message sendAcceptMsg modifies sendInviteMsg := {\n      header := acceptType,\n      body := {\n        description := "Accept Message"\n      }\n    };\n\n  template Message sendErrorMsg modifies sendInviteMsg := {\n      header := errorType,\n      body := {\n        description := "Error Message"\n      }\n    };\n\n  template Message expectedErrorMsg := {\n      header := errorType,\n      body := ?\n    };\n\n  template Message expectedInviteMsg modifies expectedErrorMsg := {\n      header := inviteType\n    };\n\n  template Message expectedAcceptMsg modifies expectedErrorMsg := {\n      header := acceptType\n    };\n\n} with { encode "BER:1997" }\n'},576:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n\n<http://purl.org/net/bsletten> \n    a foaf:Person;\n    foaf:interest <http://www.w3.org/2000/01/sw/>;\n    foaf:based_near [\n        geo:lat "34.0736111" ;\n        geo:lon "-118.3994444"\n   ]\n\n\n'},26750:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset="UTF-8">\n        <title>{% block title %}Welcome!{% endblock %}</title>\n        {% block stylesheets %}{% endblock %}\n    </head>\n    <body>\n        {% block body %}{% endblock %}\n        {% block javascripts %}{% endblock %}\n    </body>\n</html>\n'},79284:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="/* Game of Life\n * Implemented in TypeScript\n * To learn more about TypeScript, please visit http://www.typescriptlang.org/\n */\n\nnamespace Conway {\n\n  export class Cell {\n    public row: number;\n    public col: number;\n    public live: boolean;\n\n    constructor(row: number, col: number, live: boolean) {\n      this.row = row;\n      this.col = col;\n      this.live = live;\n    }\n  }\n\n  export class GameOfLife {\n    private gridSize: number;\n    private canvasSize: number;\n    private lineColor: string;\n    private liveColor: string;\n    private deadColor: string;\n    private initialLifeProbability: number;\n    private animationRate: number;\n    private cellSize: number;\n    private context: CanvasRenderingContext2D;\n    private world;\n\n\n    constructor() {\n      this.gridSize = 50;\n      this.canvasSize = 600;\n      this.lineColor = '#cdcdcd';\n      this.liveColor = '#666';\n      this.deadColor = '#eee';\n      this.initialLifeProbability = 0.5;\n      this.animationRate = 60;\n      this.cellSize = 0;\n      this.world = this.createWorld();\n      this.circleOfLife();\n    }\n\n    public createWorld() {\n      return this.travelWorld( (cell : Cell) =>  {\n        cell.live = Math.random() < this.initialLifeProbability;\n        return cell;\n      });\n    }\n\n    public circleOfLife() : void {\n      this.world = this.travelWorld( (cell: Cell) => {\n        cell = this.world[cell.row][cell.col];\n        this.draw(cell);\n        return this.resolveNextGeneration(cell);\n      });\n      setTimeout( () => {this.circleOfLife()}, this.animationRate);\n    }\n\n    public resolveNextGeneration(cell : Cell) {\n      var count = this.countNeighbors(cell);\n      var newCell = new Cell(cell.row, cell.col, cell.live);\n      if(count < 2 || count > 3) newCell.live = false;\n      else if(count == 3) newCell.live = true;\n      return newCell;\n    }\n\n    public countNeighbors(cell : Cell) {\n      var neighbors = 0;\n      for(var row = -1; row <=1; row++) {\n        for(var col = -1; col <= 1; col++) {\n          if(row == 0 && col == 0) continue;\n          if(this.isAlive(cell.row + row, cell.col + col)) {\n            neighbors++;\n          }\n        }\n      }\n      return neighbors;\n    }\n\n    public isAlive(row : number, col : number) {\n      if(row < 0 || col < 0 || row >= this.gridSize || col >= this.gridSize) return false;\n      return this.world[row][col].live;\n    }\n\n    public travelWorld(callback) {\n      var result = [];\n      for(var row = 0; row < this.gridSize; row++) {\n        var rowData = [];\n        for(var col = 0; col < this.gridSize; col++) {\n          rowData.push(callback(new Cell(row, col, false)));\n        }\n        result.push(rowData);\n      }\n      return result;\n    }\n\n    public draw(cell : Cell) {\n      if(this.context == null) this.context = this.createDrawingContext();\n      if(this.cellSize == 0) this.cellSize = this.canvasSize/this.gridSize;\n\n      this.context.strokeStyle = this.lineColor;\n      this.context.strokeRect(cell.row * this.cellSize, cell.col*this.cellSize, this.cellSize, this.cellSize);\n      this.context.fillStyle = cell.live ? this.liveColor : this.deadColor;\n      this.context.fillRect(cell.row * this.cellSize, cell.col*this.cellSize, this.cellSize, this.cellSize);\n    }\n\n    public createDrawingContext() {\n      var canvas = <HTMLCanvasElement> document.getElementById('conway-canvas');\n      if(canvas == null) {\n          canvas = document.createElement('canvas');\n          canvas.id = 'conway-canvas';\n          canvas.width = this.canvasSize;\n          canvas.height = this.canvasSize;\n          document.body.appendChild(canvas);\n      }\n      return canvas.getContext('2d');\n    }\n  }\n}\n\nvar game = new Conway.GameOfLife();\n"},45259:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='Imports System\nImports System.Collections.Generic\n\nModule Module1\n\n    Sub Main()\n        Dim a As New M8Ball\n\n        Do While True\n\n            Dim q As String = ""\n            Console.Write("ask me about the future... ")\n            q = Console.ReadLine()\n\n            If q.Trim <> "" Then\n                Console.WriteLine("the answer is... {0}", a.getAnswer(q))\n            Else\n                Exit Do\n            End If\n        Loop\n\n    End Sub\n\nEnd Module\n\nClass M8Ball\n\n    Public Answers As System.Collections.Generic.Dictionary(Of Integer, String)\n\n    Public Sub New()\n        Answers = New System.Collections.Generic.Dictionary(Of Integer, String)\n        Answers.Add(0, "It is certain")\n        Answers.Add(1, "It is decidedly so")\n        Answers.Add(2, "Without a doubt")\n        Answers.Add(3, "Yes, definitely")\n        Answers.Add(4, "You may rely on ")\n        Answers.Add(5, "As I see it, yes")\n        Answers.Add(6, "Most likely")\n        Answers.Add(7, "Outlook good")\n        Answers.Add(8, "Signs point to yes")\n        Answers.Add(9, "Yes")\n        Answers.Add(10, "Reply hazy, try again")\n        Answers.Add(11, "Ask again later")\n        Answers.Add(12, "Better not tell you now")\n        Answers.Add(13, "Cannot predict now")\n        Answers.Add(14, "Concentrate and ask again")\n        Answers.Add(15, "Don\'t count on it")\n        Answers.Add(16, "My reply is no")\n        Answers.Add(17, "My sources say no")\n        Answers.Add(18, "Outlook not so")\n        Answers.Add(19, "Very doubtful")\n    End Sub\n\n    Public Function getAnswer(theQuestion As String) As String\n        Dim r As New Random\n        Return Answers(r.Next(0, 19))\n    End Function\n\nEnd Class\n'},40515:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="' Pete Guhl\n' 03-04-2012\n'\n' Basic VBScript support for codemirror2\n\nConst ForReading = 1, ForWriting = 2, ForAppending = 8\n\nCall Sub020_PostBroadcastToUrbanAirship(strUserName, strPassword, intTransmitID, strResponse)\n\nIf Not IsNull(strResponse) AND Len(strResponse) = 0 Then\n  boolTransmitOkYN = False\nElse\n  ' WScript.Echo \"Oh Happy Day! Oh Happy DAY!\"\n  boolTransmitOkYN = True\nEnd If\n"},17530:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='## Velocity Code Demo\n#*\n   based on PL/SQL mode by Peter Raganitsch, adapted to Velocity by Steve O\'Hara ( http://www.pivotal-solutions.co.uk )\n   August 2011\n*#\n\n#*\n   This is a multiline comment.\n   This is the second line\n*#\n\n#[[ hello steve\n   This has invalid syntax that would normally need "poor man\'s escaping" like:\n\n   #define()\n\n   ${blah\n]]#\n\n#include( "disclaimer.txt" "opinion.txt" )\n#include( $foo $bar )\n\n#parse( "lecorbusier.vm" )\n#parse( $foo )\n\n#evaluate( \'string with VTL #if(true)will be displayed#end\' )\n\n#define( $hello ) Hello $who #end #set( $who = "World!") $hello ## displays Hello World!\n\n#foreach( $customer in $customerList )\n\n    $foreach.count $customer.Name\n\n    #if( $foo == ${bar})\n        it\'s true!\n        #break\n    #{else}\n        it\'s not!\n        #stop\n    #end\n\n    #if ($foreach.parent.hasNext)\n        $velocityCount\n    #end\n#end\n\n$someObject.getValues("this is a string split\n        across lines")\n\n$someObject("This plus $something in the middle").method(7567).property\n\n#set($something = "Parseable string with \'$quotes\'!")\n\n#macro( tablerows $color $somelist )\n    #foreach( $something in $somelist )\n        <tr><td bgcolor=$color>$something</td></tr>\n        <tr><td bgcolor=$color>$bodyContent</td></tr>\n    #end\n#end\n\n#tablerows("red" ["dadsdf","dsa"])\n#@tablerows("red" ["dadsdf","dsa"]) some body content #end\n\n   Variable reference: #set( $monkey = $bill )\n   String literal: #set( $monkey.Friend = \'monica\' )\n   Property reference: #set( $monkey.Blame = $whitehouse.Leak )\n   Method reference: #set( $monkey.Plan = $spindoctor.weave($web) )\n   Number literal: #set( $monkey.Number = 123 )\n   Range operator: #set( $monkey.Numbers = [1..3] )\n   Object list: #set( $monkey.Say = ["Not", $my, "fault"] )\n   Object map: #set( $monkey.Map = {"banana" : "good", "roast beef" : "bad"})\n\nThe RHS can also be a simple arithmetic expression, such as:\nAddition: #set( $value = $foo + 1 )\n   Subtraction: #set( $value = $bar - 1 )\n   Multiplication: #set( $value = $foo * $bar )\n   Division: #set( $value = $foo / $bar )\n   Remainder: #set( $value = $foo % $bar )\n\n\n'},36465:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='`include "first_counter.v"\nmodule first_counter_tb();\n// Declare inputs as regs and outputs as wires\nreg clock, reset, enable;\nwire [3:0] counter_out;\n\n// Initialize all variables\ninitial begin\n  $display ("time\t clk reset enable counter");\n  $monitor ("%g\t %b   %b     %b      %b",\n    $time, clock, reset, enable, counter_out);\n  clock = 1;       // initial value of clock\n  reset = 0;       // initial value of reset\n  enable = 0;      // initial value of enable\n   #5  reset = 1;    // Assert the reset\n   #10  reset = 0;   // De-assert the reset\n   #10  enable = 1;  // Assert enable\n   #100  enable = 0; // De-assert enable\n   #5  $finish;      // Terminate simulation\nend\n\n// Clock generator\nalways begin\n   #5  clock = ~clock; // Toggle clock every 5 ticks\nend\n\n// Connect DUT to test bench\nfirst_counter U_counter (\nclock,\nreset,\nenable,\ncounter_out\n);\n\nendmodule\n'},84296:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="LIBRARY ieee;\nUSE ieee.std_logic_1164.ALL;\nUSE ieee.numeric_std.ALL;\n\nENTITY tb IS\nEND tb;\n\nARCHITECTURE behavior OF tb IS\n   --Inputs\n   signal a : unsigned(2 downto 0) := (others => '0');\n   signal b : unsigned(2 downto 0) := (others => '0');\n    --Outputs\n   signal a_eq_b : std_logic;\n   signal a_le_b : std_logic;\n   signal a_gt_b : std_logic;\n\n    signal i,j : integer;\n\nBEGIN\n\n    -- Instantiate the Unit Under Test (UUT)\n   uut: entity work.comparator PORT MAP (\n          a => a,\n          b => b,\n          a_eq_b => a_eq_b,\n          a_le_b => a_le_b,\n          a_gt_b => a_gt_b\n        );\n\n   -- Stimulus process\n   stim_proc: process\n   begin\n        for i in 0 to 8 loop\n            for j in 0 to 8 loop\n                a <= to_unsigned(i,3); --integer to unsigned type conversion\n                b <= to_unsigned(j,3);\n                wait for 10 ns;\n            end loop;\n        end loop;\n   end process;\n\nEND;\n\n"},64840:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<template>\n  <div>\n    <transition name="router-fade" mode="out-in">\n      <keep-alive>\n          <router-view v-if="$route.meta.keepAlive"></router-view>\n      </keep-alive>\n      </transition>\n      <transition name="router-fade" mode="out-in">\n      <router-view v-if="!$route.meta.keepAlive"></router-view>\n    </transition>\n    <svg-icon></svg-icon>  \n  </div>\n</template>\n\n<script>\n  import svgIcon from \'./components/common/svg\';\n  export default {\n    components:{\n      svgIcon\n    },\n  }\n<\/script>\n\n<style lang="scss">\n  @import \'./style/common\';\n  .router-fade-enter-active, .router-fade-leave-active {\n      transition: opacity .3s;\n  }\n  .router-fade-enter, .router-fade-leave-active {\n      opacity: 0;\n  }\n</style>'},26815:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="[NamedConstructor=Image(optional unsigned long width, optional unsigned long height)]\ninterface HTMLImageElement : HTMLElement {\n           attribute DOMString alt;\n           attribute DOMString src;\n           attribute DOMString srcset;\n           attribute DOMString sizes;\n           attribute DOMString? crossOrigin;\n           attribute DOMString useMap;\n           attribute boolean isMap;\n           attribute unsigned long width;\n           attribute unsigned long height;\n  readonly attribute unsigned long naturalWidth;\n  readonly attribute unsigned long naturalHeight;\n  readonly attribute boolean complete;\n  readonly attribute DOMString currentSrc;\n\n  // also has obsolete members\n};\n\npartial interface HTMLImageElement {\n  attribute DOMString name;\n  attribute DOMString lowsrc;\n  attribute DOMString align;\n  attribute unsigned long hspace;\n  attribute unsigned long vspace;\n  attribute DOMString longDesc;\n\n  [TreatNullAs=EmptyString] attribute DOMString border;\n};\n\n"},98817:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='<?xml version="1.0"?>\n<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">\n  <connectionStrings>\n    <add name="MyDB" \n      connectionString="value for the deployed Web.config file" \n      xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>\n  </connectionStrings>\n  <system.web>\n    <customErrors defaultRedirect="GenericError.htm"\n      mode="RemoteOnly" xdt:Transform="Replace">\n      <error statusCode="500" redirect="InternalError.htm"/>\n    </customErrors>\n  </system.web>\n</configuration>'},92396:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=' \nxquery version "1.0-ml";\n(: this is\n : a \n   "comment" :)\nlet $let := <x attr="value">"test"<func>function() $var {function()} {$var}</func></x>\nlet $joe:=1\nreturn element element {\n  attribute attribute { 1 },\n  element test { \'a\' }, \n  attribute foo { "bar" },\n  fn:doc()[ foo/@bar eq $let ],\n  //x }  \n \n(: a more \'evil\' test :)\n(: Modified Blakeley example (: with nested comment :) ... :)\ndeclare private function local:declare() {()};\ndeclare private function local:private() {()};\ndeclare private function local:function() {()};\ndeclare private function local:local() {()};\nlet $let := <let>let $let := "let"</let>\nreturn element element {\n  attribute attribute { try { xdmp:version() } catch($e) { xdmp:log($e) } },\n  attribute fn:doc { "bar" castable as xs:string },\n  element text { text { "text" } },\n  fn:doc()[ child::eq/(@bar | attribute::attribute) eq $let ],\n  //fn:doc\n}\n\n\n\nxquery version "1.0-ml";\n\n(: Copyright 2006-2010 Mark Logic Corporation. :)\n\n(:\n : Licensed under the Apache License, Version 2.0 (the "License");\n : you may not use this file except in compliance with the License.\n : You may obtain a copy of the License at\n :\n :     http://www.apache.org/licenses/LICENSE-2.0\n :\n : Unless required by applicable law or agreed to in writing, software\n : distributed under the License is distributed on an "AS IS" BASIS,\n : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n : See the License for the specific language governing permissions and\n : limitations under the License.\n :)\n\nmodule namespace json = "http://marklogic.com/json";\ndeclare default function namespace "http://www.w3.org/2005/xpath-functions";\n\n(: Need to backslash escape any double quotes, backslashes, and newlines :)\ndeclare function json:escape($s as xs:string) as xs:string {\n  let $s := replace($s, "\\", "\\\\")\n  let $s := replace($s, """", "\\""")\n  let $s := replace($s, codepoints-to-string((13, 10)), "\\n")\n  let $s := replace($s, codepoints-to-string(13), "\\n")\n  let $s := replace($s, codepoints-to-string(10), "\\n")\n  return $s\n};\n\ndeclare function json:atomize($x as element()) as xs:string {\n  if (count($x/node()) = 0) then \'null\'\n  else if ($x/@type = "number") then\n    let $castable := $x castable as xs:float or\n                     $x castable as xs:double or\n                     $x castable as xs:decimal\n    return\n    if ($castable) then xs:string($x)\n    else error(concat("Not a number: ", xdmp:describe($x)))\n  else if ($x/@type = "boolean") then\n    let $castable := $x castable as xs:boolean\n    return\n    if ($castable) then xs:string(xs:boolean($x))\n    else error(concat("Not a boolean: ", xdmp:describe($x)))\n  else concat(\'"\', json:escape($x), \'"\')\n};\n\n(: Print the thing that comes after the colon :)\ndeclare function json:print-value($x as element()) as xs:string {\n  if (count($x/*) = 0) then\n    json:atomize($x)\n  else if ($x/@quote = "true") then\n    concat(\'"\', json:escape(xdmp:quote($x/node())), \'"\')\n  else\n    string-join((\'{\',\n      string-join(for $i in $x/* return json:print-name-value($i), ","),\n    \'}\'), "")\n};\n\n(: Print the name and value both :)\ndeclare function json:print-name-value($x as element()) as xs:string? {\n  let $name := name($x)\n  let $first-in-array :=\n    count($x/preceding-sibling::*[name(.) = $name]) = 0 and\n    (count($x/following-sibling::*[name(.) = $name]) > 0 or $x/@array = "true")\n  let $later-in-array := count($x/preceding-sibling::*[name(.) = $name]) > 0\n  return\n\n  if ($later-in-array) then\n    ()  (: I was handled previously :)\n  else if ($first-in-array) then\n    string-join((\'"\', json:escape($name), \'":[\',\n      string-join((for $i in ($x, $x/following-sibling::*[name(.) = $name]) return json:print-value($i)), ","),\n    \']\'), "")\n   else\n     string-join((\'"\', json:escape($name), \'":\', json:print-value($x)), "")\n};\n\n(:~\n  Transforms an XML element into a JSON string representation.  See http://json.org.\n  <p/>\n  Sample usage:\n  <pre>\n    xquery version "1.0-ml";\n    import module namespace json="http://marklogic.com/json" at "json.xqy";\n    json:serialize(&lt;foo&gt;&lt;bar&gt;kid&lt;/bar&gt;&lt;/foo&gt;)\n  </pre>\n  Sample transformations:\n  <pre>\n  &lt;e/&gt; becomes {"e":null}\n  &lt;e&gt;text&lt;/e&gt; becomes {"e":"text"}\n  &lt;e&gt;quote " escaping&lt;/e&gt; becomes {"e":"quote \\" escaping"}\n  &lt;e&gt;backslash \\ escaping&lt;/e&gt; becomes {"e":"backslash \\ escaping"}\n  &lt;e&gt;&lt;a&gt;text1&lt;/a&gt;&lt;b&gt;text2&lt;/b&gt;&lt;/e&gt; becomes {"e":{"a":"text1","b":"text2"}}\n  &lt;e&gt;&lt;a&gt;text1&lt;/a&gt;&lt;a&gt;text2&lt;/a&gt;&lt;/e&gt; becomes {"e":{"a":["text1","text2"]}}\n  &lt;e&gt;&lt;a array="true"&gt;text1&lt;/a&gt;&lt;/e&gt; becomes {"e":{"a":["text1"]}}\n  &lt;e&gt;&lt;a type="boolean"&gt;false&lt;/a&gt;&lt;/e&gt; becomes {"e":{"a":false}}\n  &lt;e&gt;&lt;a type="number"&gt;123.5&lt;/a&gt;&lt;/e&gt; becomes {"e":{"a":123.5}}\n  &lt;e quote="true"&gt;&lt;div attrib="value"/&gt;&lt;/e&gt; becomes {"e":"&lt;div attrib=\\"value\\"/&gt;"}\n  </pre>\n  <p/>\n  Namespace URIs are ignored. Namespace prefixes are included in the JSON name.\n  <p/>\n  Attributes are ignored, except for the special attribute @array="true" that\n  indicates the JSON serialization should write the node, even if single, as an\n  array, and the attribute @type that can be set to "boolean" or "number" to\n  dictate the value should be written as that type (unquoted).  There\'s also\n  an @quote attribute that when set to true writes the inner content as text\n  rather than as structured JSON, useful for sending some XHTML over the\n  wire.\n  <p/>\n  Text nodes within mixed content are ignored.\n\n  @param $x Element node to convert\n  @return String holding JSON serialized representation of $x\n\n  @author Jason Hunter\n  @version 1.0.1\n    \n  Ported to xquery 1.0-ml; double escaped backslashes in json:escape\n:)\ndeclare function json:serialize($x as element())  as xs:string {\n  string-join((\'{\', json:print-name-value($x), \'}\'), "")\n};\n    \n'},76150:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="// example yacas code\nGraph(edges_IsList) <-- [\n    Local(v, e, f, t);\n\n    vertices := {};\n\n    ForEach (e, edges) [\n        If (IsList(e), e := Head(e));\n        {f, t} := Tail(Listify(e));\n\n        DestructiveAppend(vertices, f);\n        DestructiveAppend(vertices, t);\n    ];\n\n    Graph(RemoveDuplicates(vertices), edges);\n];\n\n10 # IsGraph(Graph(vertices_IsList, edges_IsList)) <-- True;\n20 # IsGraph(_x) <-- False;\n\nEdges(Graph(vertices_IsList, edges_IsList)) <-- edges;\nVertices(Graph(vertices_IsList, edges_IsList)) <-- vertices;\n\nAdjacencyList(g_IsGraph) <-- [\n    Local(l, vertices, edges, e, op, f, t);\n\n    l := Association'Create();\n\n    vertices := Vertices(g);\n    ForEach (v, vertices)\n        Association'Set(l, v, {});\n\n    edges := Edges(g);\n\n    ForEach(e, edges) [\n        If (IsList(e), e := Head(e));\n        {op, f, t} := Listify(e);\n        DestructiveAppend(Association'Get(l, f), t);\n        If (String(op) = \"<->\", DestructiveAppend(Association'Get(l, t), f));\n    ];\n\n    l;\n];\n\n"},84900:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='---\nreceipt:     Oz-Ware Purchase Invoice\ndate:        2007-08-06\ncustomer:\n    given:   Dorothy\n    family:  Gale\n\nitems:\n    - part_no:   A4786\n      descrip:   Water Bucket (Filled)\n      price:     1.47\n      quantity:  4\n\n    - part_no:   E1628\n      descrip:   High Heeled "Ruby" Slippers\n      size:       8\n      price:     100.27\n      quantity:  1\n\nbill-to:  &id001\n    street: |\n            123 Tornado Alley\n            Suite 16\n    city:   East Centerville\n    state:  KS\n\nship-to:  *id001\n\nspecialDelivery:  >\n    Follow the Yellow Brick\n    Road to the Emerald City.\n    Pay no attention to the\n    man behind the curtain.\n---\n\nGitHub Flavored Markdown\n========================\n\nEverything from markdown plus GFM features:\n\n## URL autolinking\n\nUnderscores_are_allowed_between_words.\n\n## Strikethrough text\n\nGFM adds syntax to strikethrough text, which is missing from standard Markdown.\n\n~~Mistaken text.~~\n~~**works with other formatting**~~\n\n~~spans across\nlines~~\n\n## Fenced code blocks (and syntax highlighting)\n\n```javascript\nfor (var i = 0; i < items.length; i++) {\n  console.log(items[i], i); // log them\n}\n```\n\n## Task Lists\n\n- [ ] Incomplete task list item\n- [x] **Completed** task list item\n\n## A bit of GitHub spice\n\n* SHA: be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2\n* User@SHA ref: mojombo@be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2\n* User/Project@SHA: mojombo/god@be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2\n* #Num: #1\n* User/#Num: mojombo#1\n* User/Project#Num: mojombo/god#1\n\nSee http://github.github.com/github-flavored-markdown/.\n\n'},51051:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default="%TAG ! tag:clarkevans.com,2002:\n--- !shape\n  # Use the ! handle for presenting\n  # tag:clarkevans.com,2002:circle\n- !circle\n  center: &ORIGIN {x: 73, y: 129}\n  radius: 7\n- !line\n  start: *ORIGIN\n  finish: { x: 89, y: 102 }\n- !label\n  start: *ORIGIN\n  color: 0xFFEEBB\n  text: Pretty vector drawing.\n"},62290:function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default='#include    "ti83plus.inc"\n#define     progStart   $9D95\n    .org progStart-2\n    .db $BB,$6D\n\n    bcall(_ClrLCDFull)\n    ld hl,0\n    ld (CurCol),hl\n    ld hl,Message\n    bcall(_PutS) ; Displays the string\n    bcall(_NewLine)\n    ret\nMessage:\n    .db "Hello world!",0\n\n'}}]);
//# sourceMappingURL=code-example-vendor.8a7ba00f.chunk.js.map